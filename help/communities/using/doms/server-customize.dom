<?xml version="1.1" encoding="UTF-8" standalone="yes"?> 
<html> 
 <head> 
  <meta content="2018-05-17T05:55:23.179-0400" name="locHandOffDate" /> 
  <meta content="fee3906e-0499-4bb7-81e5-71465ca1eb0f" name="jcr:uuid" /> 
  <meta content="" name="jcr:versionHistory" /> 
  <meta content="https://helpx.adobe.com/experience-manager/6-4/communities/using/server-customize.html" name="publishExternalURL" /> 
  <meta content="" name="jcr:primaryType" /> 
  <meta content="2018-04-03T07:55:35.607-0400" name="cq:lastReplicated" /> 
  <meta content="admin" name="jcr:createdBy" /> 
  <meta content="2018-04-03T07:55:33.984-0400" name="topicBrowsingSortDate" /> 
  <meta content="carlino" name="cq:lastReplicatedBy" /> 
  <meta content="Server-side Customization" name="seoTitle" /> 
  <meta content="2017-12-01T19:03:22.805-0500" name="jcr:created" /> 
  <meta content="2018-04-03T07:55:33.984-0400" name="publishExternalDate" /> 
  <meta content="82f0ea29-12f4-47ff-b583-dc6396697f88" name="jcr:predecessors" /> 
  <meta content="false" name="isReadyForLocalization" /> 
  <meta content="2018-05-17T05:55:23.180-0400" name="cq:lastModified" /> 
  <meta content="/content/docs/en/aem/6-3/develop/communities/scf/server-customize" name="qaNotes" /> 
  <meta content="2017-10-31T16:33:19.894-0400" name="firstPublishExternalDate" /> 
  <meta content="help/components/pages/article-3" name="sling:resourceType" /> 
  <meta content="/etc/designs/help" name="cq:designPath" /> 
  <meta content="Customizing server-side in AEM Communities" name="seoDescription" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/COMMUNITIES" name="primaryProductTag" /> 
  <meta content="Activate" name="cq:lastReplicationAction" /> 
  <meta content="carlino@adobe.com" name="lr_lastReplicatedBy" /> 
  <meta content="2017-10-12T21:46:58.665-0400" name="qaDate" /> 
  <meta content="/apps/help/templates/article-3" name="cq:template" /> 
  <meta content="2018-04-03T07:55:33.984-0400" name="lastPublishExternalDate" /> 
  <meta content="true" name="jcr:isCheckedOut" /> 
  <meta content="en_us" name="jcr:language" /> 
  <meta content="Server-side Customization" name="navTitle" /> 
  <meta content="2017-10-12T21:46:58.665-0400" name="mwpw_migration_script_version" /> 
  <meta content="" name="jcr:baseVersion" /> 
  <meta content="carlino" name="cq:lastModifiedBy" /> 
  <meta content="mix:versionable" name="jcr:mixinTypes" /> 
  <meta content="Server-side Customization" name="jcr:title" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/COMMUNITIES;topic_tags:developing;content_type:reference" name="cq:tags" /> 
  <meta content="Guillaume Carlino" name="contentOwner" /> 
 </head> 
 <body> 
  <table border="0" cellpadding="1" cellspacing="0" width="100%"> 
   <tbody> 
    <tr> 
     <td style="text-align: left;"><strong><a href="../../communities/using/essentials.md">⇐ Feature Essentials</a></strong></td> 
     <td style="text-align: right;"><strong><a href="../../communities/using/client-customize.md">Client-side Customization ⇒</a></strong></td> 
    </tr> 
    <tr> 
     <td style="text-align: left;"> </td> 
     <td style="text-align: right;"><strong><a href="../../communities/using/handlebars-helpers.md">SCF Handlebars Helpers ⇒</a></strong></td> 
    </tr> 
   </tbody> 
  </table> 
  <h2>Java APIs</h2> 
  <note> 
   <p>The package location of Communities APIs is subject to change when upgrading from one major release to the next.</p> 
  </note> 
  <h3>SocialComponent Interface</h3> 
  <p>SocialComponents are POJOs that represent a resource for an AEM Communities feature. Ideally, each SocialComponent represents a specific resourceType with exposed GETters that provide data to the client so the resource is accurately represented. All business logic and view logic is encapsulated in the SocialComponent, including the site visitor's session information, if necessary.</p> 
  <p>The interface defines a basic set of GETters that are necessary to represent a resource. Importantly, the interface stipulates Map&amp;lt;String, Object&amp;gt; getAsMap() and String toJSONString() methods that are necessary in order to render Handlebars templates and expose GET JSON endpoints for resources.</p> 
  <p>All SocialComponent classes must implement the interface <span class="code"> com.adobe.cq.social.scf.SocialComponent</span></p> 
  <h3>SocialCollectionComponent Interface</h3> 
  <p>The SocialCollectionComponent interface extends the SocialComponent interface to better represent resources that are collections of other resources. </p> 
  <div>
    All SocialCollectionComponent classes must implement the interface com.adobe.cq.social.scf.SocialCollectionComponent 
  </div> 
  <h3>SocialComponentFactory Interface</h3> 
  <p>A SocialComponentFactory (factory) registers a SocialComponent with the framework. The factory provides a means of letting the framework know what SocialComponents are available for a given resourceType and their priority ranking* when multiple SocialComponents are identified. </p> 
  <p>A SocialComponentFactory is responsible for creating an instance of the selected SocialComponent making it possible to inject all dependencies needed by the SocialComponent from the factory using DI practices.</p> 
  <p>A SocialComponentFactory is an OSGi service and has access to other OSGi services which can be passed to the SocialComponent through a constructor.</p> 
  <p>All SocialComponentFactory classes must implement the interface <span class="code">com.adobe.cq.social.scf.SocialComponentFactory</span></p> 
  <p>* An implementation of SocialComponentFactory.getPriority() method should return the highest value in order for the factory to be used for the given resourceType as returned by getResourceType().</p> 
  <h3>SocialComponentFactoryManager Interface</h3> 
  <p>The SocialComponentFactoryManager (manager) manages all SocialComponents registered with the framework and is responsible for selecting the SocialComponentFactory to use for a given resource (resourceType). If no factories are registered for a specific resourceType, the manager will return a factory with the nearest super type for the given resource.</p> 
  <p>A SocialComponentFactoryManager is an OSGi service and has access to other OSGi services which can be passed to the SocialComponent through a constructor.</p> 
  <p>A handle to the OSGi service is obtained by invoking <span class="code">com.adobe.cq.social.scf.SocialComponentFactoryManager</span></p> 
  <h3>HTTP API - POST Requests</h3> 
  <h4>PostOperation Class</h4> 
  <p>The HTTP API POST endpoints are PostOperation classes defined by implementing the <span class="code">SlingPostOperation </span>interface (package<span class="code"> org.apache.sling.servlets.post</span>).</p> 
  <p>The <span class="code">PostOperation </span>endpont implementation sets <span class="code">sling.post.operation </span>to a value to which the operation will respond. All POST requests with an :operation parameter set to that value will be delegated to this implementation class.</p> 
  <p>The <span class="code">PostOperation </span>invokes the <span class="code">SocialOperation </span>which performs the actions necessary for the operation.</p> 
  <p>The <span class="code">PostOperation </span>receives the result from the <span class="code">SocialOperation </span>and returns the appropriate response to the client.</p> 
  <h4>SocialOperation Class</h4> 
  <p>Each <span class="code">SocialOperation </span>endpoint extends the AbstractSocialOperation class and overrides the method <span class="code">performOperation(). </span>This method performs all actions needed to complete the operation and return a <span class="code">SocialOperationResult </span>or else throw an <span class="code">OperationException</span>, in which case an HTTP error status with a message, if available, is returned in place of the normal JSON response or success HTTP status code.</p> 
  <p>Extending <span class="code">AbstractSocialOperation </span>makes possible the reuse of <span class="code">SocialComponents </span>to send JSON responses.</p> 
  <h4>SocialOperationResult Class</h4> 
  <p>The <span class="code">SocialOperationResult </span>class is returned as the result of the <span class="code">SocialOperation </span>and is composed of a <span class="code">SocialComponent</span>, HTTP status code, and HTTP status message. </p> 
  <p>The <span class="code">SocialComponent </span>represents the resource that was affected by the operation.</p> 
  <p>For a Create operation, the <span class="code">SocialComponent </span>included in the <span class="code">SocialOperationResult </span>represents the resource just created and for an Update operation, it represents the resource that was altered by the operation. No <span class="code">SocialComponent </span>is returned for a Delete operation.</p> 
  <p>The success HTTP status codes used are</p> 
  <ul> 
   <li>201 for Create operations</li> 
   <li>200 for Update operations</li> 
   <li>204 for Delete operations</li> 
  </ul> 
  <h4>OperationException Class</h4> 
  <p>An <span class="code">OperationExcepton </span>can be thrown when performing an operation if the request is not valid or some other error occurs, such as internal errors, bad parameter values, improper permissions, etc. An <span class="code">OperationException </span>is composed of an HTTP status code and an error message, which are returned to the client as the response to the <span class="code">PostOperatoin</span>. </p> 
  <h4>OperationService Class</h4> 
  <p>The social component framework recommends that the business logic responsible for performing the operation not be implemented within the <span class="code">SocialOperation </span>class, but instead delegated to an OSGi service. Using an OSGi service for business logic allows a <span class="code">SocialComponent</span>, acted upon by a <span class="code">SocialOperation </span>endpoint, to be integrated with other code and have different business logic applied.</p> 
  <p>All <span class="code">OperationService </span>classes extend <span class="code">AbstractOperationService</span>, allowing additional extensions which can hook into the operation being performed. Each operation in the service is represented by a <span class="code">SocialOperation </span>class. The <span class="code">OperationExtensions </span>class can be invoked during operation execution by calling the methods</p> 
  <ul> 
   <li><span class="code">performBeforeActions()</span><br /> allows for pre-checks/pre-processing and validations</li> 
   <li><span class="code">performAfterActions()</span><br /> allows for further modification of resources or invoking custom events, workflows, etc</li> 
  </ul> 
  <h4>OperationExtension Class</h4> 
  <p><span class="code">OperationExtension </span>classes are custom pieces of code that can be injected into an operation allowing for customization of operations to meet business needs. The consumers of the component can dynamically and incrementally add functionality to the component. The extension/hook pattern allows developers to focus exclusively on the extensions themselves and removes the need for copying and overriding entire operations and components.</p> 
  <h2>Sample Code</h2> 
  <p>Sample code is available in the <a href="https://github.com/Adobe-Marketing-Cloud">Adobe Marketing Cloud GitHub</a> repository. Search for projects prefixed with either <span class="code">aem-communities</span> or <span class="code">aem-scf</span>.</p> 
  <h2>Best Practices</h2> 
  <p>View the <a href="../../communities/using/code-guide.md">Coding Guidelines</a> section for various coding guidelines and best practices for AEM Communities developers.</p> 
  <p>See also <a href="../../communities/using/srp.md">Storage Resource Provider (SRP) for UGC</a> to learn about accessing user generated content.</p> 
  <p> </p> 
  <table border="0" cellpadding="1" cellspacing="0" width="100%"> 
   <tbody> 
    <tr> 
     <td style="text-align: left;"><strong><a href="../../communities/using/essentials.md">⇐ Feature Essentials</a></strong></td> 
     <td style="text-align: right;"><strong><a href="../../communities/using/client-customize.md">Client-side Customization ⇒</a></strong></td> 
    </tr> 
    <tr> 
     <td style="text-align: left;"> </td> 
     <td style="text-align: right;"><strong><a href="../../communities/using/handlebars-helpers.md">SCF Handlebars Helpers ⇒</a></strong></td> 
    </tr> 
   </tbody> 
  </table> 
 </body> 
</html>