<?xml version="1.1" encoding="UTF-8" standalone="yes"?> 
<html> 
 <head> 
  <meta content="true" name="jcr:isCheckedOut" /> 
  <meta content="2018-04-03T07:46:22.064-0400" name="topicBrowsingSortDate" /> 
  <meta content="/etc/designs/help" name="cq:designPath" /> 
  <meta content="7a2e62cb-acf0-4504-ae58-c753cf008599" name="jcr:predecessors" /> 
  <meta content="2018-04-03T07:46:23.449-0400" name="cq:lastReplicated" /> 
  <meta content="carlino" name="cq:lastModifiedBy" /> 
  <meta content="2017-10-12T21:46:58.665-0400" name="qaDate" /> 
  <meta content="SCF Handlebars Helpers" name="jcr:title" /> 
  <meta content="a8d77bc1-7ec8-4a0f-b06c-15098f21841d" name="jcr:uuid" /> 
  <meta content="Handlebars Helper methods to facilitate work with SCF" name="seoDescription" /> 
  <meta content="2017-12-01T19:03:32.503-0500" name="jcr:created" /> 
  <meta content="" name="jcr:baseVersion" /> 
  <meta content="help/components/pages/article-3" name="sling:resourceType" /> 
  <meta content="SCF Handlebars Helpers" name="navTitle" /> 
  <meta content="2017-10-12T21:46:58.665-0400" name="mwpw_migration_script_version" /> 
  <meta content="carlino@adobe.com" name="lr_lastReplicatedBy" /> 
  <meta content="2017-10-31T16:33:34.728-0400" name="firstPublishExternalDate" /> 
  <meta content="https://helpx.adobe.com/experience-manager/6-4/communities/using/handlebars-helpers.html" name="publishExternalURL" /> 
  <meta content="/content/docs/en/aem/6-3/develop/communities/scf/handlebars-helpers" name="qaNotes" /> 
  <meta content="2018-05-17T05:55:51.658-0400" name="locHandOffDate" /> 
  <meta content="2018-04-03T07:46:22.064-0400" name="lastPublishExternalDate" /> 
  <meta content="carlino" name="cq:lastReplicatedBy" /> 
  <meta content="2018-05-17T05:55:51.658-0400" name="cq:lastModified" /> 
  <meta content="/apps/help/templates/article-3" name="cq:template" /> 
  <meta content="SCF Handlebars Helpers" name="seoTitle" /> 
  <meta content="msm-service" name="contentOwner" /> 
  <meta content="en_us" name="jcr:language" /> 
  <meta content="" name="jcr:primaryType" /> 
  <meta content="2018-04-03T07:46:22.064-0400" name="publishExternalDate" /> 
  <meta content="false" name="isReadyForLocalization" /> 
  <meta content="/content/help/en/experience-manager/6-4/communities/morehelp/developing;/content/help/en/experience-manager/6-4/communities/morehelp/developing" name="moreHelpPaths" /> 
  <meta content="Activate" name="cq:lastReplicationAction" /> 
  <meta content="" name="jcr:versionHistory" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/COMMUNITIES;topic_tags:developing;content_type:reference" name="cq:tags" /> 
  <meta content="admin" name="jcr:createdBy" /> 
  <meta content="mix:versionable" name="jcr:mixinTypes" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/COMMUNITIES" name="primaryProductTag" /> 
 </head> 
 <body> 
  <table border="0" cellpadding="1" cellspacing="0" width="100%"> 
   <tbody> 
    <tr> 
     <td style="text-align: left;"><strong><a href="../../communities/using/essentials.md">⇐ Feature Essentials</a></strong></td> 
     <td style="text-align: right;"><strong><a href="../../communities/using/server-customize.md">Server-side Customization ⇒</a></strong></td> 
    </tr> 
    <tr> 
     <td style="text-align: left;"> </td> 
     <td style="text-align: right;"><strong><a href="../../communities/using/client-customize.md">Client-side Customization ⇒</a></strong></td> 
    </tr> 
   </tbody> 
  </table> 
  <p> </p> 
  <p>Handlebars Helpers (helpers) are methods callable from Handlebars scripts to facilitate working with SCF components.</p> 
  <p>The implementation includes a client-side and a server-side definition. It is also possible for developers to create custom helpers.</p> 
  <p>The custom SCF helpers delivered with AEM Communities are defined in the <a href="../../sites/developing/using/clientlibs.md">client libarry</a> :</p> 
  <ul> 
   <li>/etc/clientlibs/social/commons/scf/helpers.js</li> 
  </ul> 
  <note> 
   <p>Be sure to install the <a href="../../communities/using/deploy-communities.md#latestfeaturepack">latest Communities feature pack</a>.</p> 
  </note> 
  <h2>abbreviate</h2> 
  <p>A helper to return an abbreviated string conforming to the maxWords and maxLength properties.</p> 
  <p>The string to be abbreviated is provided as the context. If no context is provided, an empty string is returned.</p> 
  <p>First, the context is trimmed to maxLength, and then the context is sliced into words and reduced to maxWords.</p> 
  <p>If safeString is set to true, then the returned string is a SafeString.</p> 
  <h4>parameters</h4> 
  <ul> 
   <li><strong>context</strong> : String<br /> (optional) Default is the empty string</li> 
   <li><strong>maxLength</strong> : number<br /> (optional) Default is the length of the context.</li> 
   <li><strong>maxWords</strong> : number<br /> (optional) Default is the number of words in the trimmed string.</li> 
   <li><strong>safeString</strong> : boolean<br /> (optional) Returns a Handlebars.SafeString() if true. Default is false.</li> 
  </ul> 
  <h4>examples</h4> 
  <codeblock gutter="true" class="syntax js">
    {{abbreviate&amp;nbsp;subject&amp;nbsp;maxWords=2}}!!discoiqbr!!!!discoiqbr!!/*!!discoiqbr!!If&amp;nbsp;subject&amp;nbsp;=!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"AEM&amp;nbsp;Communities&amp;nbsp;-&amp;nbsp;Site&amp;nbsp;Creation&amp;nbsp;Wizard"!!discoiqbr!!!!discoiqbr!!Then&amp;nbsp;abbreviate&amp;nbsp;would&amp;nbsp;return!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"AEM&amp;nbsp;Communities".!!discoiqbr!!*/ 
  </codeblock> 
  <codeblock gutter="true" class="syntax js">
    {{{abbreviate&amp;nbsp;message&amp;nbsp;safeString=true&amp;nbsp;maxLength=30}}}!!discoiqbr!!!!discoiqbr!!/*!!discoiqbr!!If&amp;nbsp;message&amp;nbsp;=!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"The&amp;nbsp;goal&amp;nbsp;of&amp;nbsp;AEM&amp;nbsp;Communities&amp;nbsp;is&amp;nbsp;to&amp;nbsp;quickly&amp;nbsp;create&amp;nbsp;a&amp;nbsp;community&amp;nbsp;engagement&amp;nbsp;site."!!discoiqbr!!!!discoiqbr!!Then&amp;nbsp;abbreviate&amp;nbsp;would&amp;nbsp;return!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"The&amp;nbsp;goal&amp;nbsp;of&amp;nbsp;AEM&amp;nbsp;Communities&amp;nbsp;is"!!discoiqbr!!*/ 
  </codeblock> 
  <h2>content-loadmore</h2> 
  <p>A helper to add two spans under a div, one for the full text and the other for the less text, with the ability to toggle between the two views.</p> 
  <h4>parameters</h4> 
  <ul> 
   <li><strong>context</strong> : String<br /> (optional) Default is the empty string.<br /> </li> 
   <li><strong>numChars</strong> : number<br /> (optional) The number of characters to display when not displaying full text. Default is 100.</li> 
   <li><strong>moreText</strong> : String<br /> (optional) The text to display indicating there is more text to display. Default is "more".</li> 
   <li><strong>ellipsesText</strong> : String<br /> (optional) The text to display indicating there is hidden text. Default is "...".</li> 
   <li><strong>safeString</strong> : boolean<br /> (optional) Boolean value indicating whether or not to apply Handlebars.SafeString() before returning the result. Default is false.</li> 
  </ul> 
  <h4>example</h4> 
  <codeblock gutter="true" class="syntax js">
    {{content-loadmore&amp;nbsp;&amp;nbsp;context&amp;nbsp;numChars=32&amp;nbsp;&amp;nbsp;moreText="go&amp;nbsp;on"&amp;nbsp;&amp;nbsp;ellipsesText="..."&amp;nbsp;}}!!discoiqbr!!!!discoiqbr!!/*!!discoiqbr!!If&amp;nbsp;context&amp;nbsp;=&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"Here&amp;nbsp;is&amp;nbsp;the&amp;nbsp;initial&amp;nbsp;less&amp;nbsp;content&amp;nbsp;and&amp;nbsp;this&amp;nbsp;is&amp;nbsp;more&amp;nbsp;content."!!discoiqbr!!!!discoiqbr!!Then&amp;nbsp;content-loadmore&amp;nbsp;would&amp;nbsp;return!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"Here&amp;nbsp;is&amp;nbsp;the&amp;nbsp;initial&amp;nbsp;less&amp;nbsp;content&lt;span&amp;nbsp;class="moreelipses"&gt;...&lt;/span&gt;&amp;nbsp;&lt;span&amp;nbsp;class="scf-morecontent"&gt;&lt;span&gt;and&amp;nbsp;this&amp;nbsp;is&amp;nbsp;more&amp;nbsp;content.&lt;/span&gt;&amp;nbsp;&amp;nbsp;&lt;a&amp;nbsp;href=""&amp;nbsp;class="scf-morelink"&amp;nbsp;evt="click=toggleContent"&gt;go&amp;nbsp;on&lt;/a&gt;&lt;/span&gt;"!!discoiqbr!!*/ 
  </codeblock> 
  <h2>dateUtil</h2> 
  <p>A helper to return a formatted date string.</p> 
  <h4>parameters</h4> 
  <ul> 
   <li><strong>context</strong> : number<br /> (optional) a millisecond value offset from January 1, 1970 (epoch). Default is the current date.</li> 
   <li><strong>format</strong> : String<br /> (optional) The date format to apply. Default is "YYYY-MM-DDTHH:mm:ss.sssZ" and the result appears as "2015-03-18T18:17:13-07:00"</li> 
  </ul> 
  <h4>examples</h4> 
  <codeblock gutter="true" class="syntax js">
    {{dateUtil&amp;nbsp;this.memberSince&amp;nbsp;format="dd&amp;nbsp;MMM&amp;nbsp;yyyy,&amp;nbsp;hh:mm"}}!!discoiqbr!!!!discoiqbr!!//&amp;nbsp;returns&amp;nbsp;"18&amp;nbsp;Mar&amp;nbsp;2015,&amp;nbsp;18:17" 
  </codeblock> 
  <codeblock gutter="true" class="syntax js">
    {{dateUtil&amp;nbsp;this.birthday&amp;nbsp;format="MM-DD-YYYY"}}!!discoiqbr!!!!discoiqbr!!//&amp;nbsp;returns&amp;nbsp;"03-18-2015" 
  </codeblock> 
  <h2>equals</h2> 
  <p>A helper to return content depending on an equality conditional.</p> 
  <h4>parameters</h4> 
  <ul> 
   <li><strong>lvalue</strong> : String<br /> The left-hand value to compare</li> 
   <li><strong>rvalue</strong> : String<br /> The right-hand value to compare</li> 
  </ul> 
  <h4>example</h4> 
  <codeblock gutter="true" class="syntax js">
    {{#equals&amp;nbsp;&amp;nbsp;value&amp;nbsp;"some-value"}}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&lt;div&gt;They&amp;nbsp;are&amp;nbsp;EQUAL!&lt;/div&gt;!!discoiqbr!!{{else}}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&lt;div&gt;They&amp;nbsp;are&amp;nbsp;NOT&amp;nbsp;equal!&lt;/div&gt;!!discoiqbr!!{{/equals}}!!discoiqbr!! 
  </codeblock> 
  <h2>if-wcm-mode</h2> 
  <p>A block helper that tests the current value of <a href="/sites/developing/using/reference-materials/javadoc/com/day/cq/wcm/api/WCMMode">WCM mode</a> against a string separated list of modes.</p> 
  <h4>parameters</h4> 
  <ul> 
   <li><strong>context</strong> : String<br /> (optional) The string to translate. Required if no default provided.</li> 
   <li><strong>mode</strong> : String<br /> (optional) A comma separated list of <a href="/sites/developing/using/reference-materials/javadoc/com/day/cq/wcm/api/WCMMode">WCM modes</a> to test if set.</li> 
  </ul> 
  <h4>example</h4> 
  <codeblock gutter="true" class="syntax xml">
    {{#if-wcm-mode&amp;nbsp;mode="DESIGN,&amp;nbsp;EDIT"}}!!discoiqbr!!&amp;nbsp;...!!discoiqbr!!{{else}}!!discoiqbr!!&amp;nbsp;...!!discoiqbr!!{{/if-wcm-mode}} 
  </codeblock> 
  <h2>i18n</h2> 
  <p>This helper overrides the Handlebars helper 'i18n'.</p> 
  <p>See also <a href="../../sites/developing/using/i18n-dev.md#internationalizingstringsinjavascriptcode">Internationalizing Strings in JavaScript Code</a>.</p> 
  <h4>parameters</h4> 
  <ul> 
   <li><strong>context</strong> : String<br /> (optional) The string to translate. Required if no default provided.</li> 
   <li><strong>default</strong> : String<br /> (optional) The default string to translate. Required if no context provided.</li> 
   <li><strong>comment</strong> : String<br /> (optional) A translation hint</li> 
  </ul> 
  <h4>example</h4> 
  <codeblock gutter="true" class="syntax js">
    {{i18n&amp;nbsp;"hello"}}!!discoiqbr!!{{i18n&amp;nbsp;"hello"&amp;nbsp;comment="greeting"&amp;nbsp;default="bonjour"}}!!discoiqbr!! 
  </codeblock> 
  <h2>include</h2> 
  <p>A helper to include a component as a non-existing resource in a template.</p> 
  <p>This allows the resource to be programmatically customized more easily than is possible for a resource added as a JCR node. See <a href="../../communities/using/scf.md#addorincludeacommunitiescomponent">Add or Include a Communities Component</a>.</p> 
  <p>Only a select few of Communities components are includable. For AEM 6.1, those that are includable are <a href="../../communities/using/essentials-comments.md">comments</a>, <a href="../../communities/using/rating-basics.md">rating</a>, <a href="../../communities/using/reviews-basics.md">reviews</a>, and <a href="../../communities/using/essentials-voting.md">voting</a>.</p> 
  <p>This helper, appropriate only on the server-side, provides functionality similar to <a href="../../sites/developing/using/taglib.md">cq:include</a> for JSP scripts.</p> 
  <h4>parameters</h4> 
  <ul> 
   <li><strong>context</strong> : String or object<br /> (optional, unless providing a relative path)<br /> use <span class="code">this </span>to pass the current context<br /> use <span class="code">this.id</span> to obtain the resource at <span class="code">id</span> for rendering the resourceType requested</li> 
   <li><strong>resourceType</strong> : String<br /> (optional) resource type will default to resource type from context</li> 
   <li><strong>template</strong> : String<br /> path to component script</li> 
   <li><strong>path</strong> : String<br /> (required) The path to the resource. If path is relative, a context must be provided, else the empty string is returned.</li> 
   <li><strong>authoringDisabled</strong> : boolean<br /> (optional) Default is false. For internal use only.</li> 
  </ul> 
  <h4>example</h4> 
  <codeblock class="syntax js">
    {{include&amp;nbsp;this.id&amp;nbsp;path="comments"&amp;nbsp;resourceType="social/commons/components/hbs/comments"}} 
  </codeblock> 
  <p>This will include a new comments component at <span class="code">this.id</span> + /comments</p>    
  <h2>includeClientLib</h2> 
  <p>A helper that includes an AEM html client library, which can be a js, a css or a theme library. For multiple inclusions of different types, for example js and css, this tag needs to be used multiple times in the Handlebars script.</p> 
  <p>This helper, appropriate only on the server-side, provides functionality similar to <a href="../../sites/developing/using/taglib.md">ui:includeClientLib</a> for JSP scripts.</p> 
  <h4>parameters</h4> 
  <ul> 
   <li><strong>categories</strong> : String<br /> (optional) A list of comma-separated client lib categories. This will include all Javascript and CSS libraries for the given categories. The theme name is extracted from the request.</li> 
   <li><strong>theme</strong> : String<br /> (optional) A list of comma-separated client lib categories. This will include all theme related libraries (both CSS and JS) for the given categories. The theme name is extracted from the request.</li> 
   <li><strong>js</strong> : String<br /> (optional) A list of comma-separated client lib categories. This will include all Javascript libraries for the given categories.</li> 
   <li><strong>css</strong> : String<br /> (optional) A list of comma-separated client lib categories. This will include all CSS libraries for the given categories.</li> 
  </ul> 
  <h4>examples</h4> 
  <codeblock gutter="true" class="syntax js">
    //&amp;nbsp;all:&amp;nbsp;js&amp;nbsp;+&amp;nbsp;theme&amp;nbsp;(theme-js&amp;nbsp;+&amp;nbsp;css)&amp;nbsp;!!discoiqbr!!{{includeClientLib&amp;nbsp;categories="cq.social.hbs.comments,&amp;nbsp;cq.social.hbs.voting"}}!!discoiqbr!!!!discoiqbr!!//&amp;nbsp;returns!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;link&amp;nbsp;href="/etc/clientlibs/social/hbs/tally/voting.css"&amp;nbsp;rel="stylesheet"&amp;nbsp;type="text/css"&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;link&amp;nbsp;href="/etc/clientlibs/social/hbs/socialgraph.css"&amp;nbsp;rel="stylesheet"&amp;nbsp;type="text/css"&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;link&amp;nbsp;href="/etc/clientlibs/social/hbs/comments.css"&amp;nbsp;rel="stylesheet"&amp;nbsp;type="text/css"&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;script&amp;nbsp;src="/etc/clientlibs/social/hbs/tally/voting.js"&amp;nbsp;type="text/javascript"&gt;&lt;/script&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;script&amp;nbsp;src="/etc/clientlibs/social/hbs/socialgraph.js"&amp;nbsp;type="text/javascript"&gt;&lt;/script&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;script&amp;nbsp;src="/etc/clientlibs/social/hbs/comments.js"&amp;nbsp;type="text/javascript"&gt;&lt;/script&gt;!!discoiqbr!!!!discoiqbr!!//&amp;nbsp;only&amp;nbsp;js&amp;nbsp;libs!!discoiqbr!!{{includeClientLib&amp;nbsp;js="cq.social.hbs.comments,&amp;nbsp;cq.social.hbs.voting"}}!!discoiqbr!!!!discoiqbr!!//&amp;nbsp;returns!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;script&amp;nbsp;src="/etc/clientlibs/social/hbs/tally/voting.js"&amp;nbsp;type="text/javascript"&gt;&lt;/script&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;script&amp;nbsp;src="/etc/clientlibs/social/hbs/socialgraph.js"&amp;nbsp;type="text/javascript"&gt;&lt;/script&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;script&amp;nbsp;src="/etc/clientlibs/social/hbs/comments.js"&amp;nbsp;type="text/javascript"&gt;&lt;/script&gt;!!discoiqbr!!!!discoiqbr!!//&amp;nbsp;theme&amp;nbsp;only&amp;nbsp;(theme-js&amp;nbsp;+&amp;nbsp;css)&amp;nbsp;!!discoiqbr!!{{includeClientLib&amp;nbsp;theme="cq.social.hbs.comments,&amp;nbsp;cq.social.hbs.voting"}}!!discoiqbr!!!!discoiqbr!!//&amp;nbsp;returns!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;link&amp;nbsp;href="/etc/clientlibs/social/hbs/tally/voting.css"&amp;nbsp;rel="stylesheet"&amp;nbsp;type="text/css"&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;link&amp;nbsp;href="/etc/clientlibs/social/hbs/comments.css"&amp;nbsp;rel="stylesheet"&amp;nbsp;type="text/css"&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;script&amp;nbsp;src="/etc/clientlibs/social/hbs/tally/voting.js"&amp;nbsp;type="text/javascript"&gt;&lt;/script&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;script&amp;nbsp;src="/etc/clientlibs/social/hbs/comments.js"&amp;nbsp;type="text/javascript"&gt;&lt;/script&gt;!!discoiqbr!!!!discoiqbr!!//&amp;nbsp;css&amp;nbsp;only!!discoiqbr!!{{includeClientLib&amp;nbsp;css="cq.social.hbs.comments,&amp;nbsp;cq.social.hbs.voting"}}!!discoiqbr!!!!discoiqbr!!//&amp;nbsp;returns!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;link&amp;nbsp;href="/etc/clientlibs/social/hbs/tally/voting.css"&amp;nbsp;rel="stylesheet"&amp;nbsp;type="text/css"&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;link&amp;nbsp;href="/etc/clientlibs/social/hbs/socialgraph.css"&amp;nbsp;rel="stylesheet"&amp;nbsp;type="text/css"&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;link&amp;nbsp;href="/etc/clientlibs/social/hbs/comments.css"&amp;nbsp;rel="stylesheet"&amp;nbsp;type="text/css"&gt; 
  </codeblock>  
  <h2>pretty-time</h2> 
  <p>A helper to display how much time has passed up to a cutoff point, after which a regular date format is displayed.</p> 
  <p>For example :</p> 
  <ul> 
   <li>12 hours ago</li> 
   <li>7 days ago</li> 
  </ul> 
  <h4>parameters</h4> 
  <ul> 
   <li><strong>context</strong> : number<br /> A time in the past to compare to 'now'. Time is expressed as a millisecond value offset from January 1, 1970 (epoch).</li> 
   <li><strong>daysCutoff</strong> : number<br /> The number of days ago before switching to an actual date. Default is 60.</li> 
  </ul> 
  <h4>example</h4> 
  <codeblock gutter="true" class="syntax js">
    {{pretty-time&amp;nbsp;this.published&amp;nbsp;daysCutoff=7}}!!discoiqbr!!!!discoiqbr!!/*!!discoiqbr!!Depending&amp;nbsp;on&amp;nbsp;how&amp;nbsp;long&amp;nbsp;in&amp;nbsp;the&amp;nbsp;past,&amp;nbsp;may&amp;nbsp;return!!discoiqbr!!&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;"3&amp;nbsp;minutes&amp;nbsp;ago"!!discoiqbr!!!!discoiqbr!!&amp;nbsp;&amp;nbsp;"3&amp;nbsp;hours&amp;nbsp;ago"!!discoiqbr!!!!discoiqbr!!&amp;nbsp;&amp;nbsp;"3&amp;nbsp;days&amp;nbsp;ago"!!discoiqbr!!*/ 
  </codeblock> 
  <h2>xss-html</h2> 
  <p>A helper that encodes a source string for HTML element content to help guard against XSS.</p> 
  <p>NOTE: this is not a validator and is not to be used for writing attribute values.</p> 
  <h4>parameters</h4> 
  <ul> 
   <li><strong>context</strong> : object<br /> the HTML to encode</li> 
  </ul> 
  <h4>example</h4> 
  <codeblock gutter="true" class="syntax js">
    &lt;p&gt;{{xss-html&amp;nbsp;forum-ugc}}&lt;/p&gt; 
  </codeblock> 
  <h2>xss-htmlAttr</h2> 
  <p>A helper that encodes a source string for writing to an HTML attribute value to help guard against XSS.</p> 
  <p>NOTE: this is not a validator and is not to be used for writing actionalable attributes (href, src, event handlers).</p> 
  <h4>parameters</h4> 
  <ul> 
   <li><strong>context</strong> : object<br /> the HTML to encode</li> 
  </ul> 
  <h4>example</h4> 
  <codeblock gutter="true" class="syntax js">
    &lt;div&amp;nbsp;id={{xss-htmlAttr&amp;nbsp;id}}&amp;nbsp;/&gt; 
  </codeblock> 
  <h2>xss-jsString</h2> 
  <p>A helper that encodes a source string for writing to JavaScript string content to help guard against XSS.</p> 
  <p>NOTE: this is not a validator and is not to be used for writing to arbitrary JavaScript.</p> 
  <h4>parameters</h4> 
  <ul> 
   <li><strong>context</strong> : object<br /> the HTML to encode</li> 
  </ul> 
  <h4>example</h4> 
  <codeblock gutter="true" class="syntax js">
    var&amp;nbsp;input&amp;nbsp;=&amp;nbsp;{{xss-jsString&amp;nbsp;topic-title}} 
  </codeblock> 
  <h2>xss-validHref</h2> 
  <p>A helper that sanitizes an URL for writing as an HTML href or srce attribute value to help guard against XSS.</p> 
  <p>NOTE: this may return an empty string</p> 
  <h4>parameters</h4> 
  <ul> 
   <li><strong>context</strong> : object<br /> the URL to sanitize</li> 
  </ul> 
  <h4>example</h4> 
  <codeblock gutter="true" class="syntax js">
    &lt;a&amp;nbsp;href="{{xss-validHref&amp;nbsp;url}}"&gt;my&amp;nbsp;link&lt;/a&gt; 
  </codeblock> 
  <h2>Handlebars.js Basic Overview</h2> 
  <p>A quick overview of helper functions from <a href="http://handlebarsjs.com/expressions.html">Handlebars.js documentation</a> : </p> 
  <ul> 
   <li>A Handlebars helper call is a simple identifier (the <i>name </i>of the helper), followed by zero or more space-separated parameters.</li> 
   <li>Parameters may be a simple String, number, boolean, or JSON object, as well as an optional sequence of key-value pairs (hash arguments) as the last parameter(s).</li> 
   <li>The keys in hash arguments must be simple identifiers.</li> 
   <li>The values in hash arguments are Handlebars expressions : simple identifiers, paths, or Strings.</li> 
   <li>The current context, <span class="code">this</span>, is always available to Handlebars helpers.</li> 
   <li>The context may be a String, number, boolean, or a JSON data object.</li> 
   <li>It is possible to pass an object nested within the current context as the context, such as <span class="code">this.url</span> or <span class="code">this.id</span> (see following examples of simple and block helpers).</li> 
   <li>Block helpers are functions that can be called from anywhere in the template. They can invoke a block of the template zero or more times with a different context each time. They contain a context between {{#<i>name</i>}} and {{/<i>name</i>}}.</li> 
   <li>Handlebars provides a final parameter to helpers named 'options'. The special object 'options' includes 
    <ul> 
     <li>optional private data (options.data)</li> 
     <li>optional key-value properties from the call (options.hash)</li> 
     <li>ability to invoke itself (options.fn()) </li> 
     <li>ability to invoke the inverse of itself (options.inverse())</li> 
    </ul> </li> 
   <li>It is recommended that the HTML String content returned from a helper is a SafeString.</li> 
  </ul> 
  <h4>An example of a simple helper from Handlebars.js documentation :</h4> 
  <codeblock gutter="true" class="syntax js">
    Handlebars.registerHelper('link_to',&amp;nbsp;function(title,&amp;nbsp;options)&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;new&amp;nbsp;Handlebars.SafeString('&lt;a&amp;nbsp;href="/posts'&amp;nbsp;+&amp;nbsp;this.url&amp;nbsp;+&amp;nbsp;'"&gt;'&amp;nbsp;+&amp;nbsp;title&amp;nbsp;+&amp;nbsp;"!&lt;/a&gt;");!!discoiqbr!!});!!discoiqbr!!!!discoiqbr!!var&amp;nbsp;context&amp;nbsp;=&amp;nbsp;{posts:&amp;nbsp;[!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{url:&amp;nbsp;"/hello-world",!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;body:&amp;nbsp;"Hello&amp;nbsp;World!"}!!discoiqbr!!&amp;nbsp;&amp;nbsp;]&amp;nbsp;};!!discoiqbr!!!!discoiqbr!!//&amp;nbsp;when&amp;nbsp;link_to&amp;nbsp;is&amp;nbsp;called,&amp;nbsp;posts&amp;nbsp;is&amp;nbsp;the&amp;nbsp;current&amp;nbsp;context!!discoiqbr!!var&amp;nbsp;source&amp;nbsp;=&amp;nbsp;'&lt;ul&gt;{{#posts}}&lt;li&gt;{{{link_to&amp;nbsp;"Post"}}}&lt;/li&gt;{{/posts}}&lt;/ul&gt;'!!discoiqbr!!!!discoiqbr!!var&amp;nbsp;template&amp;nbsp;=&amp;nbsp;Handlebars.compile(source);!!discoiqbr!!!!discoiqbr!!template(context); 
  </codeblock> 
  <p>Would render:<br /> <br /> &amp;lt;ul&amp;gt;<br /> &amp;lt;li&amp;gt;&amp;lt;a href="/posts/hello-world"&amp;gt;Post!&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;<br /> &amp;lt;/ul&amp;gt;</p> 
  <h4>An example of a block helper from Handlebars.js documentation :</h4> 
  <codeblock gutter="true" class="syntax js">
    Handlebars.registerHelper('link',&amp;nbsp;function(options)&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;new&amp;nbsp;Handlebars.SafeString('&lt;a&amp;nbsp;href="/people/'&amp;nbsp;+&amp;nbsp;this.id&amp;nbsp;+&amp;nbsp;'"&gt;'&amp;nbsp;+&amp;nbsp;options.fn(this)&amp;nbsp;+&amp;nbsp;'&lt;/a&gt;');!!discoiqbr!!});!!discoiqbr!!!!discoiqbr!!var&amp;nbsp;data&amp;nbsp;=&amp;nbsp;{&amp;nbsp;"people":&amp;nbsp;[!!discoiqbr!!&amp;nbsp;&amp;nbsp;{&amp;nbsp;"name":&amp;nbsp;"Alan",&amp;nbsp;"id":&amp;nbsp;1&amp;nbsp;},!!discoiqbr!!&amp;nbsp;&amp;nbsp;{&amp;nbsp;"name":&amp;nbsp;"Yehuda",&amp;nbsp;"id":&amp;nbsp;2&amp;nbsp;}!!discoiqbr!!]};!!discoiqbr!!!!discoiqbr!!//&amp;nbsp;when&amp;nbsp;link&amp;nbsp;is&amp;nbsp;called,&amp;nbsp;people&amp;nbsp;is&amp;nbsp;the&amp;nbsp;current&amp;nbsp;context!!discoiqbr!!var&amp;nbsp;source&amp;nbsp;=&amp;nbsp;"&lt;ul&gt;{{#people}}&lt;li&gt;{{#link}}{{name}}{{/link}}&lt;/li&gt;{{/people}}&lt;/ul&gt;";!!discoiqbr!!!!discoiqbr!!var&amp;nbsp;template&amp;nbsp;=&amp;nbsp;Handlebars.compile(source);!!discoiqbr!!!!discoiqbr!!template(data); 
  </codeblock> 
  <p>Would render:<br /> &amp;lt;ul&amp;gt;<br /> &amp;lt;li&amp;gt;&amp;lt;a href="/people/1"&amp;gt;Alan&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;<br /> &amp;lt;li&amp;gt;&amp;lt;a href="/people/2"&amp;gt;Yehuda&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;<br /> &amp;lt;/ul&amp;gt;</p> 
  <h2>Custom SCF Helpers</h2> 
  <p>Custom helpers must be implemented on the server-side as well as the client-side, especially when passing data. For SCF, most templates are compiled and rendered on the server-side as the server generates the HTML for a given component when the page is requested.</p> 
  <h3>Server-side Custom Helpers</h3> 
  <p>To implement and register a custom SCF helper on the server-side, simply implement the Java interface <a href="/sites/developing/using/reference-materials/javadoc/com/adobe/cq/social/handlebars/api/TemplateHelper">TemplateHelper</a>, make it an <a href="../../sites/developing/using/the-basics.md#osgi">OSGi Service</a> and install it as part of an OSGi bundle.</p> 
  <p><br /> For example :</p> 
  <h4>FooTextHelper.java</h4> 
  <codeblock gutter="true" class="syntax java">
    /**&amp;nbsp;Custom&amp;nbsp;Handlebars&amp;nbsp;Helper&amp;nbsp;*/!!discoiqbr!!!!discoiqbr!!package&amp;nbsp;com.my.helpers;!!discoiqbr!!!!discoiqbr!!import&amp;nbsp;java.io.IOException;!!discoiqbr!!!!discoiqbr!!import&amp;nbsp;org.apache.felix.scr.annotations.Component;!!discoiqbr!!import&amp;nbsp;org.apache.felix.scr.annotations.Service;!!discoiqbr!!!!discoiqbr!!import&amp;nbsp;com.adobe.cq.social.handlebars.api.TemplateHelper;!!discoiqbr!!import&amp;nbsp;com.github.jknack.handlebars.Options;!!discoiqbr!!!!discoiqbr!!@Service!!discoiqbr!!@Component!!discoiqbr!!public&amp;nbsp;class&amp;nbsp;FooTextHelper&amp;nbsp;implements&amp;nbsp;TemplateHelper&lt;String&gt;{!!discoiqbr!!!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Override!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;CharSequence&amp;nbsp;apply(String&amp;nbsp;context,&amp;nbsp;Options&amp;nbsp;options)&amp;nbsp;throws&amp;nbsp;IOException&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;"foo-"&amp;nbsp;+&amp;nbsp;context;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Override!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;String&amp;nbsp;getHelperName()&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;"foo-text";!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Override!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;Class&lt;String&gt;&amp;nbsp;getContextType()&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;String.class;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!}!!discoiqbr!! 
  </codeblock> 
  <note> 
   <p>A helper created for the server-side must also be created for the client-side.</p> 
   <p>The component gets re-rendered on the client-side for the logged in user, and if the client-side helper is not found, the component disappears.</p> 
  </note> 
  <h3>Client-side Custom Helpers</h3> 
  <p>The client-side helpers are Handlebars scripts registered by invoking <span class="code">Handlebars.registerHelper()</span>.<br /> For example :</p> 
  <h4>custom-helpers.js</h4> 
  <codeblock gutter="true" class="syntax js">
    function(Handlebars,&amp;nbsp;SCF,&amp;nbsp;$CQ)&amp;nbsp;{!!discoiqbr!!!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Handlebars.registerHelper('foo-text',&amp;nbsp;function(context,&amp;nbsp;options)&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(!context)&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;"";!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;"foo-"&amp;nbsp;+&amp;nbsp;context;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;});!!discoiqbr!!!!discoiqbr!!})(Handlebars,&amp;nbsp;SCF,&amp;nbsp;$CQ);!!discoiqbr!! 
  </codeblock> 
  <p>The custom client-side helpers must be added to a custom client library.<br /> The clientlib must :</p> 
  <ul> 
   <li>include a dependency on <span class="code">cq.social.scf</span></li> 
   <li>load after Handlebars has been loaded</li> 
   <li>be <a href="../../communities/using/clientlibs.md">included</a></li> 
  </ul> 
  <p>Note: the SCF helpers are defined in <span class="code">/etc/clientlibs/social/commons/scf/helpers.js</span>.</p> 
  <p> </p> 
  <table border="0" cellpadding="1" cellspacing="0" width="100%"> 
   <tbody> 
    <tr> 
     <td style="text-align: left;"><strong><a href="../../communities/using/essentials.md">⇐ Feature Essentials</a></strong></td> 
     <td style="text-align: right;"><strong><a href="../../communities/using/server-customize.md">Server-side Customization ⇒</a></strong></td> 
    </tr> 
    <tr> 
     <td style="text-align: left;"> </td> 
     <td style="text-align: right;"><strong><a href="../../communities/using/client-customize.md">Client-side Customization ⇒</a></strong></td> 
    </tr> 
   </tbody> 
  </table> 
 </body> 
</html>