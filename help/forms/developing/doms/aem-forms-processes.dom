<?xml version="1.1" encoding="UTF-8" standalone="yes"?>
<html>
 <head>
  <meta content="admin" name="lr_creator" />
  <meta content="2017-07-12T07:03:36.031-0400" name="lr_lastModified" />
  <meta content="" name="jcr:baseVersion" />
  <meta content="Understanding AEM Forms Processes" name="navTitle" />
  <meta content="false" name="doNotLocalize" />
  <meta content="vishgupt@adobe.com" name="lr_lastReplicatedBy" />
  <meta content="en_us" name="jcr:language" />
  <meta content="/apps/help/templates/article-3" name="cq:template" />
  <meta content="true" name="jcr:isCheckedOut" />
  <meta content="not_checked" name="acrolinxStatus" />
  <meta content="light" name="heroGradient" />
  <meta content="3860f3e1-0066-45e1-a49a-edb1f6eae8d3" name="jcr:predecessors" />
  <meta content="video" name="pageLayout" />
  <meta content="left" name="sideColumn" />
  <meta content="head1_20111213" name="gep_conversion_script_version" />
  <meta content="" name="publishExternalURL" />
  <meta content="" name="jcr:primaryType" />
  <meta content="" name="jcr:versionHistory" />
  <meta content="2017-10-03T06:46:52.973-0400" name="firstPublishExternalDate" />
  <meta content="Activate" name="cq:lastReplicationAction" />
  <meta content="/etc/designs/help" name="cq:designPath" />
  <meta content="admin" name="lr_lastModifiedBy" />
  <meta content="carlino" name="cq:lastReplicatedBy" />
  <meta content="23842070-fb3a-4f4e-85e4-00fa1ff7b0a5" name="jcr:uuid" />
  <meta content="mix:versionable" name="jcr:mixinTypes" />
  <meta content="2017-07-12T07:03:00.000-0400" name="sortDate" />
  <meta content="2017-11-22T19:02:05.318-0500" name="jcr:created" />
  <meta content="Understanding AEM Forms Processes" name="jcr:title" />
  <meta content="content_type:reference;topic_tags:coding;products:SG_EXPERIENCEMANAGER/6.4/FORMS;topic_tags:development-tools" name="cq:tags" />
  <meta content="/content/help/en/experience-manager/6-4/forms/developing/morehelp/coding;/content/help/en/experience-manager/6-4/forms/developing/morehelp/development-tools;/content/help/en/experience-manager/6-4/forms/developing/morehelp/coding;/content/help/en/experience-manager/6-4/forms/developing/morehelp/development-tools" name="moreHelpPaths" />
  <meta content="2017-10-31T16:33:06.886-0400" name="lastPublishExternalDate" />
  <meta content="2017-11-01T04:29:29.696-0400" name="unpublishExternalDate" />
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/FORMS" name="primaryProductTag" />
  <meta content="audience:developing" name="primaryAudienceTag" />
  <meta content="carlino" name="cq:lastModifiedBy" />
  <meta content="2017-11-21T06:56:56.267-0500" name="cq:lastModified" />
  <meta content="help/components/pages/article-3" name="sling:resourceType" />
  <meta content="AEMForms/6.1/ProgramLC/WS624e3cba99b79e12e69a9941333732bac8-7b6d.2" name="cq:gepId" />
  <meta content="2018-04-03T08:15:52.154-0400" name="cq:lastReplicated" />
  <meta content="admin" name="jcr:createdBy" />
  <meta content="admin" name="contentOwner" />
 </head>
 <body>
  <p>A common use case is for a set of AEM Forms services to operate on a single document. You can send a request to the service container by creating a process using Workbench. A process represents a business process that you are automating. For information about creating processes, see <a href="http://www.adobe.com/go/learn_aemforms_workbench_63">Using Workbench</a>.</p>
  <p>Once a process is activated, it becomes a service and can be invoked like other services. One difference between a standard service, such as the Encryption service and a service that originated from a process, is that the latter has one operation that performs many actions. In contrast, an standard service has many operations. Each operation typically performs one action, such as applying a policy to a document or encrypting a document.</p>
  <p>Processes can be short-lived or long-lived. A short-lived process is an operation that is performed synchronously and on the same execution thread from which it was invoked. Short-lived operations are comparable to the standard behavior found in most programming languages, where a client application calls a method and waits for a return value.</p>
  <p>However, there are situations where a process cannot be completed synchronously due to factors such as these: </p>
  <ul>
   <li><p>A process can span a significant amount of time.</p></li>
   <li><p>A process can span organizational boundaries.</p></li>
   <li><p>A process needs external input in order for it to finish. For example, consider a situation where a form is sent to a manager who is out of the office. In this situation, the process is not complete until the manager returns and fills out the form.</p><p>These types of processes are known as long-lived processes. A long-lived process is performed asynchronously, allowing for systems to interact as resources permit and allowing for the tracking and monitoring of the operation. When a long-lived process is invoked, AEM Forms creates an invocation identifier value as part of a record that tracks the long-lived process status. The record is stored in the AEM Forms database. You can purge long-lived process records when they are no longer required. (See <a href="/programming-with-aem-forms/processes-tasks#purging_process_data">Purging Process Data</a>.)</p><p>Using the invocation identifier value, you can track the status of the long-lived process. For example, you can use the process invocation identifier value to perform Process Manager operations such as terminating a running process instance. (See <a href="/programming-with-aem-forms/processes-tasks#terminating_process_instances">Terminating Process Instances</a>.)</p></li>
  </ul>
  <p><strong>Short lived process example</strong></p>
  <p>The following illustration is an example of a short-lived process named <i>MyApplication/EncryptDocument</i>. </p>
  <note>
   <p>This process is not based on an existing AEM Forms process. To follow along with the code examples that discuss how to invoke this process, create a process named <span class="code">MyApplication/EncryptDocument</span> using Workbench. (See <a href="http://www.adobe.com/go/learn_aemforms_workbench_63">Using Workbench</a>.)</p>
  </note>
  <p>When this short-lived process is invoked, it performs the following actions:</p>
  <ol>
   <li><p>Obtains the unsecured PDF document that is passed to the process as an input value. </p></li>
   <li><p>Encrypts the PDF document with a password. The name of the input parameter for this process is <span class="code">inDoc</span> and the data type is document. </p></li>
   <li><p>Saves the password-encrypted PDF document as a PDF file to the local file system. This process returns the encrypted PDF document as an output value. The name of the output parameter for this process is <span class="code">outDoc</span> and the data type is document.</p><p>This process is completed synchronously on the same execution thread from which it was invoked. The name of this short-lived process is <span class="code">MyApplication/EncryptDocument </span>and its operation is <span class="code">invoke</span>.</p>
    <note>
     <p>Typically a short-lived process consists of more than three actions. You create a process using Workbench. (See <a href="http://www.adobe.com/go/learn_aemforms_workbench_63">Using Workbench</a>.)</p>
    </note><p><i>Programming with AEM forms</i>describes the following ways in which you can programmatically invoke this short-lived process:</p>
    <ul>
     <li><p><a href="/programming-with-aem-forms/invoking-aem-forms-using-remoting#invoking_a_short_lived_process_by_passing_an_unsecure_document_using_remoting">Invoking a short-lived process by passing an unsecure document using AEM Forms Remoting</a> (Using a Flex application)</p></li>
     <li><p><a href="/programming-with-aem-forms/invoking-aem-forms-using-java#invoking_a_short_lived_process_using_the_invocation_api">Invoking a short-lived process using the Invocation API</a> (Java Invocation API)</p></li>
     <li><p><a href="/programming-with-aem-forms/invoking-aem-forms-using-web#invoking_aem_forms_using_base64_encoding">Invoking AEM Forms using Base64 encoding</a> (web service example)</p></li>
     <li><p><a href="/programming-with-aem-forms/invoking-aem-forms-using-web#invoking_aem_forms_using_mtom">Invoking AEM Forms using MTOM</a> (web service example)</p></li>
     <li><p><a href="/programming-with-aem-forms/invoking-aem-forms-using-web#invoking_aem_forms_using_swaref">Invoking AEM Forms using SwaRef</a> (web service example)</p></li>
     <li><p><a href="/programming-with-aem-forms/invoking-aem-forms-using-web#invoking_aem_forms_using_blob_data_over_http">Invoking AEM Forms using BLOB data over HTTP</a> (web service example)</p></li>
     <li><p><a href="/programming-with-aem-forms/invoking-aem-forms-using-web#invoking_aem_forms_using_dime">Invoking AEM Forms using DIME</a> (web service example)</p></li>
     <li></li>
    </ul></li>
  </ol>
  <p><strong>Long-lived process example</strong></p>
  <p>The following illustration is an example of a long-lived process. </p>
  <p>This process is invoked when an applicant submits a loan form. The process is not complete until a loan officer approves or rejects the loan request. The name of this long-lived process is<i> FirstAppSolution/PreLoanProcess </i>and its operation is <span class="code">invoke_Async</span>. This process must be invoked asynchronously. For information about programmatically invoking this long-lived process, see <a href="/programming-with-aem-forms/invoking-human-centric-long-lived#invoking_human_centric_long_lived_processes">Invoking Human-Centric Long-Lived Processes</a>.</p>
  <note>
   <p>This process can be created by following the tutorial specified in <a href="http://www.adobe.com/go/learn_aemforms_firstapp_ds_63">Creating Your First AEM Forms Application</a>.</p>
  </note>
 </body>
</html>