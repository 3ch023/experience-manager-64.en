<?xml version="1.1" encoding="UTF-8" standalone="yes"?> 
<html> 
 <head> 
  <meta content="vishgupt@adobe.com" name="lr_lastReplicatedBy" /> 
  <meta content="3371fdc0-f94f-4fa6-bb76-fa338169cf2d" name="jcr:uuid" /> 
  <meta content="Activate" name="cq:lastReplicationAction" /> 
  <meta content="2017-10-31T16:33:02.068-0400" name="lastPublishExternalDate" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/FORMS" name="primaryProductTag" /> 
  <meta content="admin" name="lr_creator" /> 
  <meta content="2017-11-01T04:29:32.025-0400" name="unpublishExternalDate" /> 
  <meta content="2017-11-21T06:59:41.925-0500" name="cq:lastModified" /> 
  <meta content="2017-11-22T19:06:22.676-0500" name="jcr:created" /> 
  <meta content="" name="jcr:primaryType" /> 
  <meta content="content_type:reference;geptopics:SG_AEMFORMS/categories/assembling_pdf_documents;products:SG_EXPERIENCEMANAGER/6.4/FORMS;topic_tags:operations" name="cq:tags" /> 
  <meta content="help/components/pages/article-3" name="sling:resourceType" /> 
  <meta content="2017-10-03T06:52:23.593-0400" name="firstPublishExternalDate" /> 
  <meta content="audience:developing" name="primaryAudienceTag" /> 
  <meta content="34c5bbb2-3898-4a59-9bc7-22c38787297d" name="jcr:predecessors" /> 
  <meta content="" name="jcr:versionHistory" /> 
  <meta content="carlino" name="cq:lastModifiedBy" /> 
  <meta content="/content/help/en/experience-manager/6-4/forms/developing/morehelp/operations;/content/help/en/experience-manager/6-4/forms/developing/morehelp/operations" name="moreHelpPaths" /> 
  <meta content="Programmatically Disassembling PDF Documents" name="jcr:title" /> 
  <meta content="mix:versionable" name="jcr:mixinTypes" /> 
  <meta content="" name="jcr:baseVersion" /> 
  <meta content="2018-04-03T08:32:20.478-0400" name="cq:lastReplicated" /> 
  <meta content="2017-08-09T03:29:44.103-0400" name="lr_lastModified" /> 
  <meta content="true" name="jcr:isCheckedOut" /> 
  <meta content="admin" name="lr_lastModifiedBy" /> 
  <meta content="admin" name="jcr:createdBy" /> 
  <meta content="AEMForms/6.1/ProgramLC/WS624e3cba99b79e12e69a9941333732bac8-7fb4.2,AEMForms/6.1/ProgramLC/WS624e3cba99b79e12-50dd50901336a356c8c-7ffe.2,AEMForms/6.1/ProgramLC/WS624e3cba99b79e12e69a9941333732bac8-741f.2,AEMForms/6.1/ProgramLC/WS624e3cba99b79e12e69a9941333732bac8-741e.2" name="cq:gepId" /> 
  <meta content="/apps/help/templates/article-3" name="cq:template" /> 
  <meta content="carlino" name="cq:lastReplicatedBy" /> 
  <meta content="" name="publishExternalURL" /> 
 </head> 
 <body> 
  <p>You can disassemble a PDF document by passing it to the Assembler service. Typically, this task is useful when the PDF document was originally created from many individual documents, such as a collection of statements. In the following illustration, DocA is divided into multiple resultant documents, where the first level 1 bookmark on a page identifies the start of a new resultant document.</p> 
  <img alt="" src="assets/pd_pd_pdfsfrombookmarks.png" /> 
  <p>To disassemble a PDF document, ensure that the <span class="code">PDFsFromBookmarks</span> element is located in the DDX document. The <span class="code">PDFsFromBookmarks</span> element is a resultant element and can be only a child element of the <span class="code">DDX</span> element. It does not have a <span class="code">result</span> attribute because it can result in the generation of multiple documents. </p> 
  <p>The <span class="code">PDFsFromBookmarks</span> element causes a single document to be generated for each level 1 bookmark in the source document.</p> 
  <p>For the purpose of this discussion, assume the following DDX document is used.</p> 
  <codeblock gutter="true" class="syntax as3">
     &lt;?xml&amp;nbsp;version="1.0"&amp;nbsp;encoding="UTF-8"?&gt;&amp;nbsp;!!discoiqbr!! &lt;DDX&amp;nbsp;xmlns="http://ns.adobe.com/DDX/1.0/"&gt;&amp;nbsp;!!discoiqbr!! &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;PDFsFromBookmarks&amp;nbsp;prefix="stmt"&gt;&amp;nbsp;!!discoiqbr!! &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;PDF&amp;nbsp;source="AssemblerResultPDF.pdf"/&gt;&amp;nbsp;!!discoiqbr!! &lt;/PDFsFromBookmarks&gt;&amp;nbsp;!!discoiqbr!! &lt;/DDX&gt; 
  </codeblock> 
  <note> 
   <p>Before reading this section, it is recommended that you be familiar with assembling PDF documents by using the Assembler service. (See <a href="/programming-with-aem-forms/programmatically-assembling-pdf-documents-programmatically programmatically-assembling-pdf-documents-programmatically#programmatically_assembling_pdf_documents">Programmatically Assembling PDF Documents</a>.)</p> 
  </note> 
  <note> 
   <p>When passing a single PDF document to the Assembler service and getting back a single document, you can invoke the <span class="code">invokeOneDocument</span> operation. However, to disassemble a PDF document, use the <span class="code">invokeDDX</span> operation because although one input PDF document is passed to the Assembler service, the Assembler service returns a collection object that contains one or more documents.</p> 
  </note> 
  <note> 
   <p>For more information about the Assembler service, see <a href="http://www.adobe.com/go/learn_aemforms_services_63">Services Reference for AEM Forms</a>.</p> 
  </note> 
  <note> 
   <p>For more information about a DDX document, see <a href="http://www.adobe.com/go/learn_aemforms_ddx_63">Assembler Service and DDX Reference</a>. </p> 
  </note> 
  <h2 id="summary_of_steps">Summary of steps</h2> 
  <p></p> 
  <p>To disassemble a PDF document, perform the following tasks:</p> 
  <ol> 
   <li><p>Include project files.</p></li> 
   <li><p>Create a PDF Assembler client.</p></li> 
   <li><p>Reference an existing DDX document.</p></li> 
   <li><p>Reference a PDF document to disassemble.</p></li> 
   <li><p>Set run-time options.</p></li> 
   <li><p>Disassemble the PDF document. </p></li> 
   <li><p>Save the disassembled PDF documents.</p></li> 
  </ol> 
  <p><strong>Include project files</strong></p> 
  <p>Include the necessary files in your development project. If you are creating a client application by using Java, include the necessary JAR files. If you are using web services, ensure that you include the proxy files. </p> 
  <p>The following JAR files must be added to your project’s class path:</p> 
  <ul> 
   <li><p>adobe-livecycle-client.jar</p></li> 
   <li><p>adobe-usermanager-client.jar</p></li> 
   <li><p>adobe-assembler-client.jar</p></li> 
   <li><p>adobe-utilities.jar (required if AEM Forms is deployed on JBoss)</p></li> 
   <li><p>jbossall-client.jar (required if AEM Forms is deployed on JBoss)</p></li> 
  </ul> 
  <p>if AEM Forms is deployed on a supported J2EE application server that is not JBoss, you must replace adobe-utilities.jar and jbossall-client.jar with JAR files that are specific to the J2EE application server on which AEM Forms is deployed. </p> 
  <p><strong>Create a PDF Assembler client</strong></p> 
  <p>Before you can programmatically perform an Assembler operation, you must create an Assembler service client.</p> 
  <p><strong>Reference an existing DDX document</strong></p> 
  <p>A DDX document must be referenced to disassemble a PDF document. This DDX document must contain the <span class="code">PDFsFromBookmarks</span> element.</p> 
  <p><strong>Reference a PDF document to disassemble</strong></p> 
  <p>To disassemble a PDF document, reference a PDF file that represents the PDF document to disassemble. When passed to the Assembler service, a separate PDF document is returned for each level 1 bookmark in the document.</p> 
  <p><strong>Set run-time options</strong></p> 
  <p>You can set run-time options that control the behaviour of the Assembler service while it performs a job. For example, you can set an option that instructs the Assembler service to continue processing a job if an error is encountered. </p> 
  <p><strong>Disassemble the PDF document</strong></p> 
  <p>After you create the Assembler service client, reference the DDX document, reference a PDF document to disassemble, and set run-time options, you can disassemble a PDF document by invoking the <span class="code">invokeDDX</span> method. Provided that the DDX document contains instructions to disassemble the PDF document, the Assembler service returns disassembled PDF documents within a collection object.</p> 
  <p><strong>Save the disassembled PDF documents</strong></p> 
  <p>All disassembled PDF documents are returned within a collection object. Iterate through the collection object and save each PDF document as a PDF file. </p> 
  <p><strong>See also</strong></p> 
  <p><a href="/programming-with-aem-forms/programmatically-disassembling-pdf-documents-programmatically disassemble-pdf-document-using-java#disassemble_a_pdf_document_using_the_java_api">Disassemble a PDF document using the Java API</a></p> 
  <p><a href="/programming-with-aem-forms/programmatically-disassembling-pdf-documents-programmatically disassemble-pdf-document-using-web#disassemble_a_pdf_document_using_the_web_service_api">Disassemble a PDF document using the web service API</a></p> 
  <p><a href="#unresolvedlink-lc-in-invoke-using-java-iu.xml#ws624e3cba99b79e12e69a9941333732bac8-7b4b.2">Including AEM Forms Java library files</a></p> 
  <p><a href="#unresolvedlink-lc-in-invoke-using-java-iu.xml#ws624e3cba99b79e12e69a9941333732bac8-7fd6.2">Setting connection properties</a></p> 
  <p><a href="/programming-with-aem-forms/programmatically-assembling-pdf-documents-programmatically programmatically-assembling-pdf-documents-programmatically#programmatically_assembling_pdf_documents">Programmatically Assembling PDF Documents</a></p> 
  <h2 id="disassemble_a_pdf_document_using_the_java_api">Disassemble a PDF document using the Java API</h2> 
  <p></p> 
  <p>Disassemble a PDF document by using the Assembler Service API (Java):</p> 
  <ol> 
   <li><p>Include project files. </p><p>Include client JAR files, such as adobe-assembler-client.jar, in your Java project’s class path.</p></li> 
   <li><p>Create a PDF Assembler client. </p> 
    <ul> 
     <li><p>Create a <span class="code">ServiceClientFactory</span> object that contains connection properties.</p></li> 
     <li><p>Create an <span class="code">AssemblerServiceClient</span> object by using its constructor and passing the <span class="code">ServiceClientFactory</span> object. </p></li> 
    </ul></li> 
   <li><p>Reference an existing DDX document. </p> 
    <ul> 
     <li><p>Create a <span class="code">java.io.FileInputStream</span> object that represents the DDX document by using its constructor and passing a string value that specifies the location of the DDX file.</p></li> 
     <li><p>Create a <span class="code">com.adobe.idp.Document</span> object by using its constructor and passing the <span class="code">java.io.FileInputStream</span> object.</p></li> 
    </ul></li> 
   <li><p>Reference a PDF document to disassemble. </p> 
    <ul> 
     <li><p>Create a <span class="code">java.util.Map</span> object that is used to store input PDF documents by using a <span class="code">HashMap</span> constructor.</p></li> 
     <li><p>Create a <span class="code">java.io.FileInputStream</span> object by using its constructor and passing the location of the PDF document to disassemble. </p></li> 
     <li><p>Create a <span class="code">com.adobe.idp.Document</span> object and pass the <span class="code">java.io.FileInputStream</span> object that contains the PDF document to disassemble. </p></li> 
     <li><p>Add an entry to the <span class="code">java.util.Map</span> object by invoking its <span class="code">put</span> method and passing the following arguments:</p> 
      <ul> 
       <li><p>A string value that represents the key name. This value must match the value of the PDF source element specified in the DDX document.</p></li> 
       <li><p>A <span class="code">com.adobe.idp.Document</span> object that contains the PDF document to disassemble.</p></li> 
      </ul></li> 
    </ul></li> 
   <li><p>Set run-time options. </p> 
    <ul> 
     <li><p>Create an <span class="code">AssemblerOptionSpec</span> object that stores run-time options by using its constructor.</p></li> 
     <li><p>Set run-time options to meet your business requirements by invoking a method that belongs to the <span class="code">AssemblerOptionSpec</span> object. For example, to instruct the Assembler service to continue processing a job when an error occurs, invoke the <span class="code">AssemblerOptionSpec</span> object’s <span class="code">setFailOnError</span> method and pass <span class="code">false</span>.</p></li> 
    </ul></li> 
   <li><p>Disassemble the PDF document. </p><p>Invoke the <span class="code">AssemblerServiceClient</span> object’s <span class="code">invokeDDX</span> method and pass the following required values:</p> 
    <ul> 
     <li><p>A <span class="code">com.adobe.idp.Document</span> object that represents the DDX document to use</p></li> 
     <li><p>A <span class="code">java.util.Map</span> object that contains the PDF document to disassemble</p></li> 
     <li><p>A <span class="code">com.adobe.livecycle.assembler.client.AssemblerOptionSpec</span> object that specifies the run-time options, including the default font and the job log level</p></li> 
    </ul><p>The <span class="code">invokeDDX</span> method returns a <span class="code">com.adobe.livecycle.assembler.client.AssemblerResult</span> object that contains the disassembled PDF documents and any exceptions that occurred.</p></li> 
   <li><p>Save the disassembled PDF documents. </p><p>To obtain the disassembled PDF documents, perform the following actions:</p> 
    <ul> 
     <li><p>Invoke the <span class="code">AssemblerResult</span> object’s <span class="code">getDocuments</span> method. This returns a <span class="code">java.util.Map</span> object.</p></li> 
     <li><p>Iterate through the <span class="code">java.util.Map</span> object until you find the resultant <span class="code">com.adobe.idp.Document</span> object.</p></li> 
     <li><p>Invoke the <span class="code">com.adobe.idp.Document</span> object’s <span class="code">copyToFile</span> method to extract the PDF document.</p></li> 
    </ul></li> 
  </ol> 
  <p><strong>See also</strong></p> 
  <p><a href="programmatically-disassembling-pdf-documents-programmatically#programmatically_disassembling_pdf_documents">Programmatically Disassembling PDF Documents</a></p> 
  <p><a href="#unresolvedlink-lc-qs-assembler-as.xml#ws624e3cba99b79e12e69a9941333732bac8-7fb2.2">Quick Start (SOAP mode): Disassembling a PDF document using the Java API</a></p> 
  <p><a href="#unresolvedlink-lc-in-invoke-using-java-iu.xml#ws624e3cba99b79e12e69a9941333732bac8-7b4b.2">Including AEM Forms Java library files</a></p> 
  <p><a href="#unresolvedlink-lc-in-invoke-using-java-iu.xml#ws624e3cba99b79e12e69a9941333732bac8-7fd6.2">Setting connection properties</a></p> 
  <h2 id="disassemble_a_pdf_document_using_the_web_service_api">Disassemble a PDF document using the web service API</h2> 
  <p></p> 
  <p>Disassemble a PDF document by using the Assembler Service API (web service):</p> 
  <ol> 
   <li><p>Include project files. </p><p>Create a Microsoft .NET project that uses MTOM. Ensure that you use the following WSDL definition when setting a service reference: <span class="code">http://localhost:8080/soap/services/AssemblerService?WSDL&amp;lc_version=9.0.1</span>. </p> 
    <note> 
     <p>Replace <span class="code">localhost</span> with the IP address of the server hosting AEM Forms. </p> 
    </note></li> 
   <li><p>Create a PDF Assembler client. </p> 
    <ul> 
     <li><p>Create an <span class="code">AssemblerServiceClient</span> object by using its default constructor. </p></li> 
     <li><p>Create an <span class="code">AssemblerServiceClient.Endpoint.Address</span> object by using the <span class="code">System.ServiceModel.EndpointAddress</span> constructor. Pass a string value that specifies the WSDL to the AEM Forms service (for example, <span class="code">http://localhost:8080/soap/services/AssemblerService?blob=mtom</span>). You do not need to use the <span class="code">lc_version</span> attribute. This attribute is used when you create a service reference.</p></li> 
     <li><p>Create a <span class="code">System.ServiceModel.BasicHttpBinding</span> object by getting the value of the <span class="code">AssemblerServiceClient.Endpoint.Binding</span> field. Cast the return value to <span class="code">BasicHttpBinding</span>. </p></li> 
     <li><p>Set the <span class="code">System.ServiceModel.BasicHttpBinding</span> object’s <span class="code">MessageEncoding</span> field to <span class="code">WSMessageEncoding.Mtom</span>. This value ensures that MTOM is used. </p></li> 
     <li><p>Enable basic HTTP authentication by performing the following tasks:</p> 
      <ul> 
       <li><p>Assign the AEM forms user name to the field <span class="code">AssemblerServiceClient.ClientCredentials.UserName.UserName</span>.</p></li> 
       <li><p>Assign the corresponding password value to the field <span class="code">AssemblerServiceClient.ClientCredentials.UserName.Password</span>.</p></li> 
       <li><p>Assign the constant value <span class="code">HttpClientCredentialType.Basic</span> to the field <span class="code">BasicHttpBindingSecurity.Transport.ClientCredentialType</span>. </p></li> 
       <li><p>Assign the constant value <span class="code">BasicHttpSecurityMode.TransportCredentialOnly</span> to the field <span class="code">BasicHttpBindingSecurity.Security.Mode</span>. </p></li> 
      </ul></li> 
    </ul></li> 
   <li><p>Reference an existing DDX document. </p> 
    <ul> 
     <li><p>Create a <span class="code">BLOB</span> object by using its constructor. The <span class="code">BLOB</span> object is used to store the DDX document.</p></li> 
     <li><p>Create a <span class="code">System.IO.FileStream</span> object by invoking its constructor. Pass a string value that represents the file location of the DDX document and the mode in which to open the file.</p></li> 
     <li><p>Create a byte array that stores the content of the <span class="code">System.IO.FileStream</span> object. You can determine the size of the byte array by getting the <span class="code">System.IO.FileStream</span> object’s <span class="code">Length</span> property. </p></li> 
     <li><p>Populate the byte array with stream data by invoking the <span class="code">System.IO.FileStream</span> object’s <span class="code">Read</span> method and passing the byte array, the starting position, and the stream length to read.</p></li> 
     <li><p>Populate the <span class="code">BLOB</span> object by assigning its <span class="code">MTOM</span> property with the contents of the byte array.</p></li> 
    </ul></li> 
   <li><p>Reference a PDF document to disassemble. </p> 
    <ul> 
     <li><p>Create a <span class="code">BLOB</span> object by using its constructor. The <span class="code">BLOB</span> object is used to store the input PDF document. This <span class="code">BLOB</span> object is passed to the <span class="code">invokeOneDocument</span> as an argument. </p></li> 
     <li><p>Create a <span class="code">System.IO.FileStream</span> object by invoking its constructor and passing a string value that represents the file location of the input PDF document and the mode in which to open the file.</p></li> 
     <li><p>Create a byte array that stores the content of the <span class="code">System.IO.FileStream</span> object. You can determine the size of the byte array by getting the <span class="code">System.IO.FileStream</span> object’s <span class="code">Length</span> property. </p></li> 
     <li><p>Populate the byte array with stream data by invoking the <span class="code">System.IO.FileStream</span> object’s <span class="code">Read</span> method and passing the byte array, the starting position, and the stream length to read.</p></li> 
     <li><p>Populate the <span class="code">BLOB</span> object by assigning its <span class="code">MTOM</span> field the contents of the byte array.</p></li> 
     <li><p>Create a <span class="code">MyMapOf_xsd_string_To_xsd_anyType</span> object. This collection object is used to store the PDF to disassemble. </p></li> 
     <li><p>Create a <span class="code">MyMapOf_xsd_string_To_xsd_anyType_Item</span> object. </p></li> 
     <li><p>Assign a string value that represents the key name to the <span class="code">MyMapOf_xsd_string_To_xsd_anyType_Item</span> object’s <span class="code">key</span> field. This value must match the value of the PDF source element specified in the DDX document.</p></li> 
     <li><p>Assign the <span class="code">BLOB</span> object that stores the PDF document to the <span class="code">MyMapOf_xsd_string_To_xsd_anyType_Item</span> object’s <span class="code">value</span> field.</p></li> 
     <li><p>Add the <span class="code">MyMapOf_xsd_string_To_xsd_anyType_Item</span> object to the <span class="code">MyMapOf_xsd_string_To_xsd_anyType</span> object. Invoke the <span class="code">MyMapOf_xsd_string_To_xsd_anyType</span> object’ <span class="code">Add</span> method and pass the <span class="code">MyMapOf_xsd_string_To_xsd_anyType</span> object.</p></li> 
    </ul></li> 
   <li><p>Set run-time options. </p> 
    <ul> 
     <li><p>Create an <span class="code">AssemblerOptionSpec</span> object that stores run-time options by using its constructor.</p></li> 
     <li><p>Set run-time options to meet your business requirements by assigning a value to a data member that belongs to the <span class="code">AssemblerOptionSpec</span> object. For example, to instruct the Assembler service to continue processing a job when an error occurs, assign <span class="code">false</span> to the <span class="code">AssemblerOptionSpec</span> object’s <span class="code">failOnError</span> field.</p></li> 
    </ul></li> 
   <li><p>Disassemble the PDF document. </p><p>Invoke the <span class="code">AssemblerServiceClient</span> object’s <span class="code">invokeDDX</span> method and pass the following values:</p> 
    <ul> 
     <li><p>A <span class="code">BLOB</span> object that represents the DDX document that disassembles the PDF document</p></li> 
     <li><p>The <span class="code">MyMapOf_xsd_string_To_xsd_anyType</span> object that contains the PDF document to disassemble</p></li> 
     <li><p>An <span class="code">AssemblerOptionSpec</span> object that specifies run-time options</p></li> 
    </ul><p>The <span class="code">invokeDDX</span> method returns an <span class="code">AssemblerResult</span> object that contains the job results and any exceptions that occurred. </p></li> 
   <li><p>Save the disassembled PDF documents. </p><p>To obtain the newly created PDF documents, perform the following actions:</p> 
    <ul> 
     <li><p>Access the <span class="code">AssemblerResult</span> object’s <span class="code">documents</span> field, which is a <span class="code">Map</span> object that contains the disassembled PDF documents.</p></li> 
     <li><p>Iterate through the <span class="code">Map</span> object to obtain each resultant document. Then, cast that array member’s <span class="code">value</span> to a <span class="code">BLOB</span>.</p></li> 
     <li><p>Extract the binary data that represents the PDF document by accessing its <span class="code">BLOB</span> object’s <span class="code">MTOM</span> property. This returns an array of bytes that you can write out to a PDF file.</p></li> 
    </ul></li> 
  </ol> 
  <p><strong>See also</strong></p> 
  <p><a href="programmatically-disassembling-pdf-documents-programmatically#programmatically_disassembling_pdf_documents">Programmatically Disassembling PDF Documents</a></p> 
  <p><a href="#unresolvedlink-lc-qs-assembler-as.xml#ws624e3cba99b79e12e69a9941333732bac8-7fb1.2">Quick Start (MTOM): Disassembling a PDF document using the web service API</a></p> 
  <p><a href="#unresolvedlink-lc-in-invoke-using-web-services-iu.xml#ws624e3cba99b79e12e69a9941333732bac8-7fe7.2">Invoking AEM Forms using MTOM</a></p> 
 </body> 
</html>