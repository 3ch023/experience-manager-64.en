<?xml version="1.1" encoding="UTF-8" standalone="yes"?> 
<html> 
 <head> 
  <meta content="khsingh" name="cq:lastModifiedBy" /> 
  <meta content="2015-09-29T12:39:09.742-0400" name="firstPublishQADate" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/FORMS" name="primaryProductTag" /> 
  <meta content="2015-10-05T02:25:02.418-0400" name="lastPublishQADate" /> 
  <meta content="2017-12-01T19:06:24.577-0500" name="jcr:created" /> 
  <meta content="624fb95f-23bd-467f-8bf6-3e0afcb6a1bb" name="jcr:uuid" /> 
  <meta content="/apps/help/templates/article-3" name="cq:template" /> 
  <meta content="light" name="heroGradient" /> 
  <meta content="2018-04-26T04:38:00.901-0400" name="locHandOffDate" /> 
  <meta content="content_type:reference;products:SG_EXPERIENCEMANAGER/6.4/FORMS;topic_tags:document_services" name="cq:tags" /> 
  <meta content="Use HSM to certify eSigned documents" name="navTitle" /> 
  <meta content="2018-11-19T07:10:18.418-0500" name="cq:lastModified" /> 
  <meta content="true" name="jcr:isCheckedOut" /> 
  <meta content="https://helpx.adobe.com/experience-manager/6-4/forms/using/hsm-certify-esign-docs.html" name="publishExternalURL" /> 
  <meta content="admin" name="jcr:createdBy" /> 
  <meta content="976961bc-3d6d-47e7-81e3-9732897653cc" name="jcr:predecessors" /> 
  <meta content="" name="jcr:baseVersion" /> 
  <meta content="2016-05-31T06:29:00.842-0400" name="acrolinxDate" /> 
  <meta content="2116" name="acrolinxWords" /> 
  <meta content="133" name="acrolinxSentences" /> 
  <meta content="2018-11-19T07:10:18.415-0500" name="publishExternalDate" /> 
  <meta content="Use HSM to digitally sign or certify documents" name="jcr:title" /> 
  <meta content="help/components/pages/article-3" name="sling:resourceType" /> 
  <meta content="khsingh" name="cq:lastReplicatedBy" /> 
  <meta content="video" name="pageLayout" /> 
  <meta content="2018-11-19T07:10:18.415-0500" name="lastPublishExternalDate" /> 
  <meta content="Activate" name="cq:lastReplicationAction" /> 
  <meta content="" name="jcr:versionHistory" /> 
  <meta content="mix:versionable" name="jcr:mixinTypes" /> 
  <meta content="https://helpx.stage.adobe.com/aem-forms/6-2/hsm-certify-esign-docs.html" name="publishQAURL" /> 
  <meta content="" name="jcr:primaryType" /> 
  <meta content="Use HSM to certify eSigned documents" name="seoTitle" /> 
  <meta content="checked_not_improved" name="acrolinxStatus" /> 
  <meta content="2018-11-19T07:10:18.415-0500" name="topicBrowsingSortDate" /> 
  <meta content="2018-11-19T07:10:18.432-0500" name="cq:lastReplicated" /> 
  <meta content="red" name="acrolinxPageStatus" /> 
  <meta content="khsingh@adobe.com" name="lr_lastReplicatedBy" /> 
  <meta content="vishgupt" name="acrolinxLastCheckedBy" /> 
  <meta content="http://checkstyle.corp.adobe.com:8031/output/en/hsm_certify_esign_docs_admin_5e12de0b318c6865_1929_report.xml" name="acrolinxReportURL" /> 
  <meta content="false" name="doNotLocalize" /> 
  <meta content="2015-10-05T02:25:02.418-0400" name="publishQADate" /> 
  <meta content="Use HSM or etoken devices to certify eSigned documents" name="seoDescription" /> 
  <meta content="2016-04-21T08:46:04.898-0400" name="firstPublishExternalDate" /> 
  <meta content="/content/help/en/experience-manager/6-4/forms/morehelp/document_services;/content/help/en/experience-manager/6-4/forms/morehelp/document_services" name="moreHelpPaths" /> 
  <meta content="false" name="isReadyForLocalization" /> 
  <meta content="vishgupt" name="contentOwner" /> 
  <meta content="/etc/designs/help" name="cq:designPath" /> 
  <meta content="en_us" name="jcr:language" /> 
  <meta content="left" name="sideColumn" /> 
 </head> 
 <body> 
  <p>Hardware security modules (HSM) and etokens are dedicated, hardened, and tamper-resistance computing devices designed to securely manage, process, and store digital keys. These devices are directly attached to a computer or a network server.</p> 
  <p>Adobe Experience Manager Forms can use credentials stored on an HSM or etoken to eSign or apply server-sided digital signatures to a document. To use an HSM or etoken device with AEM Forms:</p> 
  <ol> 
   <li>Enable the DocAssurance service.</li> 
   <li>Set up certificates for Reader extension.</li> 
   <li> Create an alias for the HSM or etoken device in AEM Web Console.</li> 
   <li>Use the DocAssurance Service APIs to sign or certify the documents with digital keys stored on the device.</li> 
  </ol> 
  <h2 id="ConfigureHSMetoken">Before you configure the HSM or etoken devices with AEM Forms &lt;br&gt;</h2> 
  <ul> 
   <li>Install <a href="/content/help/en/aem-forms/kb/aem-forms-releases" target="_blank">AEM Forms add-on</a> package.</li> 
   <li>Install and configure HSM or etoken client software on the same computer as AEM server. The client software is required to communicate with the HSM and etoken devices.</li> 
   <li>(Microsoft Windows only) Set the JAVA_HOME_32 environment variable to point to the directory where the 32-bit version of Java 8 Development Kit (JDK 8) is installed. The default path of the directory is C:\Program Files(x86)\Java\jdk&amp;lt;version&amp;gt;</li> 
   <li>(AEM Forms on OSGi only) Install the root certificate in the trust store. It is required to verify the signed PDF<br /> </li> 
  </ul> 
  <note> 
   <p>On Microsoft Windows, only 32-bit LunaSA or EToken clients are supported.</p> 
  </note> 
  <h2 id="ConfigureDocAssurance">Enable the DocAssurance service</h2> 
  <p>By default, the DocAssurance service is not enabled. Perform the following steps to enable the service: </p> 
  <ol> 
   <li><p>Stop the Author instance of your AEM Forms environment.<br /> </p> </li> 
   <li><p>Open the [AEM_root]\crx-quickstart\conf\sling.properties file for editing.</p> 
    <note> 
     <p>If you have used the [AEM_root]\crx-quickstart\bin\start.bat file to start the AEM instance, then open the [AEM_root]\crx-quickstart\sling.properties file for editing. </p> 
    </note></li> 
   <li><p>Add or replace the following properties to the sling.properties file:<br /> </p> 
    <codeblock gutter="true" class="syntax shell">
      sling.bootdelegation.sun=sun.*,com.sun.*,sun.misc.*!!discoiqbr!!sling.bootdelegation.ibm=com.ibm.xml.*,com.ibm.*!!discoiqbr!!sling.bootdelegation.class.com.rsa.jsafe.provider.JsafeJCE=com.rsa.*!!discoiqbr!!sling.bootdelegation.class.org.bouncycastle.jce.provider.BouncyCastleProvider=org.bouncycastle.* 
    </codeblock></li> 
   <li><p>Save and close the sling.properties file.</p> </li> 
   <li><p>Restart the AEM instance.<br /> </p> </li> 
  </ol> 
  <h2>Set up certificates for Reader extensions</h2> 
  <p>Perform the following steps to setup certificates:</p> 
  <ol> 
   <li><p>Log in to AEM Author instance as an administrator.<br /> </p> </li> 
   <li><p>Click<strong> Adobe Experience Manager</strong> on Global Navigation Bar. Go to <strong>Tools </strong>&amp;gt; <strong>Security </strong>&amp;gt; <strong>Users</strong>. </p> </li> 
   <li><p>Click the <strong>name</strong> field of the user account. The <strong>Edit User Settings</strong> page opens. </p> </li> 
   <li><p>On the AEM Author instance, certificates reside in a KeyStore. If you have not created a KeyStore earlier, click <strong>Create KeyStore</strong> and set a new password for the KeyStore. If the server already contains a KeyStore, skip this step.<br /> </p> </li> 
   <li><p>On the <strong>Edit User Settings</strong> page, click <strong>Manage KeyStore</strong>.<br /> </p> </li> 
   <li><p>On KeyStore Management dialog, expand the <strong>Add Private Key from Key Store file</strong> option and provide an alias. The alias is used to perform the Reader Extensions operation.</p> </li> 
   <li><p>To upload the certificate file, click <strong>Select Key Store File</strong> and upload a &amp;lt;filename&amp;gt;<span class="code">.pfx</span> file. </p> </li> 
   <li><p>Add the <strong>Key Store Password</strong>,<strong> Private Key Password</strong>, and <strong>Private Key Alias </strong>that is associated with the certificate to the respective fields. Click <strong>Submit</strong>.</p> 
    <note> 
     <p>To determine the P<strong>rivate Key Alias</strong> of a certificate, you can use the Java keytool command: <span class="code">keytool -list -v -keystore [keystore-file] -storetype pkcs12</span></p> 
    </note> 
    <note> 
     <p>In the <strong>Key Store Password</strong> and <strong>Private Key Password</strong> fields, specify the password provided with the certificate file. </p> 
    </note></li> 
  </ol> 
  <note> 
   <p>For AEM Forms on OSGi, to verify the signed PDF, the root certificate installed in the Trust Store.</p> 
  </note> 
  <note> 
   <p>On moving to production environment, replace your evaluation credentials with production credentials. Ensure that you delete your old Reader Extensions credentials, before updating an expired or evaluations credential. <br /> </p> 
  </note> 
  <h2 id="ConfigureDeviceinAEMConsole">Create an alias for the device &lt;br&gt;</h2> 
  <p>The alias contains all the parameters that an HSM or etoken requires. Perform the instructions listed below to create an alias for each HSM or etoken credential that eSign or Digital Signatures uses :</p> 
  <ol> 
   <li><p>Open AEM console. The default URL of AEM console is http://&amp;lt;host&amp;gt;:&amp;lt;port&amp;gt;/system/console/configMgr</p> </li> 
   <li><p>Open the <strong>HSM Credentials Configuration Service </strong>and specify values for the following fields:</p> 
    <ul> 
     <li><strong>Credential Alias</strong>: Specify a string used to identify the alias. This value is used as a property for some Digital Signatures operations, such as the Sign Signature Field operation. </li> 
     <li><strong>DLL Path</strong>: Specify the fully qualified path of your HSM or etoken client library on the server. For example, C:\Program Files\LunaSA\cryptoki.dll. In a clustered environment, this path must be identical for all servers in the cluster.</li> 
     <li><strong>HSM Pin</strong>: Specify the password required to access the device key. </li> 
     <li><strong>HSM Slot Id</strong>: Specify a slot identifier of type integer. The slot ID is set on a client-by-client basis. If you register a second machine to a different partition (for example, HSMPART2 on the same HSM device), then slot 1 is associated with the HSMPART2 partition for the client.<strong><br /> Note:</strong> <em>While configuring Etoken, specify a numeric value for the HSM Slot Id field. A numeric value is required to get the Signatures operations working.</em><br /> </li> 
     <li><strong>Certificate SHA1</strong>: Specify SHA1 value (thumbprint) of the public key (.cer) file for the credential you are using. Ensure that there are no spaces used in the SHA1 value. If you are using a physical certificate, then it is not required.</li> 
     <li><strong>HSM Device Type</strong>: Select the manufacturer of the HSM (Luna or other) or eToken device. </li> 
    </ul> <p>Click <strong>Save</strong>. The hardware security module is configured for AEM Forms. Now, you can use the hardware security module with AEM Forms to sign or certify documents.</p> </li> 
  </ol> 
  <h2 id="programatically">Use the DocAssurance Service APIs to sign or certify a document with digital keys stored on the device&amp;nbsp;</h2> 
  <p>The following sample code uses an HSM or etoken to sign or certify a document.</p> 
  <codeblock gutter="true" class="syntax java">
    /*************************************************************************!!discoiqbr!!&amp;nbsp;*!!discoiqbr!!&amp;nbsp;*&amp;nbsp;ADOBE&amp;nbsp;CONFIDENTIAL!!discoiqbr!!&amp;nbsp;*&amp;nbsp;___________________!!discoiqbr!!&amp;nbsp;*!!discoiqbr!!&amp;nbsp;*&amp;nbsp;&amp;nbsp;Copyright&amp;nbsp;2014&amp;nbsp;Adobe&amp;nbsp;Systems&amp;nbsp;Incorporated!!discoiqbr!!&amp;nbsp;*&amp;nbsp;&amp;nbsp;All&amp;nbsp;Rights&amp;nbsp;Reserved.!!discoiqbr!!&amp;nbsp;*!!discoiqbr!!&amp;nbsp;*&amp;nbsp;NOTICE:&amp;nbsp;&amp;nbsp;All&amp;nbsp;information&amp;nbsp;contained&amp;nbsp;herein&amp;nbsp;is,&amp;nbsp;and&amp;nbsp;remains!!discoiqbr!!&amp;nbsp;*&amp;nbsp;the&amp;nbsp;property&amp;nbsp;of&amp;nbsp;Adobe&amp;nbsp;Systems&amp;nbsp;Incorporated&amp;nbsp;and&amp;nbsp;its&amp;nbsp;suppliers,!!discoiqbr!!&amp;nbsp;*&amp;nbsp;if&amp;nbsp;any.&amp;nbsp;&amp;nbsp;The&amp;nbsp;intellectual&amp;nbsp;and&amp;nbsp;technical&amp;nbsp;concepts&amp;nbsp;contained!!discoiqbr!!&amp;nbsp;*&amp;nbsp;herein&amp;nbsp;are&amp;nbsp;proprietary&amp;nbsp;to&amp;nbsp;Adobe&amp;nbsp;Systems&amp;nbsp;Incorporated&amp;nbsp;and&amp;nbsp;its!!discoiqbr!!&amp;nbsp;*&amp;nbsp;suppliers&amp;nbsp;and&amp;nbsp;are&amp;nbsp;protected&amp;nbsp;by&amp;nbsp;trade&amp;nbsp;secret&amp;nbsp;or&amp;nbsp;copyright&amp;nbsp;law.!!discoiqbr!!&amp;nbsp;*&amp;nbsp;Dissemination&amp;nbsp;of&amp;nbsp;this&amp;nbsp;information&amp;nbsp;or&amp;nbsp;reproduction&amp;nbsp;of&amp;nbsp;this&amp;nbsp;material!!discoiqbr!!&amp;nbsp;*&amp;nbsp;is&amp;nbsp;strictly&amp;nbsp;forbidden&amp;nbsp;unless&amp;nbsp;prior&amp;nbsp;written&amp;nbsp;permission&amp;nbsp;is&amp;nbsp;obtained!!discoiqbr!!&amp;nbsp;*&amp;nbsp;from&amp;nbsp;Adobe&amp;nbsp;Systems&amp;nbsp;Incorporated.!!discoiqbr!!&amp;nbsp;**************************************************************************/!!discoiqbr!!package&amp;nbsp;com.adobe.docassurance.samples;!!discoiqbr!!!!discoiqbr!!import&amp;nbsp;java.io.ByteArrayInputStream;!!discoiqbr!!import&amp;nbsp;java.io.IOException;!!discoiqbr!!import&amp;nbsp;java.io.InputStream;!!discoiqbr!!!!discoiqbr!!import&amp;nbsp;javax.jcr.Binary;!!discoiqbr!!import&amp;nbsp;javax.jcr.Node;!!discoiqbr!!import&amp;nbsp;javax.jcr.RepositoryException;!!discoiqbr!!import&amp;nbsp;javax.jcr.Session;!!discoiqbr!!!!discoiqbr!!import&amp;nbsp;org.apache.felix.scr.annotations.Component;!!discoiqbr!!import&amp;nbsp;org.apache.felix.scr.annotations.Reference;!!discoiqbr!!import&amp;nbsp;org.apache.felix.scr.annotations.Service;!!discoiqbr!!import&amp;nbsp;org.apache.sling.api.resource.ResourceResolver;!!discoiqbr!!import&amp;nbsp;org.apache.sling.jcr.api.SlingRepository;!!discoiqbr!!import&amp;nbsp;org.apache.sling.jcr.resource.JcrResourceResolverFactory;!!discoiqbr!!!!discoiqbr!!import&amp;nbsp;com.adobe.aemfd.docmanager.Document;!!discoiqbr!!import&amp;nbsp;com.adobe.fd.docassurance.client.api.DocAssuranceException;!!discoiqbr!!import&amp;nbsp;com.adobe.fd.docassurance.client.api.DocAssuranceService;!!discoiqbr!!import&amp;nbsp;com.adobe.fd.docassurance.client.api.DocAssuranceServiceOperationTypes;!!discoiqbr!!import&amp;nbsp;com.adobe.fd.docassurance.client.api.SignatureOptions;!!discoiqbr!!import&amp;nbsp;com.adobe.fd.signatures.client.types.exceptions.InvalidArgumentException;!!discoiqbr!!import&amp;nbsp;com.adobe.fd.signatures.pdf.inputs.CredentialContext;!!discoiqbr!!import&amp;nbsp;com.adobe.fd.signatures.pdf.inputs.DSSPreferences;!!discoiqbr!!import&amp;nbsp;com.adobe.fd.signatures.pdf.inputs.DSSPreferencesImpl;!!discoiqbr!!import&amp;nbsp;com.adobe.fd.signatures.pdf.inputs.PDFSignatureAppearenceOptions;!!discoiqbr!!import&amp;nbsp;com.adobe.fd.signatures.pdf.inputs.UnlockOptions;!!discoiqbr!!import&amp;nbsp;com.adobe.fd.signatures.pdf.inputs.PDFSignatureAppearenceOptions.PDFSignatureAppearanceType;!!discoiqbr!!import&amp;nbsp;com.adobe.fd.signatures.pdf.inputs.PDFSignatureAppearenceOptions.TextDirection;!!discoiqbr!!import&amp;nbsp;com.adobe.fd.signatures.pki.client.types.common.HashAlgorithm;!!discoiqbr!!import&amp;nbsp;com.adobe.fd.signatures.pki.client.types.common.RevocationCheckStyle;!!discoiqbr!!import&amp;nbsp;com.adobe.fd.signatures.pki.client.types.prefs.CRLPreferences;!!discoiqbr!!import&amp;nbsp;com.adobe.fd.signatures.pki.client.types.prefs.CRLPreferencesImpl;!!discoiqbr!!import&amp;nbsp;com.adobe.fd.signatures.pki.client.types.prefs.GeneralPreferencesImpl;!!discoiqbr!!import&amp;nbsp;com.adobe.fd.signatures.pki.client.types.prefs.PKIPreferences;!!discoiqbr!!import&amp;nbsp;com.adobe.fd.signatures.pki.client.types.prefs.PKIPreferencesImpl;!!discoiqbr!!import&amp;nbsp;com.adobe.fd.signatures.pki.client.types.prefs.PathValidationPreferences;!!discoiqbr!!import&amp;nbsp;com.adobe.fd.signatures.pki.client.types.prefs.PathValidationPreferencesImpl;!!discoiqbr!!!!discoiqbr!!/**!!discoiqbr!!&amp;nbsp;*&amp;nbsp;Digital&amp;nbsp;signatures&amp;nbsp;can&amp;nbsp;be&amp;nbsp;applied&amp;nbsp;to&amp;nbsp;PDF&amp;nbsp;documents&amp;nbsp;to&amp;nbsp;provide&amp;nbsp;a&amp;nbsp;level&amp;nbsp;of&amp;nbsp;security.&amp;nbsp;Digital&amp;nbsp;signatures,&amp;nbsp;like&amp;nbsp;handwritten&amp;nbsp;signatures,&amp;nbsp;provide&amp;nbsp;a&amp;nbsp;means&amp;nbsp;by&amp;nbsp;which&amp;nbsp;signers&amp;nbsp;!!discoiqbr!!&amp;nbsp;*&amp;nbsp;identify&amp;nbsp;themselves&amp;nbsp;and&amp;nbsp;make&amp;nbsp;statements&amp;nbsp;about&amp;nbsp;a&amp;nbsp;document.&amp;nbsp;The&amp;nbsp;technology&amp;nbsp;used&amp;nbsp;to&amp;nbsp;digitally&amp;nbsp;sign&amp;nbsp;documents&amp;nbsp;helps&amp;nbsp;to&amp;nbsp;ensure&amp;nbsp;that&amp;nbsp;both&amp;nbsp;the&amp;nbsp;signer&amp;nbsp;and&amp;nbsp;recipients&amp;nbsp;are&amp;nbsp;clear&amp;nbsp;!!discoiqbr!!&amp;nbsp;*&amp;nbsp;about&amp;nbsp;what&amp;nbsp;was&amp;nbsp;signed&amp;nbsp;and&amp;nbsp;confident&amp;nbsp;that&amp;nbsp;the&amp;nbsp;document&amp;nbsp;was&amp;nbsp;not&amp;nbsp;altered&amp;nbsp;since&amp;nbsp;it&amp;nbsp;was&amp;nbsp;signed.!!discoiqbr!!&amp;nbsp;*&amp;nbsp;!!discoiqbr!!&amp;nbsp;*&amp;nbsp;PDF&amp;nbsp;documents&amp;nbsp;are&amp;nbsp;signed&amp;nbsp;by&amp;nbsp;means&amp;nbsp;of&amp;nbsp;public-key&amp;nbsp;technology.&amp;nbsp;A&amp;nbsp;signer&amp;nbsp;has&amp;nbsp;two&amp;nbsp;keys:&amp;nbsp;a&amp;nbsp;public&amp;nbsp;key&amp;nbsp;and&amp;nbsp;a&amp;nbsp;private&amp;nbsp;key.&amp;nbsp;The&amp;nbsp;private&amp;nbsp;key&amp;nbsp;is&amp;nbsp;stored&amp;nbsp;in&amp;nbsp;a&amp;nbsp;user's&amp;nbsp;credential&amp;nbsp;that&amp;nbsp;!!discoiqbr!!&amp;nbsp;*&amp;nbsp;must&amp;nbsp;be&amp;nbsp;available&amp;nbsp;at&amp;nbsp;the&amp;nbsp;time&amp;nbsp;of&amp;nbsp;signing.&amp;nbsp;The&amp;nbsp;public&amp;nbsp;key&amp;nbsp;is&amp;nbsp;stored&amp;nbsp;in&amp;nbsp;the&amp;nbsp;user's&amp;nbsp;certificate&amp;nbsp;that&amp;nbsp;must&amp;nbsp;be&amp;nbsp;available&amp;nbsp;to&amp;nbsp;recipients&amp;nbsp;to&amp;nbsp;validate&amp;nbsp;the&amp;nbsp;signature.&amp;nbsp;Information!!discoiqbr!!&amp;nbsp;*&amp;nbsp;about&amp;nbsp;revoked&amp;nbsp;certificates&amp;nbsp;is&amp;nbsp;found&amp;nbsp;in&amp;nbsp;certificate&amp;nbsp;revocation&amp;nbsp;lists&amp;nbsp;(CRLs)&amp;nbsp;and&amp;nbsp;Online&amp;nbsp;Certificate&amp;nbsp;Status&amp;nbsp;Protocol&amp;nbsp;(OCSP)&amp;nbsp;responses&amp;nbsp;distributed&amp;nbsp;by&amp;nbsp;Certificate&amp;nbsp;Authorities&amp;nbsp;(CAs).&amp;nbsp;!!discoiqbr!!&amp;nbsp;*&amp;nbsp;The&amp;nbsp;time&amp;nbsp;of&amp;nbsp;signing&amp;nbsp;can&amp;nbsp;be&amp;nbsp;obtained&amp;nbsp;from&amp;nbsp;a&amp;nbsp;trusted&amp;nbsp;source&amp;nbsp;known&amp;nbsp;as&amp;nbsp;a&amp;nbsp;Timestamping&amp;nbsp;Authority.!!discoiqbr!!&amp;nbsp;*&amp;nbsp;!!discoiqbr!!&amp;nbsp;*&amp;nbsp;The&amp;nbsp;following&amp;nbsp;Java&amp;nbsp;code&amp;nbsp;example&amp;nbsp;digitally&amp;nbsp;signs&amp;nbsp;a&amp;nbsp;PDF&amp;nbsp;document&amp;nbsp;that&amp;nbsp;is&amp;nbsp;based&amp;nbsp;on&amp;nbsp;a&amp;nbsp;PDF&amp;nbsp;file.&amp;nbsp;!!discoiqbr!!&amp;nbsp;*&amp;nbsp;The&amp;nbsp;alias&amp;nbsp;that&amp;nbsp;is&amp;nbsp;specified&amp;nbsp;for&amp;nbsp;the&amp;nbsp;security&amp;nbsp;credential&amp;nbsp;is&amp;nbsp;secure,&amp;nbsp;and&amp;nbsp;revocation&amp;nbsp;checking&amp;nbsp;is&amp;nbsp;performed.&amp;nbsp;!!discoiqbr!!&amp;nbsp;*&amp;nbsp;Because&amp;nbsp;no&amp;nbsp;CRL&amp;nbsp;or&amp;nbsp;OCSP&amp;nbsp;server&amp;nbsp;information&amp;nbsp;is&amp;nbsp;specified,&amp;nbsp;the&amp;nbsp;server&amp;nbsp;information&amp;nbsp;is&amp;nbsp;obtained&amp;nbsp;from&amp;nbsp;the&amp;nbsp;certificate&amp;nbsp;used&amp;nbsp;to&amp;nbsp;!!discoiqbr!!&amp;nbsp;*&amp;nbsp;digitally&amp;nbsp;sign&amp;nbsp;the&amp;nbsp;PDF&amp;nbsp;document!!discoiqbr!!&amp;nbsp;*&amp;nbsp;!!discoiqbr!!&amp;nbsp;*&amp;nbsp;PreRequisites&amp;nbsp;-&amp;nbsp;Digital&amp;nbsp;certificate&amp;nbsp;for&amp;nbsp;signing&amp;nbsp;the&amp;nbsp;document&amp;nbsp;has&amp;nbsp;to&amp;nbsp;be&amp;nbsp;uploaded&amp;nbsp;on&amp;nbsp;Granite&amp;nbsp;Key&amp;nbsp;Store!!discoiqbr!!&amp;nbsp;*/!!discoiqbr!!!!discoiqbr!!@Component!!discoiqbr!!@Service(value=Sign.class)!!discoiqbr!!public&amp;nbsp;class&amp;nbsp;Sign{!!discoiqbr!!&amp;nbsp;@Reference!!discoiqbr!!&amp;nbsp;private&amp;nbsp;DocAssuranceService&amp;nbsp;docAssuranceService;!!discoiqbr!!&amp;nbsp;!!discoiqbr!!&amp;nbsp;@Reference!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;SlingRepository&amp;nbsp;slingRepository;!!discoiqbr!!&amp;nbsp;!!discoiqbr!!&amp;nbsp;@Reference!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;JcrResourceResolverFactory&amp;nbsp;jcrResourceResolverFactory&amp;nbsp;;!!discoiqbr!!&amp;nbsp;!!discoiqbr!!&amp;nbsp;!!discoiqbr!!&amp;nbsp;/**!!discoiqbr!!&amp;nbsp;&amp;nbsp;*&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;*&amp;nbsp;@param&amp;nbsp;inputFile&amp;nbsp;-&amp;nbsp;path&amp;nbsp;to&amp;nbsp;the&amp;nbsp;pdf&amp;nbsp;document&amp;nbsp;stored&amp;nbsp;at&amp;nbsp;JCR&amp;nbsp;node&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;*&amp;nbsp;@param&amp;nbsp;outputFile&amp;nbsp;-&amp;nbsp;path&amp;nbsp;to&amp;nbsp;the&amp;nbsp;pdf&amp;nbsp;document&amp;nbsp;where&amp;nbsp;the&amp;nbsp;output&amp;nbsp;needs&amp;nbsp;to&amp;nbsp;be&amp;nbsp;stored!!discoiqbr!!&amp;nbsp;&amp;nbsp;*&amp;nbsp;@throws&amp;nbsp;IOException!!discoiqbr!!&amp;nbsp;&amp;nbsp;*&amp;nbsp;@throws&amp;nbsp;RepositoryException!!discoiqbr!!&amp;nbsp;&amp;nbsp;*&amp;nbsp;@throws&amp;nbsp;InvalidArgumentException!!discoiqbr!!&amp;nbsp;&amp;nbsp;*&amp;nbsp;@throws&amp;nbsp;DocAssuranceException!!discoiqbr!!&amp;nbsp;&amp;nbsp;*/!!discoiqbr!!&amp;nbsp;public&amp;nbsp;void&amp;nbsp;signExtend(String&amp;nbsp;inputFile,&amp;nbsp;String&amp;nbsp;outputFile,&amp;nbsp;String&amp;nbsp;alias)&amp;nbsp;throws&amp;nbsp;IOException,&amp;nbsp;RepositoryException,&amp;nbsp;InvalidArgumentException,&amp;nbsp;DocAssuranceException{!!discoiqbr!!&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;Document&amp;nbsp;inDoc&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Document(inputFile);!!discoiqbr!!&amp;nbsp;&amp;nbsp;Document&amp;nbsp;outDoc&amp;nbsp;=&amp;nbsp;null;!!discoiqbr!!&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;Session&amp;nbsp;adminSession&amp;nbsp;=&amp;nbsp;null;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ResourceResolver&amp;nbsp;resourceResolver&amp;nbsp;=&amp;nbsp;null;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&amp;nbsp;resourceResolver&amp;nbsp;with&amp;nbsp;admin&amp;nbsp;privileges&amp;nbsp;to&amp;nbsp;be&amp;nbsp;passed&amp;nbsp;to&amp;nbsp;SignatureServiceAPI&amp;nbsp;and&amp;nbsp;Reader&amp;nbsp;Extensions!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;the&amp;nbsp;resource&amp;nbsp;resolver&amp;nbsp;for&amp;nbsp;signature&amp;nbsp;options&amp;nbsp;has&amp;nbsp;to&amp;nbsp;be&amp;nbsp;corresponding&amp;nbsp;to&amp;nbsp;the&amp;nbsp;user&amp;nbsp;who&amp;nbsp;has&amp;nbsp;the&amp;nbsp;signing&amp;nbsp;certificate&amp;nbsp;in&amp;nbsp;his&amp;nbsp;granite&amp;nbsp;key&amp;nbsp;store!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;the&amp;nbsp;resource&amp;nbsp;resolver&amp;nbsp;for&amp;nbsp;signature&amp;nbsp;options&amp;nbsp;has&amp;nbsp;to&amp;nbsp;be&amp;nbsp;corresponding&amp;nbsp;to&amp;nbsp;the&amp;nbsp;user&amp;nbsp;who&amp;nbsp;has&amp;nbsp;the&amp;nbsp;credential&amp;nbsp;for&amp;nbsp;reader&amp;nbsp;extension&amp;nbsp;in&amp;nbsp;his&amp;nbsp;granite&amp;nbsp;key&amp;nbsp;store!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;here&amp;nbsp;we&amp;nbsp;are&amp;nbsp;using&amp;nbsp;the&amp;nbsp;same&amp;nbsp;resource&amp;nbsp;resolver!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;adminSession&amp;nbsp;=&amp;nbsp;slingRepository.loginAdministrative(null);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;resourceResolver&amp;nbsp;=&amp;nbsp;jcrResourceResolverFactory.getResourceResolver(adminSession);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//retrieve&amp;nbsp;specifications&amp;nbsp;for&amp;nbsp;each&amp;nbsp;of&amp;nbsp;the&amp;nbsp;services,&amp;nbsp;you&amp;nbsp;may&amp;nbsp;pass&amp;nbsp;null&amp;nbsp;if&amp;nbsp;you&amp;nbsp;don't&amp;nbsp;want&amp;nbsp;to&amp;nbsp;use&amp;nbsp;that&amp;nbsp;service!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//as&amp;nbsp;we&amp;nbsp;don't&amp;nbsp;want&amp;nbsp;encryption&amp;nbsp;in&amp;nbsp;this&amp;nbsp;case,&amp;nbsp;passing&amp;nbsp;null&amp;nbsp;for&amp;nbsp;Encryption&amp;nbsp;Options!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//for&amp;nbsp;encrypted&amp;nbsp;document&amp;nbsp;pass&amp;nbsp;Unlock&amp;nbsp;Options&amp;nbsp;-&amp;nbsp;see&amp;nbsp;the&amp;nbsp;method&amp;nbsp;getUnlockOptions()&amp;nbsp;below!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;outDoc&amp;nbsp;=&amp;nbsp;docAssuranceService.secureDocument(inDoc,&amp;nbsp;null,&amp;nbsp;getSignatureOptions(alias,resourceResolver),null,null);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;catch(Exception&amp;nbsp;e){!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;e.printStackTrace();!!discoiqbr!!&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;finally{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;always&amp;nbsp;close&amp;nbsp;the&amp;nbsp;PDFDocument&amp;nbsp;object&amp;nbsp;after&amp;nbsp;your&amp;nbsp;processing&amp;nbsp;is&amp;nbsp;done.!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if(inDoc&amp;nbsp;!=&amp;nbsp;null){!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inDoc.close();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if(adminSession&amp;nbsp;!=&amp;nbsp;null&amp;nbsp;&amp;&amp;&amp;nbsp;adminSession.isLive()){!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if(resourceResolver&amp;nbsp;!=&amp;nbsp;null){!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;resourceResolver.close();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;adminSession.logout();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//flush&amp;nbsp;the&amp;nbsp;output&amp;nbsp;document&amp;nbsp;contents&amp;nbsp;to&amp;nbsp;JCR&amp;nbsp;Node!!discoiqbr!!&amp;nbsp;&amp;nbsp;flush(outDoc,&amp;nbsp;outputFile);!!discoiqbr!!&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;}!!discoiqbr!!&amp;nbsp;!!discoiqbr!!&amp;nbsp;/**!!discoiqbr!!&amp;nbsp;&amp;nbsp;*&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;*&amp;nbsp;@param&amp;nbsp;rr&amp;nbsp;resource&amp;nbsp;resolver&amp;nbsp;corresponding&amp;nbsp;to&amp;nbsp;the&amp;nbsp;user&amp;nbsp;with&amp;nbsp;the&amp;nbsp;access&amp;nbsp;to&amp;nbsp;signing&amp;nbsp;credential&amp;nbsp;for&amp;nbsp;the&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;*&amp;nbsp;given&amp;nbsp;alias&amp;nbsp;"allcertificatesanypolicytest11ee_new"&amp;nbsp;in&amp;nbsp;this&amp;nbsp;case!!discoiqbr!!&amp;nbsp;&amp;nbsp;*&amp;nbsp;@return&amp;nbsp;SignatureOptions!!discoiqbr!!&amp;nbsp;&amp;nbsp;*/!!discoiqbr!!&amp;nbsp;private&amp;nbsp;SignatureOptions&amp;nbsp;getSignatureOptions(String&amp;nbsp;alias,&amp;nbsp;ResourceResolver&amp;nbsp;rr){!!discoiqbr!!&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;//create&amp;nbsp;an&amp;nbsp;instance&amp;nbsp;of&amp;nbsp;SignatureOptions!!discoiqbr!!&amp;nbsp;&amp;nbsp;SignatureOptions&amp;nbsp;signatureOptions&amp;nbsp;=&amp;nbsp;SignatureOptions.getInstance();!!discoiqbr!!&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;//set&amp;nbsp;the&amp;nbsp;operation&amp;nbsp;you&amp;nbsp;want&amp;nbsp;to&amp;nbsp;perform&amp;nbsp;-&amp;nbsp;SIGN/CERTIFY!!discoiqbr!!&amp;nbsp;&amp;nbsp;signatureOptions.setOperationType(DocAssuranceServiceOperationTypes.SIGN);!!discoiqbr!!&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;//field&amp;nbsp;to&amp;nbsp;sign!!discoiqbr!!&amp;nbsp;&amp;nbsp;String&amp;nbsp;fieldName&amp;nbsp;=&amp;nbsp;"Signature1"&amp;nbsp;;!!discoiqbr!!&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//Hash&amp;nbsp;Algo&amp;nbsp;to&amp;nbsp;be&amp;nbsp;used&amp;nbsp;to&amp;nbsp;compute&amp;nbsp;digest&amp;nbsp;the&amp;nbsp;PDF&amp;nbsp;document!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HashAlgorithm&amp;nbsp;algo&amp;nbsp;=&amp;nbsp;HashAlgorithm.SHA384;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//Reason&amp;nbsp;for&amp;nbsp;signing/certifying!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;reason&amp;nbsp;=&amp;nbsp;"Test&amp;nbsp;Reason";!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//location&amp;nbsp;of&amp;nbsp;the&amp;nbsp;signer!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;location&amp;nbsp;=&amp;nbsp;"Test&amp;nbsp;Location";!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//contact&amp;nbsp;info&amp;nbsp;of&amp;nbsp;the&amp;nbsp;signer!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;contactInfo&amp;nbsp;=&amp;nbsp;"Test&amp;nbsp;Contact";!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//Create&amp;nbsp;a&amp;nbsp;PDFSignatureAppearanceOptions&amp;nbsp;object&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//and&amp;nbsp;show&amp;nbsp;date&amp;nbsp;information!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;PDFSignatureAppearenceOptions&amp;nbsp;appOptions&amp;nbsp;=&amp;nbsp;new&amp;nbsp;PDFSignatureAppearenceOptions(!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;PDFSignatureAppearanceType.NAME,&amp;nbsp;null,&amp;nbsp;1.0d,&amp;nbsp;null,&amp;nbsp;true,&amp;nbsp;true,!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;true,&amp;nbsp;true,&amp;nbsp;true,&amp;nbsp;true,&amp;nbsp;true,&amp;nbsp;TextDirection.AUTO);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;signatureOptions.setSignatureFieldName(fieldName);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;signatureOptions.setAlgo(algo);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;signatureOptions.setContactInfo(contactInfo);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;signatureOptions.setLocation(location);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;signatureOptions.setSigAppearence(appOptions);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;signatureOptions.setReason(reason);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;signatureOptions.setDssPref(getDSSPreferences(rr));!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;signatureOptions.setCredential(new&amp;nbsp;CredentialContext(alias,&amp;nbsp;rr,&amp;nbsp;true));!!discoiqbr!!&amp;nbsp;&amp;nbsp;return&amp;nbsp;signatureOptions;!!discoiqbr!!&amp;nbsp;}!!discoiqbr!!&amp;nbsp;!!discoiqbr!!&amp;nbsp;private&amp;nbsp;DSSPreferences&amp;nbsp;getDSSPreferences(ResourceResolver&amp;nbsp;rr){!!discoiqbr!!&amp;nbsp;&amp;nbsp;//sets&amp;nbsp;the&amp;nbsp;DSS&amp;nbsp;Preferences!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;DSSPreferencesImpl&amp;nbsp;prefs&amp;nbsp;=&amp;nbsp;DSSPreferencesImpl.getInstance();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;prefs.setPKIPreferences(getPKIPreferences());!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;GeneralPreferencesImpl&amp;nbsp;gp&amp;nbsp;=&amp;nbsp;(GeneralPreferencesImpl)&amp;nbsp;prefs.getPKIPreferences().getGeneralPreferences();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;gp.setDisableCache(true);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;prefs;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;PKIPreferences&amp;nbsp;getPKIPreferences(){!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//sets&amp;nbsp;the&amp;nbsp;PKI&amp;nbsp;Preferences!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;PKIPreferences&amp;nbsp;pkiPref&amp;nbsp;=&amp;nbsp;new&amp;nbsp;PKIPreferencesImpl();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pkiPref.setCRLPreferences(getCRLPreferences());!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pkiPref.setPathPreferences(getPathValidationPreferences());!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;pkiPref;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;CRLPreferences&amp;nbsp;getCRLPreferences(){!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//specifies&amp;nbsp;the&amp;nbsp;CRL&amp;nbsp;Preferences!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CRLPreferencesImpl&amp;nbsp;crlPrefs&amp;nbsp;=&amp;nbsp;new&amp;nbsp;CRLPreferencesImpl();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;crlPrefs.setRevocationCheck(RevocationCheckStyle.CheckIfAvailable);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;crlPrefs.setGoOnline(true);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;crlPrefs;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;PathValidationPreferences&amp;nbsp;getPathValidationPreferences(){!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//sets&amp;nbsp;the&amp;nbsp;path&amp;nbsp;validation&amp;nbsp;preferences!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;PathValidationPreferencesImpl&amp;nbsp;pathPref&amp;nbsp;=&amp;nbsp;new&amp;nbsp;PathValidationPreferencesImpl();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pathPref.setDoValidation(false);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;pathPref;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;sets&amp;nbsp;Unlock&amp;nbsp;Options&amp;nbsp;for&amp;nbsp;encrypted&amp;nbsp;PDF!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;UnlockOptions&amp;nbsp;getUnlockOptions(){!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;UnlockOptions&amp;nbsp;unlockOptions&amp;nbsp;=&amp;nbsp;new&amp;nbsp;UnlockOptions();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//sets&amp;nbsp;the&amp;nbsp;Open&amp;nbsp;Password&amp;nbsp;for&amp;nbsp;password&amp;nbsp;encrypted&amp;nbsp;PDF!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;unlockOptions.setPassword("OpenPassword");!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//for&amp;nbsp;Certificate&amp;nbsp;Encrypted&amp;nbsp;Document,&amp;nbsp;set&amp;nbsp;the&amp;nbsp;alias&amp;nbsp;of&amp;nbsp;the&amp;nbsp;credential&amp;nbsp;uploaded&amp;nbsp;in&amp;nbsp;the&amp;nbsp;user's&amp;nbsp;key&amp;nbsp;store!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//and&amp;nbsp;corresponding&amp;nbsp;resource&amp;nbsp;resolver!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;unlockOptions;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;This&amp;nbsp;method&amp;nbsp;copies&amp;nbsp;the&amp;nbsp;data&amp;nbsp;from&amp;nbsp;{@code&amp;nbsp;Document},&amp;nbsp;to&amp;nbsp;the&amp;nbsp;specified&amp;nbsp;file&amp;nbsp;at&amp;nbsp;the&amp;nbsp;given&amp;nbsp;resourcePath.!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@param&amp;nbsp;doc!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@param&amp;nbsp;resourcePath!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;@throws&amp;nbsp;IOException!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;void&amp;nbsp;flush(Document&amp;nbsp;doc,&amp;nbsp;String&amp;nbsp;resourcePath)&amp;nbsp;throws&amp;nbsp;IOException&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;//extracts&amp;nbsp;the&amp;nbsp;byte&amp;nbsp;data&amp;nbsp;from&amp;nbsp;Document!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;byte[]&amp;nbsp;output&amp;nbsp;=&amp;nbsp;doc.getInlineData();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;Binary&amp;nbsp;opBin;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;Session&amp;nbsp;adminSession&amp;nbsp;=&amp;nbsp;null;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;adminSession&amp;nbsp;=&amp;nbsp;slingRepository.loginAdministrative(null);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//get&amp;nbsp;access&amp;nbsp;to&amp;nbsp;the&amp;nbsp;specific&amp;nbsp;node!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//here&amp;nbsp;we&amp;nbsp;are&amp;nbsp;assuming&amp;nbsp;that&amp;nbsp;node&amp;nbsp;exists!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Node&amp;nbsp;node&amp;nbsp;=&amp;nbsp;adminSession.getNode(resourcePath);&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//convert&amp;nbsp;byte[]&amp;nbsp;to&amp;nbsp;Binary!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;opBin&amp;nbsp;=&amp;nbsp;adminSession.getValueFactory().createBinary((InputStream)new&amp;nbsp;ByteArrayInputStream(output));!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//set&amp;nbsp;the&amp;nbsp;Binary&amp;nbsp;data&amp;nbsp;value&amp;nbsp;to&amp;nbsp;node's&amp;nbsp;jcr:data!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;node.getNode("jcr:content").getProperty("jcr:data").setValue(opBin);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;catch&amp;nbsp;(RepositoryException&amp;nbsp;e)&amp;nbsp;{!!discoiqbr!!!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;finally{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if(adminSession&amp;nbsp;!=&amp;nbsp;null&amp;nbsp;&amp;&amp;&amp;nbsp;adminSession.isLive()){!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;adminSession.save();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;adminSession.logout();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;catch&amp;nbsp;(RepositoryException&amp;nbsp;e)&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;}!!discoiqbr!!}!!discoiqbr!! 
  </codeblock> 
  <p>If you have upgraded from AEM 6.0 Form or AEM 6.1 Forms, and you were using the DocAssurance service in the previous version, then:</p> 
  <ul> 
   <li>To use the DocAssurance service without an HSM or etoken device, keep using the existing code.</li> 
   <li>To use the DocAssurance service with an HSM or etoken device, replace your existing CredentialContext object code with the API listed below.</li> 
  </ul> 
  <codeblock gutter="true" class="syntax java">
    /**!!discoiqbr!!&amp;nbsp;&amp;nbsp;*&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;*&amp;nbsp;@param&amp;nbsp;credentialAlias&amp;nbsp;alias&amp;nbsp;of&amp;nbsp;the&amp;nbsp;PKI&amp;nbsp;Credential&amp;nbsp;stored&amp;nbsp;in&amp;nbsp;CQ&amp;nbsp;Key&amp;nbsp;Store&amp;nbsp;or&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;*&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;the&amp;nbsp;alias&amp;nbsp;of&amp;nbsp;the&amp;nbsp;HSM&amp;nbsp;Credential&amp;nbsp;configured&amp;nbsp;using&amp;nbsp;HSM&amp;nbsp;Credentials&amp;nbsp;Configuration&amp;nbsp;Service.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;*&amp;nbsp;@param&amp;nbsp;resourceResolver&amp;nbsp;corresponding&amp;nbsp;to&amp;nbsp;the&amp;nbsp;user&amp;nbsp;with&amp;nbsp;the&amp;nbsp;access&amp;nbsp;to&amp;nbsp;the&amp;nbsp;key&amp;nbsp;store&amp;nbsp;and&amp;nbsp;trust&amp;nbsp;store.!!discoiqbr!!&amp;nbsp;&amp;nbsp;*&amp;nbsp;@param&amp;nbsp;isHSMCredential&amp;nbsp;if&amp;nbsp;the&amp;nbsp;alias&amp;nbsp;is&amp;nbsp;corresponding&amp;nbsp;to&amp;nbsp;HSM&amp;nbsp;Credential.&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;*/!!discoiqbr!!&amp;nbsp;public&amp;nbsp;CredentialContext(String&amp;nbsp;credentialAlias,&amp;nbsp;ResourceResolver&amp;nbsp;resourceResolver,&amp;nbsp;boolean&amp;nbsp;isHSMCredential);!!discoiqbr!! 
  </codeblock> 
  <p>For detailed information about APIs and sample code of the DocAssurance service, see <a href="../../forms/using/aem-document-services-programmatically.md" target="_blank">Using AEM Document Services Programmatically</a>.</p> 
  <related-links> 
   <a href="../../forms/using/aem-document-services-programmatically.md">Using AEM Document Services Programmatically</a> 
   <a href="../../forms/using/initiating-document-services-apis-aem.md">Initiate Document Services APIs from AEM Workflow</a> 
  </related-links> 
 </body> 
</html>