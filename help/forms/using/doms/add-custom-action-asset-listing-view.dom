<?xml version="1.1" encoding="UTF-8" standalone="yes"?> 
<html> 
 <head> 
  <meta content="light" name="heroGradient" /> 
  <meta content="https://helpx.adobe.com/experience-manager/6-4/forms/using/add-custom-action-asset-listing-view.html" name="publishExternalURL" /> 
  <meta content="This article teaches how to add custom action to the Asset Listing view" name="seoDescription" /> 
  <meta content="locales:fr;locales:de;locales:ja" name="locLangTag" /> 
  <meta content="en_us" name="jcr:language" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/FORMS" name="primaryProductTag" /> 
  <meta content="false" name="doNotLocalize" /> 
  <meta content="help/components/pages/article-3" name="sling:resourceType" /> 
  <meta content="anujkapo" name="cq:lastReplicatedBy" /> 
  <meta content="mix:versionable" name="jcr:mixinTypes" /> 
  <meta content="2016-04-20T09:28:51.229-0400" name="firstPublishExternalDate" /> 
  <meta content="2019-01-03T05:22:26.808-0500" name="topicBrowsingSortDate" /> 
  <meta content="2019-01-03T05:22:26.808-0500" name="publishExternalDate" /> 
  <meta content="2019-01-07T06:43:08.984-0500" name="locHandOffDate" /> 
  <meta content="left" name="sideColumn" /> 
  <meta content="video" name="pageLayout" /> 
  <meta content="true" name="jcr:isCheckedOut" /> 
  <meta content="2017-12-01T19:06:25.459-0500" name="jcr:created" /> 
  <meta content="content_type:reference;products:SG_EXPERIENCEMANAGER/6.4/FORMS;topic_tags:correspondence-management" name="cq:tags" /> 
  <meta content="/apps/help/templates/article-3" name="cq:template" /> 
  <meta content="123" name="acrolinxSentences" /> 
  <meta content="ab5e0e12-ed75-4d45-b5bb-19fec74be71a" name="jcr:predecessors" /> 
  <meta content="2019-01-03T05:22:26.848-0500" name="cq:lastReplicated" /> 
  <meta content="false" name="isReadyForLocalization" /> 
  <meta content="2019-01-03T05:22:26.808-0500" name="lastPublishExternalDate" /> 
  <meta content="Add custom action to the Asset Listing view" name="jcr:title" /> 
  <meta content="http://checkstyle.corp.adobe.com:8031/output/en/add_custom_action_asset_listing_view_admin_5e12de0b318c6865_1951_report.xml" name="acrolinxReportURL" /> 
  <meta content="red" name="acrolinxPageStatus" /> 
  <meta content="/etc/designs/help" name="cq:designPath" /> 
  <meta content="checked_not_improved" name="acrolinxStatus" /> 
  <meta content="2016-05-31T06:31:51.052-0400" name="acrolinxDate" /> 
  <meta content="14a9ef77-51ea-4c0a-b784-7ce2214c6a4d" name="jcr:uuid" /> 
  <meta content="vishgupt" name="acrolinxLastCheckedBy" /> 
  <meta content="" name="jcr:baseVersion" /> 
  <meta content="" name="jcr:primaryType" /> 
  <meta content="admin" name="jcr:createdBy" /> 
  <meta content="Activate" name="cq:lastReplicationAction" /> 
  <meta content="anujkapo" name="cq:lastModifiedBy" /> 
  <meta content="2019-01-07T06:43:08.984-0500" name="cq:lastModified" /> 
  <meta content="anujkapo@adobe.com" name="lr_lastReplicatedBy" /> 
  <meta content="1710" name="acrolinxWords" /> 
  <meta content="" name="jcr:versionHistory" /> 
  <meta content="/content/help/en/experience-manager/6-4/forms/morehelp/correspondence-management;/content/help/en/experience-manager/6-4/forms/morehelp/correspondence-management" name="moreHelpPaths" /> 
  <meta content="2015-11-30T09:30:11.176-0500" name="lastPublishQADate" /> 
 </head> 
 <body> 
  <h2>Overview</h2> 
  <p>The Correspondence Management solution allows you add custom actions to the Manage Assets user interface.</p> 
  <p>You can add a custom action to the Asset Listing view for:</p> 
  <ul> 
   <li>One or more asset types or letters</li> 
   <li>Execution (action/command becomes active) on selection of single, multiple assets/letters, or without selection</li> 
  </ul> 
  <div>
    This customization is demonstrated with the scenario that adds a command "Download Flat PDF" to the Asset Listing view for Letters. This customization scenario allows your users to download flat PDF of a single selected letter. 
  </div> 
  <h3>Prerequisites</h3> 
  <p>To complete the following scenario or a similar one, you require knowledge of:</p> 
  <ul> 
   <li>CRX</li> 
   <li>JavaScript</li> 
   <li>Java</li> 
  </ul> 
  <h2 id="AddCommandToLetters">Scenario: Add a command to the Letters list user interface to download flat PDF version of a letter</h2> 
  <p>The below steps add a command "Download Flat PDF" to the Asset Listing view for Letters and allows your users to download flat PDF of the selected letter. Using these steps with the appropriate code and parameters, you can add some other functionality for a different asset, such as data dictionaries or texts.</p> 
  <p>To customize Correspondence Management to allow your users to download a flat PDF of letters, complete the following steps:</p> 
  <ol> 
   <li><p>Go to <span class="code">http://[server]:[port]/[ContextPath]/crx/de</span> and login as Administrator.<br /> </p> </li> 
   <li><p>In the apps folder, create a folder named items with path/structure similar to the items folder located in selection folder using the following steps:</p> 
    <ol> 
     <li><p>Right-click the <strong>items</strong> folder at the following path and select <strong>Overlay Node</strong>: </p>  
      <note> 
       <p>This path is specific to creating an action that works with selection of one of more assets/letters. If you want to create an action that works without selection, you need to create an overlay node for the following path instead and complete the remaining steps accordingly:</p> 
       <p><span class="code">/libs/fd/cm/ma/gui/content/cmassets/jcr:content/body/content/header/items/default/items</span></p> 
      </note><img alt="Create node" imageRotate="0" src="assets/1_itemscreatenode.png" title="Create node" /></li> 
     <li><p>Ensure that the Overlay Node dialog has the following values:</p> <p><strong>Path:</strong> /libs/fd/cm/ma/gui/content/cmassets/jcr:content/body/content/header/items/selection/items</p> <p><strong>Location:</strong> /apps/</p> <p><strong>Match Node Types:</strong> Selected<br /> </p> <img alt="Overlay node" imageRotate="0" src="assets/2_createnodedownloadflatpdf.png" title="Overlay node" /></li> 
     <li><p>Click <strong>OK</strong>. The folder structure is created in the apps folder.<br /> </p> <p>Click <strong>Save All</strong>.</p> </li> 
    </ol></li> 
   <li><p>Under the newly created items folder, add a node for the custom button/action in a particular asset (Example: downloadFlatPDF) using the following steps:<br /> </p> 
    <ol> 
     <li><p>Right-click the <strong>items </strong>folder and select <strong>Create &amp;gt; Create Node</strong>.<br /> </p> </li> 
     <li><p>Ensure that the Create Node dialog has the following values and click <strong>OK</strong>:</p> <p><strong>Name:</strong> downloadFlatPDF (or the name you want to give to this property)</p> <p><strong>Type:</strong> nt:unstructured<br /> </p> </li> 
     <li><p>Click the new node you have created (here downloadFlatPDF). CRX displays the node's properties. <br /> </p> </li> 
     <li><p>Add the following properties to the node (here downloadFlatPDF) and click <strong>Save All</strong>:<br /> </p> 
      <table border="1" cellpadding="1" cellspacing="0" width="100%"> 
       <tbody> 
        <tr> 
         <td><strong>Name</strong></td> 
         <td><strong>Type</strong></td> 
         <td><strong>Value and Description</strong></td> 
        </tr> 
        <tr> 
         <td>class</td> 
         <td>String</td> 
         <td>foundation-collection-action</td> 
        </tr> 
        <tr> 
         <td>foundation-collection-action</td> 
         <td>String</td> 
         <td><p>{"target": ".cq-manageasset-admin-childpages", "activeSelectionCount": "single","type": "LETTER"}<br /> <br /> <br /> <strong>activeSelectionCount</strong> can be single or multiple to allow selections of single or multiple assets on which the custom action is performed.</p> <p><strong>type</strong> can be one or more (comma separate multiple entries) of the following: LETTER,TEXT,LIST,CONDITION,DATADICTIONARY</p> </td> 
        </tr> 
        <tr> 
         <td>icon</td> 
         <td>String</td> 
         <td>icon-download<br /> <br /> The icon that Correspondence Management displays to the left side of your command/menu. For different icons and settings available, see <a href="https://docs.adobe.com/docs/en/aem/6-3/develop/ref/coral-ui/coralui3/Coral.Icon.html" target="_blank">CoralUI Icons documentation</a>.<br /> </td> 
        </tr> 
        <tr> 
         <td>jcr:primaryType</td> 
         <td>Name</td> 
         <td>nt:unstructured</td> 
        </tr> 
        <tr> 
         <td>rel</td> 
         <td>String</td> 
         <td>download-flat-pdf-button</td> 
        </tr> 
        <tr> 
         <td>sling:resourceType</td> 
         <td>String</td> 
         <td>granite/ui/components/endor/actionbar/button</td> 
        </tr> 
        <tr> 
         <td>text</td> 
         <td>String</td> 
         <td>Download Flat PDF (Or any other label)<br /> <br /> The command that appears in the Asset Listing interface</td> 
        </tr> 
        <tr> 
         <td>title</td> 
         <td>String</td> 
         <td>Download a flat PDF of the selected letter (Or any other label/Alt text)<br /> <br /> The title is the alt text that Correspondence Management displays when the user hovers over the custom command.</td> 
        </tr> 
       </tbody> 
      </table> </li> 
    </ol></li> 
   <li><p>In the apps folder, create a folder named js with path/structure similar to the items folder located in admin folder using the following steps:</p> 
    <ol> 
     <li><p>Right-click the <strong>js</strong> folder at the following path and select <strong>Overlay Node</strong>: <span class="code"></span></p>  </li> 
     <li><p>Ensure that the Overlay Node dialog has the following values:</p> <p><strong>Path:</strong> /libs/fd/cm/ma/gui/components/admin/clientlibs/admin/js</p> <p><strong>Location:</strong> /apps/</p> <p><strong>Match Node Types:</strong> Selected<br /> </p> </li> 
     <li><p>Click <strong>OK</strong>. The folder structure is created in the apps folder. Click <strong>Save All</strong>.<br /> </p> </li> 
    </ol></li> 
   <li><p>In the js folder, create a file named formaction.js with the code for action handling of the button using the following steps:</p> 
    <ol> 
     <li><p>Right-click the <strong>js</strong> folder at the following path and select <strong>Create &amp;gt; Create File</strong>: </p>  <p>Name the file as formaction.js.</p> </li> 
     <li><p>Double-click the file to open it in CRX. </p> </li> 
     <li><p>In the formaction.js file (under the /apps branch), copy the code from the formaction.js file at the following location:</p>  <p>Then append the following code at the end in the formaction.js file (under the /apps branch) and click <strong>Save All</strong>:</p>  
      <codeblock class="syntax js">
        /*&amp;nbsp;Action&amp;nbsp;url&amp;nbsp;for&amp;nbsp;xml&amp;nbsp;file&amp;nbsp;to&amp;nbsp;be&amp;nbsp;added.*/!!discoiqbr!!var&amp;nbsp;ACTION_URL&amp;nbsp;=&amp;nbsp;"/apps/fd/cm/ma/gui/content/commons/actionhandlers/items/letterpdfdownloader.html";!!discoiqbr!!&amp;nbsp;!!discoiqbr!!/*&amp;nbsp;File&amp;nbsp;upload&amp;nbsp;handling*/!!discoiqbr!!var&amp;nbsp;fileSelectedHandler&amp;nbsp;=&amp;nbsp;function(e){!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if(e&amp;nbsp;&amp;&amp;&amp;nbsp;e.target&amp;nbsp;&amp;&amp;&amp;nbsp;e.target.value)!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$(".downloadLetterPDFBtn").removeAttr('disabled');!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;else!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$(".downloadLetterPDFBtn").attr('disabled','disabled');!!discoiqbr!!}!!discoiqbr!!&amp;nbsp;!!discoiqbr!!/*Handing&amp;nbsp;of&amp;nbsp;Download&amp;nbsp;button&amp;nbsp;in&amp;nbsp;pop&amp;nbsp;up.*/!!discoiqbr!!var&amp;nbsp;downloadClickHandler&amp;nbsp;=&amp;nbsp;function(){!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$('#downloadLetterPDFDilaog').modal("hide");!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;element&amp;nbsp;=&amp;nbsp;$('.foundation-selections-item');!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;path&amp;nbsp;=&amp;nbsp;$(element).data("path");!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$("#fileUploadForm").attr('action',&amp;nbsp;ACTION_URL&amp;nbsp;+&amp;nbsp;"?letterId="+path).submit();!!discoiqbr!!}!!discoiqbr!!&amp;nbsp;!!discoiqbr!!/*Click&amp;nbsp;handling&amp;nbsp;on&amp;nbsp;action&amp;nbsp;button.*/!!discoiqbr!!$(document).on("click",'.download-flat-pdf-button',function(e){!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$("#uploadSamepledata").val("");!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if($('#downloadLetterPDFDilaog').length&amp;nbsp;==&amp;nbsp;0){!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$(document).on("click",".downloadLetterPDFBtn",downloadClickHandler);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$(document).on("change","#uploadSamepledata",fileSelectedHandler);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$("body").append(downloadLetterPDFDilaog);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$('#downloadLetterPDFDilaog').modal("show");!!discoiqbr!!});!!discoiqbr!!&amp;nbsp;!!discoiqbr!!&amp;nbsp;!!discoiqbr!!/*Download&amp;nbsp;popup.*/!!discoiqbr!!var&amp;nbsp;downloadLetterPDFDilaog&amp;nbsp;=&amp;nbsp;'&lt;div&amp;nbsp;id="downloadLetterPDFDilaog"&amp;nbsp;class="coral-Modal&amp;nbsp;notice&amp;nbsp;"&amp;nbsp;role="dialog"&amp;nbsp;&amp;nbsp;aria-hidden="true"&gt;'+!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'&lt;form&amp;nbsp;id="fileUploadForm"&amp;nbsp;method="POST"&amp;nbsp;enctype="multipart/form-data"&gt;'+!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'&lt;div&amp;nbsp;class="coral-Modal-header"&gt;'+!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'&lt;h2&amp;nbsp;class="coral-Modal-title&amp;nbsp;coral-Heading&amp;nbsp;coral-Heading--2"&amp;nbsp;id="modal-header1443020790107-label"&amp;nbsp;tabindex="0"&gt;Download&amp;nbsp;Letter&amp;nbsp;as&amp;nbsp;PDF.&lt;/h2&gt;'+!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'&lt;button&amp;nbsp;type="button"&amp;nbsp;class="coral-MinimalButton&amp;nbsp;coral-Modal-closeButton"&amp;nbsp;data-dismiss="modal"&gt;×&lt;/button&gt;'+!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'&lt;/div&gt;'+!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'&lt;div&amp;nbsp;class="coral-Modal-body"&amp;nbsp;id="modal-header1443020790107-message"&amp;nbsp;role="document"&amp;nbsp;tabindex="0"&gt;'+!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'&lt;div&amp;nbsp;class="coral-Modal-message"&gt;'+!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'&lt;p&gt;&lt;/p&gt;'+!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'&lt;/div&gt;'+!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'&lt;div&amp;nbsp;class="coral-Modal-uploader"&gt;'+!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'&lt;p&gt;Select&amp;nbsp;sample&amp;nbsp;data&amp;nbsp;for&amp;nbsp;letter.&lt;/p&gt;'+!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'&lt;input&amp;nbsp;type="file"&amp;nbsp;id="uploadSamepledata"&amp;nbsp;name="file"&amp;nbsp;accept=".xml"&amp;nbsp;size="70px"&gt;'+!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'&lt;/div&gt;'+!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'&lt;/div&gt;'+!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'&lt;/form&gt;'+!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'&lt;div&amp;nbsp;class="coral-Modal-footer"&gt;'+!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'&lt;button&amp;nbsp;type="button"&amp;nbsp;class="coral-Button"&amp;nbsp;data-dismiss="modal"&gt;Cancel&lt;/button&gt;'+!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'&lt;button&amp;nbsp;type="button"&amp;nbsp;class="coral-Button&amp;nbsp;coral-Button--primary&amp;nbsp;downloadLetterPDFBtn"&amp;nbsp;disabled="disabled"&gt;Download&lt;/button&gt;'+!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'&lt;/div&gt;'+!!discoiqbr!!'&lt;/div&gt;'; 
      </codeblock><p>The code you add in this step overrides the code under the libs folder, so copy the previous code to formaction.js file in the /apps branch. Copying the code from the /libs branch to the /apps branch ensures that the previous functionality also works.</p> <p>The above code is for letters-specific action handling of the command created in this procedure. For action handling of other assets, modify the JavaScript code.</p> </li> 
    </ol></li> 
   <li><p>In the apps folder, create a folder named items with path/structure similar to the items folder located in actionhandlers folder using the following steps:</p> 
    <ol> 
     <li><p>Right-click the <strong>items</strong> folder at the following path and select <strong>Overlay Node</strong>: </p>  </li> 
     <li><p>Ensure that the Overlay Node dialog has the following values:</p> <p><strong>Path:</strong> /libs/fd/cm/ma/gui/content/commons/actionhandlers/items/</p> <p><strong>Location:</strong> /apps/</p> <p><strong>Match Node Types:</strong> Selected<br /> </p> </li> 
     <li><p>Click <strong>OK</strong>. The folder structure is created in the apps folder.<br /> </p> </li> 
     <p>Click <strong>Save All</strong>.</p> 
    </ol></li> 
   <li><p>Under the newly created items node, add a node for the custom button/action in a particular asset (Example: letterpdfdownloader) using the following steps:<br /> </p> 
    <ol> 
     <li><p>Right click the items folder and select <strong>Create &amp;gt; Create Node</strong>.<br /> </p> </li> 
     <li><p>Ensure that the Create Node dialog has the following values and click <strong>OK</strong>:</p> <p><strong>Name:</strong> letterpdfdownloader (Or the name you want to give to this property - must be unique. If you use a different name here, also specify the same in the formaction.js file's ACTION_URL variable.)</p> <p><strong>Type:</strong> nt:unstructured<br /> </p> </li> 
     <li><p>Click the new node you have created (here downloadFlatPDF). CRX displays the node's properties. <br /> </p> </li> 
     <li><p>Add the following property to the node (here letterpdfdownloader) and click <strong>Save All</strong>:<br /> </p> 
      <table border="1" cellpadding="1" cellspacing="0" width="100%"> 
       <tbody> 
        <tr> 
         <td><strong>Name</strong></td> 
         <td><strong>Type</strong></td> 
         <td><strong>Value</strong></td> 
        </tr> 
        <tr> 
         <td>sling:resourceType</td> 
         <td>String</td> 
         <td>fd/cm/ma/gui/components/admin/clientlibs/admin</td> 
        </tr> 
       </tbody> 
      </table> </li> 
    </ol></li> 
   <li><p>Create a file named POST.jsp with the code for action handling of the command at the following location:</p> <p>/apps/fd/cm/ma/gui/components/admin/clientlibs/admin</p> 
    <ol> 
     <li><p>Right-click the <strong>admin</strong> folder at the following path and select <strong>Create &amp;gt; Create File</strong>: </p> <p>/apps/fd/cm/ma/gui/components/admin/clientlibs/admin<br /> </p> <p>Name the file as POST.jsp. (The filename needs to be POST.jsp only.)</p> </li> 
     <li><p>Double-click the <strong>POST.jsp</strong> file to open it in CRX. </p> </li> 
     <li><p>Add the following code to POST.jsp file and click <strong>Save All</strong>:</p> <p>This code is specific to the letter render service. For any other asset, add that asset's java libraries to this code. For more information on AEM Forms APIs, see <a href="http://adobe.com/go/learn_aemforms_javadocs_63_en" target="_blank">AEM Forms API</a>.</p> <p style="font-family: tahoma, arial, helvetica, sans-serif; font-size: 12px;">For more information on AEM libraries, see AEM <a href="../../sites/developing/using/components.md" target="_blank">Components</a>. </p> 
      <codeblock class="syntax xml">
        /*Import&amp;nbsp;libraries.&amp;nbsp;Here&amp;nbsp;we&amp;nbsp;are&amp;nbsp;downloading&amp;nbsp;letter&amp;nbsp;flat&amp;nbsp;pdf&amp;nbsp;with&amp;nbsp;input&amp;nbsp;xml&amp;nbsp;data&amp;nbsp;so&amp;nbsp;we&amp;nbsp;require&amp;nbsp;letterRender&amp;nbsp;Api.&amp;nbsp;For&amp;nbsp;any&amp;nbsp;other&amp;nbsp;Module&amp;nbsp;functionality&amp;nbsp;we&amp;nbsp;need&amp;nbsp;to&amp;nbsp;first&amp;nbsp;import&amp;nbsp;that&amp;nbsp;library.&amp;nbsp;*/&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&lt;%@include&amp;nbsp;file="/libs/foundation/global.jsp"%&gt;!!discoiqbr!!&lt;!DOCTYPE&amp;nbsp;html&amp;nbsp;lang="en"&amp;nbsp;PUBLIC&amp;nbsp;"-//W3C//DTD&amp;nbsp;XHTML&amp;nbsp;1.1//EN"&amp;nbsp;"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"&gt;!!discoiqbr!!&lt;%@page&amp;nbsp;import="com.adobe.icc.ddg.api.*"%&gt;!!discoiqbr!!&lt;%@page&amp;nbsp;import="com.adobe.icc.dbforms.obj.*"%&gt;!!discoiqbr!!&lt;%@page&amp;nbsp;import="com.adobe.icc.render.obj.*"&amp;nbsp;%&gt;!!discoiqbr!!&lt;%@page&amp;nbsp;import="com.adobe.icc.services.api.*"&amp;nbsp;%&gt;!!discoiqbr!!&lt;%@page&amp;nbsp;import="org.apache.sling.api.resource.*"&amp;nbsp;%&gt;!!discoiqbr!!&lt;%@page&amp;nbsp;import="java.io.File"&amp;nbsp;%&gt;!!discoiqbr!!&lt;%@page&amp;nbsp;import="java.util.*"&amp;nbsp;%&gt;!!discoiqbr!!&lt;%@page&amp;nbsp;import="com.adobe.livecycle.content.appcontext.AppContextManager"%&gt;!!discoiqbr!!&lt;%@page&amp;nbsp;import="&amp;nbsp;com.adobe.icc.dbforms.exceptions.ICCException"%&gt;!!discoiqbr!!&lt;%@page&amp;nbsp;import="java.io.InputStream"&amp;nbsp;%&gt;!!discoiqbr!!&lt;%@page&amp;nbsp;import="java.io.FileInputStream"&amp;nbsp;%&gt;!!discoiqbr!!&lt;%@page&amp;nbsp;import="org.apache.commons.io.IOUtils"&amp;nbsp;%&gt;!!discoiqbr!!&lt;%@page&amp;nbsp;session="false"&amp;nbsp;contentType="text/html;&amp;nbsp;charset=utf-8"%&gt;!!discoiqbr!!&lt;%@taglib&amp;nbsp;prefix="sling"&amp;nbsp;uri="http://sling.apache.org/taglibs/sling/1.0"%&gt;!!discoiqbr!!&lt;%@taglib&amp;nbsp;prefix="cq"&amp;nbsp;uri="http://www.day.com/taglibs/cq/1.0"&amp;nbsp;%&gt;!!discoiqbr!!&amp;nbsp;&lt;%@page&amp;nbsp;session="false"&amp;nbsp;contentType="text/html;&amp;nbsp;charset=utf-8"%&gt;!!discoiqbr!!&lt;%!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;AppContextManager.setCurrentAppContext("/content/apps/cm");!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;/*Get&amp;nbsp;letter&amp;nbsp;id&amp;nbsp;sent&amp;nbsp;in&amp;nbsp;js&amp;nbsp;file.*/!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;letterId&amp;nbsp;=&amp;nbsp;request.getParameter("letterId");!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if(letterId.lastIndexOf("?")&amp;nbsp;!=&amp;nbsp;-1)!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;letterId&amp;nbsp;=&amp;nbsp;letterId.substring(0,&amp;nbsp;letterId.indexOf("?"));!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;fileName&amp;nbsp;=&amp;nbsp;null;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;letterName&amp;nbsp;=&amp;nbsp;null;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;InputStream&amp;nbsp;inputStream&amp;nbsp;=&amp;nbsp;null;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/*Get&amp;nbsp;xml&amp;nbsp;file&amp;nbsp;data*/!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(slingRequest.getRequestParameter("file")&amp;nbsp;!=&amp;nbsp;null)!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inputStream&amp;nbsp;=&amp;nbsp;slingRequest.getRequestParameter("file").getInputStream();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if(letterId&amp;nbsp;!=&amp;nbsp;null){!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;xmlData&amp;nbsp;=&amp;nbsp;null;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;xmlData&amp;nbsp;=&amp;nbsp;IOUtils.toString(inputStream,&amp;nbsp;"UTF-8");!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;catch&amp;nbsp;(Exception&amp;nbsp;e)&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;log.error("Xml&amp;nbsp;data&amp;nbsp;does&amp;nbsp;not&amp;nbsp;exists.");!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/*letter&amp;nbsp;Name&amp;nbsp;from&amp;nbsp;letter&amp;nbsp;letter&amp;nbsp;id.*/!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;letterName&amp;nbsp;=&amp;nbsp;letterId.substring(letterId.lastIndexOf("/")+1);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/*Invoking&amp;nbsp;letter&amp;nbsp;render&amp;nbsp;services&amp;nbsp;API.*/!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;LetterRenderService&amp;nbsp;letterRenderService&amp;nbsp;=&amp;nbsp;sling.getService(LetterRenderService.class);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/*using&amp;nbsp;CM&amp;nbsp;renderLetter&amp;nbsp;api&amp;nbsp;to&amp;nbsp;get&amp;nbsp;pdfbytes.*/!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;PDFResponseType&amp;nbsp;&amp;nbsp;pdfResponseType=&amp;nbsp;letterRenderService.renderLetter(letterId,xmlData,true,false,false,false);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;byte[]&amp;nbsp;bytes&amp;nbsp;=&amp;nbsp;null;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/*Downloading&amp;nbsp;pdf&amp;nbsp;bytes&amp;nbsp;as&amp;nbsp;pdf.*/!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if(pdfResponseType&amp;nbsp;!=&amp;nbsp;null&amp;nbsp;&amp;&amp;&amp;nbsp;pdfResponseType.getFile()&amp;nbsp;!=&amp;nbsp;null){!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;bytes&amp;nbsp;=&amp;nbsp;pdfResponseType.getFile().getDocument();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/*set&amp;nbsp;the&amp;nbsp;response&amp;nbsp;header&amp;nbsp;to&amp;nbsp;enable&amp;nbsp;download*/!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;response.setContentType("application/OCTET-STREAM");!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;response.setHeader("Content-Disposition",&amp;nbsp;"attachment;filename=\""&amp;nbsp;+&amp;nbsp;letterName&amp;nbsp;+&amp;nbsp;".pdf\"");!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;response.setHeader("Pragma",&amp;nbsp;"cache");!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;response.setHeader("Cache-Control",&amp;nbsp;"private");!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;out.clear();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;response.getOutputStream().write(bytes);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;else{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;log.error("Letter&amp;nbsp;id&amp;nbsp;does&amp;nbsp;not&amp;nbsp;exists.");!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!%&gt; 
      </codeblock></li> 
    </ol></li> 
  </ol> 
  <h2>Download flat PDF of a letter using the custom functionality</h2> 
  <p>After you have added custom functionality to download flat PDF of your letters, you can use the following steps to download flat PDF version of the letter you select: </p> 
  <ol> 
   <li><p>Go to <span class="code">http://[server]:[port]/[ContextPath]/projects.html</span> and log in.<br /> </p> </li> 
   <li><p>Select <strong>Forms &amp;gt; Letters</strong>. Correspondence Management lists the letters available in the system.</p> </li> 
   <li><p>Click <strong>Select</strong> and then click a letter to select it.</p> </li> 
   <li><p>Select <strong>More &amp;gt; &amp;lt;Download Flat PDF&amp;gt; </strong>(The custom functionality created using the instructions this article). Download Letter as PDF dialog appears.</p> <p>The menu item name, functionality, and alt-text is according to the customization created in <a href="#addcommandtoletters">Scenario: Add a command to the Letters list user interface to download flat PDF version of a letter.</a></p> <img alt="Custom functionality: Download Flat PDF" imageRotate="0" src="assets/5_downloadflatpdf.png" title="Custom functionality: Download Flat PDF" /></li> 
   <li><p>In the Download Letter as PDF dialog, select the relevant XML from which you want to populate the data in the PDF. </p> 
    <note> 
     <p>Before downloading the letter as a flat PDF, you can create the XML file with the data in the letter using the <strong>Create Report</strong> option.</p> 
    </note><img alt="Download letter as PDF" imageRotate="0" src="assets/6_downloadflatpdf.png" title="Download letter as PDF" /><p>The letter gets downloaded to your computer as a flat PDF.</p> </li> 
  </ol> 
  <related-links> 
   <a href="../../forms/using/customize-create-correspondence-ui.md">Add Custom logo in Create Correspondence UI</a> 
   <a href="../../forms/using/add-custom-properties-cm-assets.md">Add custom properties to Correspondence Management assets</a> 
  </related-links> 
 </body> 
</html>