<?xml version="1.1" encoding="UTF-8" standalone="yes"?> 
<html> 
 <head> 
  <meta content="/apps/help/templates/article-3" name="cq:template" /> 
  <meta content="left" name="sideColumn" /> 
  <meta content="506af74f-b956-449c-9fb8-68dfa8adc7ae" name="jcr:uuid" /> 
  <meta content="mix:lockable;mix:versionable" name="jcr:mixinTypes" /> 
  <meta content="2017-12-01T19:04:03.575-0500" name="jcr:created" /> 
  <meta content="Form Bridge" name="navTitle" /> 
  <meta content="robhagat" name="lr_creator" /> 
  <meta content="false" name="isReadyForLocalization" /> 
  <meta content="2013-02-20T08:58:23.975-0500" name="firstPublishQADate" /> 
  <meta content="LiveCycle/10.5/MobileForms/WSf49552907c5bbe1e1b90eeb013cd21cee5b-7ffe" name="cq:gepId" /> 
  <meta content="vishgupt" name="acrolinxLastCheckedBy" /> 
  <meta content="" name="autotagsRejected" /> 
  <meta content="true" name="jcr:isCheckedOut" /> 
  <meta content="" name="jcr:baseVersion" /> 
  <meta content="2a980a87-18f6-4b22-9465-057835682d8f" name="jcr:predecessors" /> 
  <meta content="2018-04-26T04:38:26.424-0400" name="locHandOffDate" /> 
  <meta content="https://helpx.adobe.com/experience-manager/6-4/forms/using/form-bridge-apis.html" name="publishExternalURL" /> 
  <meta content="" name="autotags" /> 
  <meta content="red" name="acrolinxPageStatus" /> 
  <meta content="carlino" name="cq:lastModifiedBy" /> 
  <meta content="2013-03-22T13:10:23.246-0400" name="firstPublishExternalDate" /> 
  <meta content="video" name="pageLayout" /> 
  <meta content="not_checked" name="acrolinxStatus" /> 
  <meta content="carlino@adobe.com" name="lr_lastReplicatedBy" /> 
  <meta content="59" name="acrolinxSentences" /> 
  <meta content="Form Bridge APIs for HTML5 forms" name="jcr:title" /> 
  <meta content="head1_20111213" name="gep_conversion_script_version" /> 
  <meta content="https://helpx-preview.corp.adobe.com/content/help/en/aem-forms/6-1/html5-forms/form-bridge-apis.html" name="publishQAURL" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/FORMS" name="primaryProductTag" /> 
  <meta content="2018-04-03T08:38:07.738-0400" name="lastPublishExternalDate" /> 
  <meta content="carlino" name="cq:lastReplicatedBy" /> 
  <meta content="2018-04-26T04:38:26.425-0400" name="cq:lastModified" /> 
  <meta content="en_us" name="jcr:language" /> 
  <meta content="2013-02-13T03:00:00.000-0500" name="lr_lastModified" /> 
  <meta content="2018-04-03T08:38:08.514-0400" name="cq:lastReplicated" /> 
  <meta content="help/components/pages/article-3" name="sling:resourceType" /> 
  <meta content="" name="jcr:versionHistory" /> 
  <meta content="light" name="heroGradient" /> 
  <meta content="http://checkstyle.corp.adobe.com:8031/output/en/form_bridge_apis_admin_5e12de0b318c6865_2084_report.xml" name="acrolinxReportURL" /> 
  <meta content="2015-06-12T04:29:30.459-0400" name="lastPublishQADate" /> 
  <meta content="robhagat" name="lr_lastModifiedBy" /> 
  <meta content="2016-05-31T06:45:49.441-0400" name="acrolinxDate" /> 
  <meta content="2015-06-12T04:29:30.459-0400" name="publishQADate" /> 
  <meta content="false" name="doNotLocalize" /> 
  <meta content="External applications use the FormBridge API to connect to the XFA Mobile Form. The API dispatches a FormBridgeInitialized event on the parent window." name="seoDescription" /> 
  <meta content="/etc/designs/help" name="cq:designPath" /> 
  <meta content="1117" name="acrolinxWords" /> 
  <meta content="content_type:reference;products:SG_EXPERIENCEMANAGER/6.4/FORMS;topic_tags:developer-reference" name="cq:tags" /> 
  <meta content="2018-04-03T08:38:07.738-0400" name="publishExternalDate" /> 
  <meta content="Activate" name="cq:lastReplicationAction" /> 
  <meta content="" name="jcr:primaryType" /> 
  <meta content="/content/help/en/experience-manager/6-4/forms/morehelp/developer-reference;/content/help/en/experience-manager/6-4/forms/morehelp/developer-reference" name="moreHelpPaths" /> 
  <meta content="admin" name="jcr:createdBy" /> 
  <meta content="2018-04-03T08:38:07.738-0400" name="topicBrowsingSortDate" /> 
 </head> 
 <body> 
  <p>You can use the Form Bridge APIs to open a communication channel between an XFA-based HTML5 forms and your applications. The Form Bridge APIs provides a <strong>connect</strong> API to create the connection. </p> 
  <p>The <strong>connect</strong> API accepts a handler as an argument. After the a successful connection is created between XFA-based HTML5 form and Form Bridge, the handle is invoked. </p> 
  <p>You can use the following sample code to create the connection. </p> 
  <codeblock gutter="true" class="syntax js">
    //&amp;nbsp;Example&amp;nbsp;showing&amp;nbsp;how&amp;nbsp;to&amp;nbsp;connect&amp;nbsp;to&amp;nbsp;FormBridge!!discoiqbr!!window.addEventListener("FormBridgeInitialized",!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function(event)&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;fb&amp;nbsp;=&amp;nbsp;event.detail.formBridge;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;fb.connect(function()&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//use&amp;nbsp;form&amp;nbsp;bridge&amp;nbsp;functions&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;})!!discoiqbr!! 
  </codeblock> 
  <note> 
   <p>Ensure that you create a connection before including the formRuntime.jsp file. </p> 
  </note> 
  <h3>Available Form Bridge API&amp;nbsp;</h3> 
  <p><strong>getBridgeVersion()</strong></p> 
  <div>
    Returns the version number of the Scripting library 
  </div> 
  <ul> 
   <li><strong>Input</strong>: None</li> 
   <li><strong>Output</strong>: Version number of the Scripting library</li> 
   <li><strong>Errors</strong>: None</li> 
  </ul> 
  <p><strong>isConnected()</strong> Checks if Form State has been initialized</p> 
  <ul> 
   <li><strong>Input</strong>: None</li> 
   <li><strong>Output:</strong> <strong>True </strong>if the XFA Form State has been initialized</li> 
   <li><strong>Errors</strong>: None<br /> </li> 
  </ul> 
  <p><strong>connect(handler, context)</strong> Makes a connection to FormBridge and executes the function after the connection is made and Form State has been initialized</p> 
  <ul> 
   <li><strong>Input</strong>: 
    <ul> 
     <li><strong>handler</strong>: Function to execute after Form Bridge is connected</li> 
     <li><strong>context</strong>: The object to which the context (this) of the <em>handler </em>function are set.</li> 
    </ul> </li> 
   <li><strong>Output</strong>: None</li> 
   <li><strong>Error</strong>: None</li> 
  </ul> 
  <p><strong>getDataXML(options)</strong> Returns the current form data in XML Format</p> 
  <ul style="font-family: tahoma, arial, helvetica, sans-serif; font-size: 12px;"> 
   <li><strong>Input: </strong> 
    <ul> 
     <li><strong>options: </strong>JavaScript Object containing following properties: 
      <ul> 
       <li><strong>Error</strong>: Error Handler Function<br /> </li> 
       <li><strong>success</strong>: Success handler function. This function is passed an object containing XML in <em>data</em> property.</li> 
       <li><strong>context</strong>: The object to which the context (this) of the <em>success</em> function is set</li> 
       <li><strong>validationChecker</strong>: Function to call to check validation errors received from the server. Validation function is passed an array of error strings.</li> 
      </ul> 
      <ul> 
       <li><strong>formState</strong>: The JSON state of the XFA Form for which data XML has to be returned. If not specified, it returns the data XML for the currently rendered form.<br /> </li> 
      </ul> </li> 
    </ul> </li> 
   <li><strong>Output: </strong>None</li> 
   <li><strong>Error: </strong>None</li> 
  </ul> 
  <div></div> 
  <p><strong>registerConfig(configName, config)</strong> Registers user / portal specific configurations with FormBridge. These configurations override the default configurations. The supported configurations are specified in the config section.</p> 
  <ul> 
   <li><strong>Input:</strong> 
    <ul> 
     <li><strong>configName:</strong> Name of the configuration to override 
      <ul> 
       <li><strong>widgetConfig: </strong>Allows the user to override the default widgets in the form with custom widgets. The configuration is overridden as follows:<br /> <em>formBridge.registerConfig("widgetConfig":{/*configuration*/})</em></li> 
       <li><em><strong>pagingConfig: </strong>Allows the user to override the default behavior of rendering only the first page. The configuration is overridden as follows:<br /> </em><em>window.formBridge.registerConfig("pagingConfig":{pagingDisabled: &lt;true | false&gt;, shrinkPageDisabled: &lt;true | false&gt; }). </em></li> 
       <li><em><em><strong>LoggingConfig: </strong>Allows the user to override the level of logging, disable logging for a category, or whether to display the logs console or send to server. The configuration can be overridden as follows:</em></em></li> 
       <li><em>formBridge.registerConfig{<br /> </em><em>"LoggerConfig" : {<br /> </em> <em>{<br /> </em> <em>"on":&lt;true </em>| <em>false&gt;,<br /> </em> <em>"category":&lt;array of categories&gt;,<br /> </em> <em>"level":&lt;level of categories&gt;, "<br /> </em> <em>type":&lt;"console"/"server"/"both"&gt;<br /> </em> <em>}<br /> </em><em>}</em></li> 
       <li><em><strong>SubmitServiceProxyConfig: </strong>Allow the users to register submission and logger proxy services.<br /> </em>window.formBridge.registerConfig("submitServiceProxyConfig",<br /> {<br /> "submitServiceProxy" : "&lt;submitServiceProxy&gt;",<br /> "logServiceProxy": "&lt;logServiceProxy&gt;",<br /> "submitUrl" : "&lt;submitUrl&gt;"<br /> });</li> 
      </ul> </li> 
     <li><strong>config:</strong> Value of the configuration<br /> </li> 
    </ul> </li> 
   <li><strong>Output: </strong>Object containing original value of the configuration in <em>data</em> property.</li> 
   <li><strong>Error: </strong>None</li> 
  </ul> 
  <div> 
  </div> 
  <p><strong>hideFields(fieldArray)</strong> Hides the fields whose Som expressions are provided in the fieldArray. Sets the presence property of the specified fields to invisible</p> 
  <ul style="font-family: tahoma, arial, helvetica, sans-serif; font-size: 12px;"> 
   <li><strong>Input: </strong> 
    <ul> 
     <li><strong>fieldArray:</strong> Array of Som expressions for the fields to hide<br /> </li> 
    </ul> </li> 
   <li><strong>Output: </strong>None</li> 
   <li><strong>Error: </strong>None</li> 
  </ul> 
  <p><strong>showFields(fieldArray)</strong> Shows the fields whose Som expressions are provided in the fieldArray. Sets the presence property of the provided fields to visible</p> 
  <ul style="font-family: tahoma, arial, helvetica, sans-serif; font-size: 12px;"> 
   <li><strong>Input:</strong> 
    <ul> 
     <li><strong>fieldArray: </strong>Array of Som expressions for the fields to show<br /> </li> 
    </ul> </li> 
   <li><strong>Output: </strong>None</li> 
   <li><strong>Error: </strong>None</li> 
  </ul> 
  <p><strong>hideSubmitButtons()</strong> Hides all the submit buttons in the form</p> 
  <ul> 
   <li><strong>Input</strong>: None</li> 
   <li><strong>Output</strong>: None</li> 
   <li><strong>Error</strong>: Throws exception if Form State is not initialized</li> 
  </ul> 
  <p><strong>getFormState()</strong> Returns the JSON representing the Form State</p> 
  <ul> 
   <li><strong>Input: </strong>None</li> 
   <li><strong>Output: </strong>Object containing JSON representing the current Form State in <em>data</em> property.</li> 
   <li><strong>Error: </strong>None</li> 
  </ul> 
  <p><strong>restoreFormState(options)</strong> Restores the Form State from the provided JSON state in the options object. The state is applied and success or error handlers are called after the operation is complete</p> 
  <ul> 
   <li><strong>Input:</strong> 
    <ul> 
     <li><strong>Options: </strong>JavaScript Object containing following properties: 
      <ul> 
       <li><strong>Error</strong>: Error Handler Function</li> 
       <li><strong>success</strong>: Success handler function</li> 
       <li><strong>context</strong>: The object to which the context (this) of the <em>success </em>function are set</li> 
       <li><strong>formState</strong>: JSON state of the form. The form is restored to the JSON state..</li> 
      </ul> </li> 
    </ul> </li> 
  </ul> 
  <ul> 
   <li><strong>Output: </strong>None</li> 
   <li><strong>Error: </strong>None</li> 
  </ul> 
  <p><strong>setFocus (som)</strong> Sets focus on the field specified in the Som expression</p> 
  <ul> 
   <li><strong>Input: </strong>Som expression of the field on which to set focus</li> 
   <li><strong>Output: </strong>None</li> 
   <li><strong>Error: </strong>Throws an exception in case of incorrect Som expression<br /> </li> 
  </ul> 
  <p><strong>setFieldValue (som, value)</strong> Sets the value of the fields for the given Som expressions</p> 
  <ul> 
   <li><strong>Input: </strong> 
    <ul> 
     <li><strong>som: </strong>Array containing Som expressions of the field. The som expression to set value of the fields. </li> 
     <li><strong style="font-size: 12px;">value:</strong> Array containing values corresponding to Som expressions provided in a <strong style="font-size: 12px;">som </strong>array. If the data type of the value is not the same as the fieldType, the value is not modified.</li> 
    </ul> </li> 
   <li><strong>Output: </strong>None</li> 
   <li><strong>Error: </strong>Throws an Exception in the case of an incorrect Som expression</li> 
  </ul> 
  <p><strong>getFieldValue (som)</strong> Returns the value of the fields for the given Som expressions</p> 
  <ul> 
   <li><strong>Input: </strong>Array containing Som expressions of the fields whose value has to be retrieved</li> 
   <li><strong>Output: </strong>Object containing the result as Array in <strong>data </strong>property.</li> 
   <li><strong>Error: </strong>None</li> 
  </ul> 
  <h4>Example of&amp;nbsp;getFieldValue() API</h4> 
  <codeblock gutter="true" class="syntax js">
    var&amp;nbsp;a&amp;nbsp;=&amp;nbsp;&amp;nbsp;formBridge.getFieldValue(“xfa.form.form1.Subform1.TextField”);!!discoiqbr!!if(a.errors)&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;err;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while((err&amp;nbsp;=&amp;nbsp;a.getNextMessage())&amp;nbsp;!=&amp;nbsp;null)!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;alert(a.message)!!discoiqbr!!}&amp;nbsp;else&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;alert(a.data[0])&amp;nbsp;!!discoiqbr!!}!!discoiqbr!! 
  </codeblock> 
  <p><strong>getFieldProperties(som, property)</strong> Retrieve the list of values for the given property of the fields specified in Som expressions</p> 
  <ul> 
   <li><strong>Input:</strong> 
    <ul> 
     <li><strong>som: </strong>Array containing Som expressions for the fields<br /> </li> 
     <li><strong>property</strong>: Name of the property whose value is required<br /> </li> 
    </ul> </li> 
   <li><strong>Output: </strong>Object containing the result as Array in <em>data </em>property</li> 
   <li><strong>Error: </strong>None</li> 
  </ul> 
  <p><strong>setFieldProperties(som, property, values)</strong> Sets the value of the given property for all fields specified in the Som expressions</p> 
  <ul> 
   <li><strong>Input:</strong> 
    <ul> 
     <li><strong>som: </strong>Array<strong> </strong>containing<strong> </strong>Som expressions of the fields whose value has to be set<br /> </li> 
     <li><strong>property</strong>: Property whose value has to be set<br /> </li> 
     <li><strong>value:</strong> Array containing values of the given property for fields specified in Som expressions<br /> </li> 
    </ul> </li> 
   <li><strong>Output: </strong>None</li> 
   <li><strong>Error: </strong>None</li> 
  </ul> 
  <h3>Sample Usage of Form Bridge API</h3> 
  <codeblock gutter="true" class="syntax js">
    //&amp;nbsp;Example&amp;nbsp;1:&amp;nbsp;FormBridge.restoreFormState!!discoiqbr!!&amp;nbsp;&amp;nbsp;function&amp;nbsp;loadFormState()&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;suc&amp;nbsp;=&amp;nbsp;function(obj)&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//success!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;err&amp;nbsp;=&amp;nbsp;function(obj)&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while(var&amp;nbsp;t&amp;nbsp;=&amp;nbsp;obj.getNextMessage())&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$("#errorDiv").append("&lt;div&gt;"+t.message+"&lt;/div&gt;");!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;_formState&amp;nbsp;=&amp;nbsp;//&amp;nbsp;load&amp;nbsp;form&amp;nbsp;state&amp;nbsp;from&amp;nbsp;storage!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;formBridge.restoreFormState({success:suc,error:err,formState:_formState});&amp;nbsp;//&amp;nbsp;not&amp;nbsp;passing&amp;nbsp;a&amp;nbsp;context&amp;nbsp;means&amp;nbsp;that&amp;nbsp;this&amp;nbsp;will&amp;nbsp;be&amp;nbsp;formBridge&amp;nbsp;itself.&amp;nbsp;Validation&amp;nbsp;errors&amp;nbsp;will&amp;nbsp;be&amp;nbsp;checked.!!discoiqbr!!&amp;nbsp;&amp;nbsp;}!!discoiqbr!!!!discoiqbr!!//--------------------------------------------------------------------------------------------------!!discoiqbr!!!!discoiqbr!!//Example&amp;nbsp;2:&amp;nbsp;FormBridge.submitForm!!discoiqbr!!&amp;nbsp;&amp;nbsp;function&amp;nbsp;SubmitForm()&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;suc&amp;nbsp;=&amp;nbsp;function(obj)&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;data&amp;nbsp;=&amp;nbsp;obj.data;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;submit&amp;nbsp;the&amp;nbsp;data&amp;nbsp;to&amp;nbsp;a&amp;nbsp;url;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;err&amp;nbsp;=&amp;nbsp;function(obj)&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while(var&amp;nbsp;t&amp;nbsp;=&amp;nbsp;obj.getNextMessage())&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$("#errorDiv").append("&lt;div&gt;"+t.message+"&lt;/div&gt;");!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;formBridge.submitForm({success:suc,error:err});&amp;nbsp;//&amp;nbsp;not&amp;nbsp;passing&amp;nbsp;a&amp;nbsp;context&amp;nbsp;means&amp;nbsp;that&amp;nbsp;this&amp;nbsp;will&amp;nbsp;be&amp;nbsp;formBridge&amp;nbsp;itself.&amp;nbsp;Validation&amp;nbsp;errors&amp;nbsp;will&amp;nbsp;be&amp;nbsp;checked.!!discoiqbr!!&amp;nbsp;&amp;nbsp;} 
  </codeblock> 
  <p><a href="https://www.adobe.com/account/sign-in.supportportal.html" target="_blank"><strong>Contact Support</strong></a></p> 
  <related-links> 
   <a href="../../forms/using/introduction-widgets.md">Appearance framework for adaptive and HTML5 forms</a> 
   <a href="../../forms/using/custom-profile.md">Creating custom profiles for HTML5 forms</a> 
   <a href="../../forms/using/custom-widgets.md">Custom Widgets for HTML5 forms</a> 
   <a href="../../forms/using/form-bridge-apis.md">Form Bridge for HTML5 forms</a> 
   <a href="../../forms/using/integrate-form-bridge-forms-portal.md">Integrating form bridge with forms portal</a> 
   <a href="../../forms/using/css-styles.md">Changing default styles of HTML5 forms</a> 
  </related-links> 
 </body> 
</html>