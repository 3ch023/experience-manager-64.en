<?xml version="1.1" encoding="UTF-8" standalone="yes"?> 
<html> 
 <head> 
  <meta content="2018-04-03T08:10:24.670-0400" name="cq:lastReplicated" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/FORMS" name="primaryProductTag" /> 
  <meta content="false" name="isReadyForLocalization" /> 
  <meta content="light" name="heroGradient" /> 
  <meta content="vishgupt" name="contentOwner" /> 
  <meta content="carlino" name="cq:lastModifiedBy" /> 
  <meta content="true" name="jcr:isCheckedOut" /> 
  <meta content="carlino" name="cq:lastReplicatedBy" /> 
  <meta content="" name="jcr:baseVersion" /> 
  <meta content="2018-04-03T08:10:24.001-0400" name="lastPublishExternalDate" /> 
  <meta content="left" name="sideColumn" /> 
  <meta content="not_checked" name="acrolinxStatus" /> 
  <meta content="/apps/help/templates/article-3" name="cq:template" /> 
  <meta content="Learn to configure asynchronous submission for adaptive forms." name="seoDescription" /> 
  <meta content="en_us" name="jcr:language" /> 
  <meta content="2017-02-23T08:13:03.750-0500" name="firstPublishExternalDate" /> 
  <meta content="https://helpx.adobe.com/experience-manager/6-4/forms/using/asynchronous-submissions-adaptive-forms.html" name="publishExternalURL" /> 
  <meta content="" name="jcr:versionHistory" /> 
  <meta content="video" name="pageLayout" /> 
  <meta content="false" name="doNotLocalize" /> 
  <meta content="Activate" name="cq:lastReplicationAction" /> 
  <meta content="admin" name="jcr:createdBy" /> 
  <meta content="28e417c5-2aa1-4801-af26-8d030c76b348" name="jcr:uuid" /> 
  <meta content="2018-04-26T04:21:28.340-0400" name="locHandOffDate" /> 
  <meta content="/etc/designs/help" name="cq:designPath" /> 
  <meta content="" name="jcr:primaryType" /> 
  <meta content="/content/help/en/experience-manager/6-4/forms/morehelp/develop;/content/help/en/experience-manager/6-4/forms/morehelp/develop" name="moreHelpPaths" /> 
  <meta content="help/components/pages/article-3" name="sling:resourceType" /> 
  <meta content="2018-04-03T08:10:24.001-0400" name="topicBrowsingSortDate" /> 
  <meta content="carlino@adobe.com" name="lr_lastReplicatedBy" /> 
  <meta content="mix:versionable" name="jcr:mixinTypes" /> 
  <meta content="2017-12-01T19:06:17.293-0500" name="jcr:created" /> 
  <meta content="2018-04-03T08:10:24.001-0400" name="publishExternalDate" /> 
  <meta content="2018-04-26T04:21:28.340-0400" name="cq:lastModified" /> 
  <meta content="Asynchronous submission of adaptive forms" name="jcr:title" /> 
  <meta content="en" name="pageCreatedAt" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/FORMS;topic_tags:develop" name="cq:tags" /> 
  <meta content="5245f2c8-1244-4e99-8d73-f04acf2b3f8e" name="jcr:predecessors" /> 
 </head> 
 <body> 
  <p>Traditionally, web forms are configured to submit synchronously. When users submit a form, they are redirected to an acknowledgement page, or in case of submission failure, an error page. However, modern web experiences like single page applications are gaining popularity where the web page remains static while client-server interaction happens in the background. You can now provide this experience with adaptive forms by configuring asynchronous submission. In this case, an adaptive form behaves like a single page application as the form does not reload or its URL does not change when the submitted form data is validated on the server.</p> 
  <p>Read on for details about asynchronous submission in adaptive forms.</p> 
  <h2 id="configure">Configure asynchronous submission</h2> 
  <p>To configure asynchronous submission for an adaptive form:</p> 
  <ol> 
   <li><p>In adaptive form authoring mode, select the Form Container object and tap <img src="assets/cmppr1.png" /> to open its properties.</p> </li> 
   <li><p>In the <span class="uicontrol">Submission</span> properties section, enable <span class="uicontrol">Use asynchronous submission</span>.</p> </li> 
   <li><p>In the <span class="uicontrol">On Submit</span> section, select one of the following options to perform on successful form submission.</p> 
    <ul> 
     <li><span class="uicontrol">Redirect to URL</span>: Redirects to the specified URL or page on form submission. You can specify a URL or browse to choose the path to a page in the <span class="uicontrol">Redirect URL/Path</span> field. </li> 
     <li><span class="uicontrol">Show Message</span>: Displays a message on form submission. You can write a message in the text field below the Show Message option. The text field support rich text formatting.<br /> </li> 
    </ul> </li> 
   <li><p>Tap <img src="assets/check-button1.png" /> to save the properties.</p> </li> 
  </ol> 
  <h2>How asynchronous submission works</h2> 
  <p>AEM Forms provides out-of-the-box success and error handlers for form submissions. Handlers are client-side functions that execute based on the server response. When a form is submitted, the data is transmitted to the server for validation, which returns a response to the client with information about the success or error event for the submission. The information is passed as parameters to the relevant handler to execute the function.</p> 
  <p>In addition, form authors and developers can write rules at form level to override default handlers. For more information, see <a href="#custom">Override default handlers using rules</a>.</p> 
  <p>Let us first review the server response for success and error events. </p> 
  <h3>Server response for submission success event</h3> 
  <p>The structure for the server response for submission success event is as follows:</p> 
  <codeblock class="syntax plain">
    {!!discoiqbr!!&amp;nbsp;&amp;nbsp;contentType&amp;nbsp;:&amp;nbsp;"&lt;xmlschema&amp;nbsp;or&amp;nbsp;jsonschema&gt;",&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;data&amp;nbsp;:&amp;nbsp;"&lt;dataXML&amp;nbsp;or&amp;nbsp;dataJson&gt;"&amp;nbsp;,&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;thankYouOption&amp;nbsp;:&amp;nbsp;&lt;page/message&gt;,&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;thankYouContent&amp;nbsp;:&amp;nbsp;"&lt;thank&amp;nbsp;you&amp;nbsp;page&amp;nbsp;url/thank&amp;nbsp;you&amp;nbsp;message&gt;"!!discoiqbr!!} 
  </codeblock> 
  <p>The server response in case of successful form submission includes:</p> 
  <ul> 
   <li>Form data format type: XML or JSON</li> 
   <li>Form data in XML or JSON format</li> 
   <li>Selected option to redirect to a page or display a message as configured in the form</li> 
   <li>Page URL or message content as configured in the form</li> 
  </ul> 
  <p>The success handler reads the server response and accordingly redirects to the configured page URL or displays a message.</p> 
  <h3>Server response for submission error event</h3> 
  <p>The structure for the server response for submission error event is as follows:</p> 
  <codeblock class="syntax plain">
    {!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;errorCausedBy&amp;nbsp;:&amp;nbsp;"&lt;CAPTCHA_VALIDATION&amp;nbsp;or&amp;nbsp;SERVER_SIDE_VALIDATION&gt;",!!discoiqbr!!!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;errors&amp;nbsp;:&amp;nbsp;[!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&amp;nbsp;"somExpression"&amp;nbsp;:&amp;nbsp;"&lt;SOM&amp;nbsp;Expression&gt;",!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"errorMessage"&amp;nbsp;&amp;nbsp;:&amp;nbsp;"&lt;Error&amp;nbsp;Message&gt;"!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;},!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;...!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;]!!discoiqbr!!&amp;nbsp;} 
  </codeblock> 
  <p>The server response in case of error in form submission includes:</p> 
  <ul> 
   <li>Reason for the error, failed CAPTCHA or server-side validation</li> 
   <li>List of error objects, which includes the SOM expression of the field that failed validation and the corresponding error message</li> 
  </ul> 
  <p>The errors handler reads the server response and accordingly displays the error message on the form.</p> 
  <h2 id="custom">Override default handlers using rules</h2> 
  <p>Form developers and authors can write rules, at form level, in code editor to override default handlers. The server response for success and error events is exposed at form level, which developers can access using <span class="code">$event.data</span> in rules.</p> 
  <p>Perform the following steps to write rules in code editor to handle success and error events.</p> 
  <ol> 
   <li><p>Open the adaptive form in authoring mode, select any form object, and tap <img src="assets/edit-rules1.png" /> to open the rule editor.</p> </li> 
   <li><p>Select <span class="uicontrol">Form</span> in the Form Objects tree and tap <span class="uicontrol">Create</span>.</p> </li> 
   <li><p>Select <span class="uicontrol">Code Editor</span> from the mode selection drop-down.</p> </li> 
   <li><p>In the code editor, tap <span class="uicontrol">Edit Code</span>. Tap <span class="uicontrol">Edit</span> on the confirmation dialog.</p> </li> 
   <li><p>Choose <span class="uicontrol">Successful Submission</span> or <span class="uicontrol">Error in Submission</span> from the <span class="uicontrol">Event</span> drop-down.</p> </li> 
   <li><p>Write a rule for the selected event and tap <span class="uicontrol">Done</span> to save the rule.</p> </li> 
  </ol>   
 </body> 
</html>