<?xml version="1.1" encoding="UTF-8" standalone="yes"?> 
<html> 
 <head> 
  <meta content="692" name="acrolinxWords" /> 
  <meta content="help/components/pages/article-3" name="sling:resourceType" /> 
  <meta content="2017-10-31T16:35:23.740-0400" name="publishExternalDate" /> 
  <meta content="Extending Asset Editor" name="jcr:title" /> 
  <meta content="2018-04-24T11:59:52.848-0400" name="cq:lastModified" /> 
  <meta content="2018-04-03T07:59:38.195-0400" name="cq:lastReplicated" /> 
  <meta content="carlino" name="cq:lastModifiedBy" /> 
  <meta content="2017-10-12T21:46:58.665-0400" name="mwpw_migration_script_version" /> 
  <meta content="false" name="isReadyForLocalization" /> 
  <meta content="https://helpx.adobe.com/experience-manager/6-3/assets/using/asseteditorx.html" name="publishExternalURL" /> 
  <meta content="/apps/help/templates/article-3" name="cq:template" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/ASSETS" name="primaryProductTag" /> 
  <meta content="checked_not_improved" name="acrolinxStatus" /> 
  <meta content="/etc/designs/help" name="cq:designPath" /> 
  <meta content="/content/docs/en/aem/6-3/develop/extending/assets/asseteditorx" name="qaNotes" /> 
  <meta content="admin" name="jcr:createdBy" /> 
  <meta content="mix:versionable" name="jcr:mixinTypes" /> 
  <meta content="2019-01-12T17:11:42.737-0500" name="acrolinxDate" /> 
  <meta content="016791c8-37f4-4253-9b2a-6bc763aee7ce" name="jcr:uuid" /> 
  <meta content="carlino" name="cq:lastReplicatedBy" /> 
  <meta content="2018-04-24T11:59:52.847-0400" name="locHandOffDate" /> 
  <meta content="Extending Asset Editor" name="navTitle" /> 
  <meta content="yellow" name="acrolinxPageStatus" /> 
  <meta content="e9f222a9-04e7-4aac-9089-bcb2836f4a4a" name="jcr:predecessors" /> 
  <meta content="2017-10-31T16:35:23.740-0400" name="firstPublishExternalDate" /> 
  <meta content="2017-10-31T16:35:23.740-0400" name="topicBrowsingSortDate" /> 
  <meta content="Extending Asset Editor" name="seoTitle" /> 
  <meta content="wmyersta@adobe.com" name="lr_lastReplicatedBy" /> 
  <meta content="Learn how to extend the capabilities of Asset Editor using custom components." name="seoDescription" /> 
  <meta content="56" name="acrolinxSentences" /> 
  <meta content="" name="jcr:versionHistory" /> 
  <meta content="2017-12-01T19:05:20.711-0500" name="jcr:created" /> 
  <meta content="2017-10-31T16:35:23.740-0400" name="lastPublishExternalDate" /> 
  <meta content="asgupta" name="acrolinxLastCheckedBy" /> 
  <meta content="http://acrolinx.corp.adobe.com:8031/output/en/asseteditorx_krs_workflow_f3c2f2ccebf6138e_88_report.xml" name="acrolinxReportURL" /> 
  <meta content="" name="jcr:baseVersion" /> 
  <meta content="Guillaume Carlino" name="contentOwner" /> 
  <meta content="/content/help/en/experience-manager/6-4/assets/morehelp/extending-assets;/content/help/en/experience-manager/6-4/assets/morehelp/extending-assets" name="moreHelpPaths" /> 
  <meta content="en_us" name="jcr:language" /> 
  <meta content="" name="jcr:primaryType" /> 
  <meta content="Activate" name="cq:lastReplicationAction" /> 
  <meta content="2017-10-12T21:46:58.665-0400" name="qaDate" /> 
  <meta content="true" name="jcr:isCheckedOut" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/ASSETS;topic_tags:extending-assets;content_type:reference" name="cq:tags" /> 
 </head> 
 <body> 
  <p>The Asset Editor is the page that opens when an asset found through the Asset Share is clicked allowing the user to edit such aspects of the asset as metadata, thumbnail, title and tags. </p> 
  <p>Configuration of the editor using the predefined editing components is covered in <a href="../../assets/using/assets-finder-editor.md#main-pars-title-1">Creating and Configuring an Asset Editor Page</a>.</p> 
  <p>In addition to using pre-existing editor components, Adobe Experience Manager (AEM) developers can also create their own components.</p> 
  <h3>Creating an Asset Editor Template</h3> 
  <p>The following sample pages are included in geometrixx:</p> 
  <ul> 
   <li>Geometrixx Sample Page: <strong>/content/geometrixx/en/press/asseteditor.html</strong></li> 
   <li>Sample Template: <strong>/apps/geometrixx/templates/asseteditor</strong></li> 
   <li>Sample Page Component:<strong> /apps/geometrixx/components/asseteditor</strong></li> 
  </ul> 
  <h4>Configuring Clientlib</h4> 
  <p>AEM Assets components use an extension of the WCM edit clientlib. The clientlibs are usually loaded in <strong>init.jsp</strong>.</p> 
  <p>Compared to the default clientlib loading (in core's <strong>init.jsp</strong>), an AEM Assets template must have the following:</p> 
  <ul> 
   <li>The template must include the <strong>cq.dam.edit</strong> clientlib (instead of <strong>cq.wcm.edit</strong>).</li> 
   <li>The clientlib must also be included in disabled WCM mode (for example, loaded on <strong>publish</strong>) to be able to render the predicates, actions, and lenses.<br /> </li> 
  </ul> 
  <p>In most cases, copying the existing sample <strong>init.jsp</strong> (<strong>/apps/geometrixx/components/asseteditor/init.jsp</strong>) should meet these needs.<br /> </p> 
  <h4>Configuring JS actions</h4> 
  <p>Some of the AEM Assets components require JS functions defined in <strong>component.js</strong>. Copy this file to your component directory and link it.</p> 
  <codeblock gutter="true" class="syntax xml">
    &lt;script&amp;nbsp;type="text/javascript"&amp;nbsp;src="&lt;%=&amp;nbsp;component.getPath()&amp;nbsp;%&gt;/component.js"&gt;&lt;/script&gt;!!discoiqbr!! 
  </codeblock> 
  <p>The sample loads this javascript source in <strong>head.jsp </strong>(<strong>/apps/geometrixx/components/asseteditor/head.jsp</strong>).</p> 
  <h4>Additional Style Sheets</h4> 
  <p>Some of the AEM Assets components use the AEM widgets library. To be rendered properly in the content context, an additional style sheet has to be loaded. The tag action component requires one more.</p> 
  <codeblock gutter="true" class="syntax xml">
    &lt;link&amp;nbsp;href="/etc/designs/geometrixx/ui.widgets.css"&amp;nbsp;rel="stylesheet"&amp;nbsp;type="text/css"&gt; 
  </codeblock> 
  <h4>Geometrixx Style Sheet</h4> 
  <p>The sample page components require that all selectors start with <strong>.asseteditor</strong> of <strong>static.css</strong> (<strong>/etc/designs/geometrixx/static.css</strong>). Best practice: Copy all <strong>.asseteditor</strong> selectors to your style sheet and adjust the rules as desired.</p> 
  <h4>FormChooser: Adjustments for eventually loaded Resources</h4> 
  <p>The Asset Editor uses the Form Chooser, which allows you to edit resources - in this case assets - on the same form page by simply adding a form selector and the path of the form to the URL of the asset.</p> 
  <p>For example:</p> 
  <ul> 
   <li>Plain form page: <a href="http://localhost:4502/content/geometrixx/en/press/asseteditor.html">http://localhost:4502/content/geometrixx/en/press/asseteditor.html</a></li> 
   <li>Asset loaded into the form page: <a href="http://localhost:4502/content/dam/geometrixx/icons/diamond.png.form.html/content/geometrixx/en/press/asseteditor.html">http://localhost:4502/content/dam/geometrixx/icons/diamond.png.form.html/content/geometrixx/en/press/asseteditor.html</a></li> 
  </ul> 
  <p>The sample handles in <strong>head.jsp</strong> (<strong>/apps/geometrixx/components/asseteditor/head.jsp</strong>) do the following:</p> 
  <ul> 
   <li>They detect if an asset is loaded or if the plain form has to be displayed.</li> 
   <li>If an asset is loaded, they disable WCM mode as parsys can only be edited on a plain form page. <br /> </li> 
   <li>If an asset is loaded, they use its title instead of the one on the form page.<br /> </li> 
  </ul> 
  <codeblock gutter="true" class="syntax java">
    &amp;nbsp;List&lt;Resource&gt;&amp;nbsp;resources&amp;nbsp;=&amp;nbsp;FormsHelper.getFormEditResources(slingRequest);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(resources&amp;nbsp;!=&amp;nbsp;null)&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(resources.size()&amp;nbsp;==&amp;nbsp;1)&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;single&amp;nbsp;resource!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FormsHelper.setFormLoadResource(slingRequest,&amp;nbsp;resources.get(0));!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;else&amp;nbsp;if&amp;nbsp;(resources.size()&amp;nbsp;&gt;&amp;nbsp;1)&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;multiple&amp;nbsp;resources!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;not&amp;nbsp;supported&amp;nbsp;by&amp;nbsp;CQ&amp;nbsp;5.3!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Resource&amp;nbsp;loadResource&amp;nbsp;=&amp;nbsp;(Resource)&amp;nbsp;request.getAttribute("cq.form.loadresource");!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;title;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(loadResource&amp;nbsp;!=&amp;nbsp;null)&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;an&amp;nbsp;asset&amp;nbsp;is&amp;nbsp;loaded:&amp;nbsp;disable&amp;nbsp;WCM!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;WCMMode.DISABLED.toRequest(request);!!discoiqbr!!!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;path&amp;nbsp;=&amp;nbsp;loadResource.getPath();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Asset&amp;nbsp;asset&amp;nbsp;=&amp;nbsp;loadResource.adaptTo(Asset.class);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;it&amp;nbsp;might&amp;nbsp;happen&amp;nbsp;that&amp;nbsp;the&amp;nbsp;adobe&amp;nbsp;xmp&amp;nbsp;lib&amp;nbsp;creates&amp;nbsp;an&amp;nbsp;array!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Object&amp;nbsp;titleObj&amp;nbsp;=&amp;nbsp;asset.getMetadata("dc:title");!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(titleObj&amp;nbsp;instanceof&amp;nbsp;Object[])&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Object[]&amp;nbsp;titleArray&amp;nbsp;=&amp;nbsp;(Object[])&amp;nbsp;titleObj;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;title&amp;nbsp;=&amp;nbsp;(titleArray.length&amp;nbsp;&gt;&amp;nbsp;0)&amp;nbsp;?&amp;nbsp;titleArray[0].toString()&amp;nbsp;:&amp;nbsp;"";!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;else&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;title&amp;nbsp;=&amp;nbsp;titleObj.toString();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;catch&amp;nbsp;(NullPointerException&amp;nbsp;e)&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;title&amp;nbsp;=&amp;nbsp;path.substring(path.lastIndexOf("/")&amp;nbsp;+&amp;nbsp;1);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;else&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;title&amp;nbsp;=&amp;nbsp;currentPage.getTitle()&amp;nbsp;==&amp;nbsp;null&amp;nbsp;?&amp;nbsp;currentPage.getName()&amp;nbsp;:&amp;nbsp;currentPage.getTitle();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!! 
  </codeblock> 
  <p>In the HTML part, use the preceding title set (either asset or page title):</p> 
  <codeblock gutter="true" class="syntax xml">
    &lt;title&gt;&lt;%=&amp;nbsp;title&amp;nbsp;%&gt;&lt;/title&gt;!!discoiqbr!! 
  </codeblock> 
  <h3>Creating a simple form field component</h3> 
  <p>This example describes how to build a component that shows and displays the metadata of a loaded asset.</p> 
  <ol> 
   <li><p>Create a component folder in your projects directory, for example, <strong>/apps/geometrixx/components/samplemeta</strong>.</p> </li> 
   <li><p>Add <strong>content.xml</strong>:</p> 
    <codeblock gutter="true" class="syntax xml">
      &lt;?xml&amp;nbsp;version="1.0"&amp;nbsp;encoding="UTF-8"?&gt;!!discoiqbr!!&lt;jcr:root&amp;nbsp;xmlns:sling="http://sling.apache.org/jcr/sling/1.0"&amp;nbsp;xmlns:cq="http://www.day.com/jcr/cq/1.0"&amp;nbsp;xmlns:jcr="http://www.jcp.org/jcr/1.0"!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;jcr:primaryType="cq:Component"!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;jcr:title="Image&amp;nbsp;Dimension"!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sling:resourceSuperType="foundation/components/parbase"!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;allowedParents="[*/parsys]"!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;componentGroup="Asset&amp;nbsp;Editor"/&gt;!!discoiqbr!! 
    </codeblock></li> 
   <li><p>Add <strong>samplemeta.jsp</strong>:</p> 
    <codeblock gutter="true" class="syntax xml">
      &lt;%--!!discoiqbr!!!!discoiqbr!!&amp;nbsp;&amp;nbsp;Sample&amp;nbsp;metadata&amp;nbsp;field&amp;nbsp;comopnent!!discoiqbr!!!!discoiqbr!!--%&gt;&lt;%@&amp;nbsp;page&amp;nbsp;import="com.day.cq.dam.api.Asset,!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;java.security.AccessControlException"&amp;nbsp;%&gt;&lt;%!!discoiqbr!!%&gt;&lt;%@include&amp;nbsp;file="/libs/foundation/global.jsp"%&gt;&lt;%!!discoiqbr!!!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;value&amp;nbsp;=&amp;nbsp;"";!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;name&amp;nbsp;=&amp;nbsp;"dam:sampleMetadata";!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;boolean&amp;nbsp;readOnly&amp;nbsp;=&amp;nbsp;false;!!discoiqbr!!!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;If&amp;nbsp;the&amp;nbsp;form&amp;nbsp;page&amp;nbsp;is&amp;nbsp;requested&amp;nbsp;for&amp;nbsp;an&amp;nbsp;asset&amp;nbsp;loadResource&amp;nbsp;will&amp;nbsp;be&amp;nbsp;the&amp;nbsp;asset.!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Resource&amp;nbsp;loadResource&amp;nbsp;=&amp;nbsp;(Resource)&amp;nbsp;request.getAttribute("cq.form.loadresource");!!discoiqbr!!!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(loadResource&amp;nbsp;!=&amp;nbsp;null)&amp;nbsp;{!!discoiqbr!!!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;Determine&amp;nbsp;if&amp;nbsp;the&amp;nbsp;loaded&amp;nbsp;asset&amp;nbsp;is&amp;nbsp;read&amp;nbsp;only.!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Session&amp;nbsp;session&amp;nbsp;=&amp;nbsp;slingRequest.getResourceResolver().adaptTo(Session.class);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;session.checkPermission(loadResource.getPath(),&amp;nbsp;"set_property");!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;readOnly&amp;nbsp;=&amp;nbsp;false;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;catch&amp;nbsp;(AccessControlException&amp;nbsp;ace)&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;checkPermission&amp;nbsp;throws&amp;nbsp;exception&amp;nbsp;if&amp;nbsp;asset&amp;nbsp;is&amp;nbsp;read&amp;nbsp;only!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;readOnly&amp;nbsp;=&amp;nbsp;true;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;catch&amp;nbsp;(RepositoryException&amp;nbsp;re)&amp;nbsp;{}!!discoiqbr!!!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;Get&amp;nbsp;the&amp;nbsp;value&amp;nbsp;of&amp;nbsp;the&amp;nbsp;metadata.!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Asset&amp;nbsp;asset&amp;nbsp;=&amp;nbsp;loadResource.adaptTo(Asset.class);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;value&amp;nbsp;=&amp;nbsp;asset.getMetadata(name).toString();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;catch&amp;nbsp;(NullPointerException&amp;nbsp;npe)&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;no&amp;nbsp;metadata&amp;nbsp;dc:description&amp;nbsp;available!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!%&gt;!!discoiqbr!!&lt;div&amp;nbsp;class="form_row"&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;div&amp;nbsp;class="form_leftcol"&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;div&amp;nbsp;class="form_leftcollabel"&gt;Sample&amp;nbsp;Metadata&lt;/div&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/div&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;div&amp;nbsp;class="form_rightcol"&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;%!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(readOnly)&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;%&gt;&lt;c:out&amp;nbsp;value="&lt;%=&amp;nbsp;value&amp;nbsp;%&gt;"/&gt;&lt;%!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;else&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;%&gt;&lt;input&amp;nbsp;class="text"&amp;nbsp;type="text"&amp;nbsp;name="./jcr:content/metadata/&lt;%=&amp;nbsp;name&amp;nbsp;%&gt;"&amp;nbsp;value="&lt;c:out&amp;nbsp;value="&lt;%=&amp;nbsp;value&amp;nbsp;%&gt;"&amp;nbsp;/&gt;"&gt;&lt;%!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}%&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/div&gt;!!discoiqbr!!&lt;/div&gt;!!discoiqbr!! 
    </codeblock></li> 
   <li><p>To make the component available, you need to be able to edit it. To make a component editable, in CRXDE Lite, add a node <strong>cq:editConfig</strong> of primary type <strong>cq:EditConfig</strong>. So that you can remove paragraphs, add a multi-value property <strong>cq:actions</strong> with a single value of <strong>DELETE</strong>.<br /> </p> </li> 
   <li><p>Navigate to your browser, and on your sample page (for example, <strong>asseteditor.html</strong>) switch to design mode and enable your new component for the paragraph system.<br /> </p> </li> 
   <li><p>In <strong>Edit</strong> mode, the new component (for example, <strong>Sample Metadata</strong>) is now available in the sidekick (found in the <strong>Asset Editor </strong>group). Insert the component. To be able to store the metadata, it must be added to the metadata form.</p> </li> 
  </ol> 
  <h3>Modifying Metadata Options</h3> 
  <p>You can modify the namespaces available in the <a href="../../assets/using/assets-finder-editor.md#main-pars-title-14">metadata form</a>.</p> 
  <p>Currently available metadata are defined in <strong>/libs/dam/options/metadata</strong>:</p> 
  <ul> 
   <li>The first level inside this directory contains the namespaces.</li> 
   <li>The items inside each namespace represents a metadata, such as results in a local part item.</li> 
   <li>The metadata content contains the information for the type and the multi-value options.</li> 
  </ul> 
  <p>The options can be overwritten in <strong>/apps/dam/options/metadata</strong>:</p> 
  <ol> 
   <li>Copy the directory from <strong>/libs </strong>to <strong>/apps</strong>.</li> 
   <li>Remove, modify, or add items.</li> 
  </ol> 
  <note> 
   <p>If you add new namespaces, they must be registered in your repository/CRX. Otherwise submitting the metadata form will result in an error.</p> 
  </note> 
 </body> 
</html>