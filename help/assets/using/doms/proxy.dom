<?xml version="1.1" encoding="UTF-8" standalone="yes"?> 
<html> 
 <head> 
  <meta content="2017-12-01T19:04:38.596-0500" name="jcr:created" /> 
  <meta content="Assets Proxy Development" name="jcr:title" /> 
  <meta content="2017-11-30T11:38:13.846-0500" name="lastPublishExternalDate" /> 
  <meta content="6d2d90d0-ba5c-4bbf-afe3-56f2c5aad2e4" name="jcr:predecessors" /> 
  <meta content="Activate" name="cq:lastReplicationAction" /> 
  <meta content="" name="jcr:baseVersion" /> 
  <meta content="true" name="jcr:isCheckedOut" /> 
  <meta content="/apps/help/templates/article-3" name="cq:template" /> 
  <meta content="/content/help/en/experience-manager/6-4/assets/morehelp/extending-assets;/content/help/en/experience-manager/6-4/assets/morehelp/extending-assets" name="moreHelpPaths" /> 
  <meta content="remove-legacypath-6-1" name="jcr:lastModifiedBy" /> 
  <meta content="2018-04-24T11:56:33.318-0400" name="cq:lastModified" /> 
  <meta content="Assets Proxy Development" name="seoTitle" /> 
  <meta content="2019-01-12T17:34:23.945-0500" name="acrolinxDate" /> 
  <meta content="yellow" name="acrolinxPageStatus" /> 
  <meta content="cmajumda@adobe.com" name="lr_lastReplicatedBy" /> 
  <meta content="mix:versionable" name="jcr:mixinTypes" /> 
  <meta content="/etc/designs/help" name="cq:designPath" /> 
  <meta content="63" name="acrolinxSentences" /> 
  <meta content="admin" name="jcr:createdBy" /> 
  <meta content="checked_not_improved" name="acrolinxStatus" /> 
  <meta content="2017-10-12T21:46:00.000-0400" name="qaDate" /> 
  <meta content="Guillaume Carlino" name="contentOwner" /> 
  <meta content="asgupta" name="acrolinxLastCheckedBy" /> 
  <meta content="http://acrolinx.corp.adobe.com:8031/output/en/proxy_krs_workflow_f3c2f2ccebf6138e_184_report.xml" name="acrolinxReportURL" /> 
  <meta content="" name="jcr:versionHistory" /> 
  <meta content="en_us" name="jcr:language" /> 
  <meta content="2017-10-31T16:34:21.002-0400" name="firstPublishExternalDate" /> 
  <meta content="2018-04-24T11:56:33.317-0400" name="locHandOffDate" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/ASSETS;topic_tags:extending-assets;content_type:reference" name="cq:tags" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/ASSETS" name="primaryProductTag" /> 
  <meta content="5d5eb334-bdf9-4593-a6bd-4767ad75f2e3" name="jcr:uuid" /> 
  <meta content="help/components/pages/article-3" name="sling:resourceType" /> 
  <meta content="A proxy is an AEM instance that uses proxy workers to process jobs. Learn how to configure an AEM proxy, supported operations, proxy components, and how to develop a custom proxy worker. " name="seoDescription" /> 
  <meta content="https://helpx.adobe.com/experience-manager/6-3/assets/using/proxy.html" name="publishExternalURL" /> 
  <meta content="2018-04-03T08:11:10.808-0400" name="cq:lastReplicated" /> 
  <meta content="" name="jcr:primaryType" /> 
  <meta content="2017-11-30T11:38:13.846-0500" name="publishExternalDate" /> 
  <meta content="carlino" name="cq:lastReplicatedBy" /> 
  <meta content="false" name="isReadyForLocalization" /> 
  <meta content="894" name="acrolinxWords" /> 
  <meta content="2017-11-30T11:38:13.846-0500" name="topicBrowsingSortDate" /> 
  <meta content="Assets Proxy Development" name="navTitle" /> 
  <meta content="msm-service" name="cq:lastModifiedBy" /> 
  <meta content="/content/docs/en/aem/6-3/develop/extending/assets/proxy" name="qaNotes" /> 
  <meta content="2017-10-12T21:46:58.665-0400" name="mwpw_migration_script_version" /> 
 </head> 
 <body> 
  <p>Adobe Experience Manager (AEM) Assets uses a proxy to distribute processing for certain tasks.</p> 
  <p>A proxy is a specific (and sometimes separate) AEM instance that uses proxy workers as processors responsible for handling a job and creating a result. A proxy worker can be used for a wide variety of tasks. In the case of an AEM Assets proxy this can be used for loading assets for rendering within AEM Assets. For example, the <a href="../../assets/using/indesign.md">IDS proxy worker</a> uses an InDesign Server to process files for use in AEM Assets.</p> 
  <p>When the proxy is a separate AEM instance this helps reduce the load on the AEM authoring instance(s). By default, AEM Assets executes the asset processing tasks in the same JVM (externalized via Proxy) to reduce the load on the AEM authoring instance.</p> 
  <h3>Proxy (HTTP Access)</h3> 
  <p>A proxy is available via the HTTP Servlet when it is configured to accept processing jobs at:</p> 
  <p> <span class="code">/libs/dam/cloud/proxy</span><br /> </p> 
  <p>This servlet creates a sling job from the posted parameters. This is then added to the proxy job queue and connected to the appropriate proxy worker.</p> 
  <h4>Supported Operations</h4> 
  <ul> 
   <li><span class="code">job</span><br /> <strong>Requirements</strong>: the parameter <span class="code">jobevent</span> must be set as a serialized value map. This is used to create an <span class="code">Event</span> for a job processor.<br /> <strong>Result</strong>: Adds a new job. If successful, a unique job id is returned.</li> 
  </ul> 
  <codeblock class="syntax shell">
    curl&amp;nbsp;-u&amp;nbsp;admin:admin&amp;nbsp;-F":operation=job"&amp;nbsp;-F"someproperty=xxxxxxxxxxxx"&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-F"jobevent=serialized&amp;nbsp;value&amp;nbsp;map"&amp;nbsp;http://localhost:4502/libs/dam/cloud/proxy 
  </codeblock> 
  <ul> 
   <li><span class="code">result</span><br /> <strong>Requirements</strong>: the parameter <span class="code">jobid</span> must be set.<br /> <strong>Result</strong>: Returns a JSON representation of the result Node as created by the job processor.</li> 
  </ul> 
  <codeblock class="syntax shell">
    curl&amp;nbsp;-u&amp;nbsp;admin:admin&amp;nbsp;-F":operation=result"&amp;nbsp;-F"jobid=xxxxxxxxxxxx"&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;http://localhost:4502&amp;nbsp;&amp;nbsp;&amp;nbsp;/libs/dam/cloud/proxy 
  </codeblock> 
  <ul> 
   <li><span class="code">resource</span><br /> <strong>Requirements</strong>: the parameter jobid must be set.<br /> <strong>Result</strong>: Returns a resource associated with the given job.</li> 
  </ul> 
  <codeblock class="syntax shell">
    curl&amp;nbsp;-u&amp;nbsp;admin:admin&amp;nbsp;-F":operation=resource"&amp;nbsp;-F"jobid=xxxxxxxxxxxx"&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-F"resourcePath=something.pdf"&amp;nbsp;http://localhost:4502/libs/dam/cloud/proxy 
  </codeblock> 
  <ul> 
   <li><span class="code">remove</span><br /> <strong>Requirements</strong>: the parameter jobid must be set.<br /> <strong>Results</strong>: Removes a job if found.</li> 
  </ul> 
  <codeblock class="syntax shell">
    curl&amp;nbsp;-u&amp;nbsp;admin:admin&amp;nbsp;-F":operation=remove"&amp;nbsp;-F"jobid=xxxxxxxxxxxx"&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;http://localhost:4502/libs/dam/cloud/proxy 
  </codeblock> 
  <h3>Proxy Worker</h3> 
  <p>A proxy worker is a processor responsible for handling a job and creating a result. Workers reside on the proxy instance and must implement <a href="http://sling.apache.org/site/eventing-and-jobs.html">sling JobProcessor</a> to be recognized as a proxy worker.<br /> </p> 
  <note> 
   <p>The worker must implement <a href="http://sling.apache.org/site/eventing-and-jobs.html">sling JobProcessor</a> to be recognized as a proxy worker.</p> 
  </note> 
  <h3>Client API</h3> 
  <note> 
   <p>Reference documentation for the proxy API is available under <a href="/sites/developing/using/reference-materials/javadoc/com/day/cq/dam/api/proxy/package-summary">com.day.cq.dam.api.proxy</a>.</p> 
  </note> 
  <p><span class="code"><a href="/sites/developing/using/reference-materials/javadoc/index">JobService</a></span> is available as an OSGi service that provides methods to create jobs, remove jobs and to get results from those jobs. The default implementation of this service (<span class="code">JobServiceImpl</span>) uses the HTTP client to communicate with the remote proxy servlet.</p> 
  <p>The following is an example of API usage:<br /> </p> 
  <codeblock gutter="true" class="syntax xml">
    @Reference&amp;nbsp;!!discoiqbr!!&amp;nbsp;JobService&amp;nbsp;proxyJobService;!!discoiqbr!!!!discoiqbr!!&amp;nbsp;//&amp;nbsp;to&amp;nbsp;create&amp;nbsp;a&amp;nbsp;new&amp;nbsp;job!!discoiqbr!!&amp;nbsp;final&amp;nbsp;Hashtable&amp;nbsp;props&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Hashtable();!!discoiqbr!!&amp;nbsp;props.put("someproperty",&amp;nbsp;"some&amp;nbsp;value");!!discoiqbr!!&amp;nbsp;props.put(JobUtil.PROPERTY_JOB_TOPIC,&amp;nbsp;"myworker/job");&amp;nbsp;//&amp;nbsp;this&amp;nbsp;is&amp;nbsp;an&amp;nbsp;identifier&amp;nbsp;of&amp;nbsp;the&amp;nbsp;worker!!discoiqbr!!&amp;nbsp;final&amp;nbsp;String&amp;nbsp;jobId&amp;nbsp;=&amp;nbsp;proxyJobService.addJob(props,&amp;nbsp;new&amp;nbsp;Asset[]{asset});!!discoiqbr!!!!discoiqbr!!&amp;nbsp;//&amp;nbsp;to&amp;nbsp;check&amp;nbsp;status&amp;nbsp;(returns&amp;nbsp;JobService.STATUS_FINISHED&amp;nbsp;or&amp;nbsp;JobService.STATUS_INPROGRESS)!!discoiqbr!!&amp;nbsp;int&amp;nbsp;status&amp;nbsp;=&amp;nbsp;proxyJobService.getStatus(jobId)!!discoiqbr!!!!discoiqbr!!&amp;nbsp;//&amp;nbsp;to&amp;nbsp;get&amp;nbsp;the&amp;nbsp;result!!discoiqbr!!&amp;nbsp;final&amp;nbsp;String&amp;nbsp;jsonString&amp;nbsp;=&amp;nbsp;proxyJobService.getResult(jobId);!!discoiqbr!!!!discoiqbr!!&amp;nbsp;//&amp;nbsp;to&amp;nbsp;remove&amp;nbsp;job&amp;nbsp;and&amp;nbsp;cleanup!!discoiqbr!!&amp;nbsp;proxyJobService.removeJob(jobId);!!discoiqbr!! 
  </codeblock> 
  <h3>Cloud Service Configurations</h3> 
  <note> 
   <p>Reference documentation for the proxy API is available under <a href="/sites/developing/using/reference-materials/javadoc/com/day/cq/dam/api/proxy/package-summary">com.day.cq.dam.api.proxy</a>.</p> 
  </note> 
  <p>Both proxy and proxy worker configurations are available via cloud services configurations as accessible from the AEM Assets <strong>Tools</strong> console or under:</p> 
  <p><span class="code"> /etc/cloudservices/proxy</span></p> 
  <p>Each proxy worker is expected to add a node under:</p> 
  <p> <span class="code">/etc/cloudservices/proxy</span></p> 
  <p>for worker specific configuration details (e.g. <span class="code">/etc/cloudservices/proxy/workername</span>)</p> 
  <note> 
   <p>See <a href="../../assets/using/indesign.md#configuringtheproxyworkerforindesignserver">Indesign Server Proxy Worker configuration</a> and <a href="../../sites/developing/using/extending-cloud-config.md">Cloud Services configuration</a> for more information.<br /> </p> 
  </note> 
  <p>The following is an example of API usage:<br /> </p> 
  <codeblock gutter="true" class="syntax xml">
    @Reference(policy&amp;nbsp;=&amp;nbsp;ReferencePolicy.STATIC)!!discoiqbr!!&amp;nbsp;ProxyConfig&amp;nbsp;proxyConfig;!!discoiqbr!!&amp;nbsp;!!discoiqbr!!&amp;nbsp;//&amp;nbsp;to&amp;nbsp;get&amp;nbsp;proxy&amp;nbsp;config!!discoiqbr!!&amp;nbsp;Configuration&amp;nbsp;cloudConfig&amp;nbsp;=&amp;nbsp;proxyConfig.getConfiguration();!!discoiqbr!!&amp;nbsp;final&amp;nbsp;String&amp;nbsp;value&amp;nbsp;=&amp;nbsp;cloudConfig.get("someProperty",&amp;nbsp;"defaultValue");!!discoiqbr!!!!discoiqbr!!&amp;nbsp;//&amp;nbsp;to&amp;nbsp;get&amp;nbsp;worker&amp;nbsp;config!!discoiqbr!!&amp;nbsp;Configuration&amp;nbsp;cloudConfig&amp;nbsp;=&amp;nbsp;proxyConfig.getConfiguration("workername");!!discoiqbr!!&amp;nbsp;final&amp;nbsp;String&amp;nbsp;value&amp;nbsp;=&amp;nbsp;cloudConfig.get("someProperty",&amp;nbsp;"defaultValue"); 
  </codeblock> 
  <h3>Developing a Customized Proxy Worker</h3> 
  <p>The <a href="../../assets/using/indesign.md">IDS proxy worker</a> is an example of a AEM Assets proxy worker that is already provided out-of-the-box to outsource the processing of Indesign assets.</p> 
  <p>You can also develop and configure your own AEM Assets proxy worker to create a specialized worker to dispatch and outsource your AEM Assets processing tasks.</p> 
  <p>Setting up your own custom proxy worker requires you to:</p> 
  <ul> 
   <li>Set up and implement (using Sling eventing):<br /> 
    <ul> 
     <li>a custom job topic</li> 
     <li>a custom job event handler</li> 
    </ul> </li> 
   <li>Then use the JobService API to: 
    <ul> 
     <li>dispatch your custom job to the proxy <br /> </li> 
     <li>manage your job</li> 
    </ul> </li> 
   <li>If you want to use the proxy from a workflow, you must implement a custom external step using the WorkflowExternalProcess API and the JobService API.</li> 
  </ul> 
  <p>The following diagram and steps detail how to proceed:</p> 
  <img imageRotate="0" src="assets/chlimage_1-250.png" /> 
  <note> 
   <p>In the following steps, Indesign equivalents are indicated as reference examples.</p> 
  </note> 
  <ol> 
   <li><p>A <a href="http://sling.apache.org/site/eventing-and-jobs.html">Sling job</a> is used, so you need to define a job topic for your use case.</p> <p>As an example, see <span class="code">IDSJob.IDS_EXTENDSCRIPT_JOB</span> for the IDS proxy worker.<br /> </p> </li> 
   <li><p>The external step is used to trigger the event and then wait until that is finished; this is done by polling on the id. You must develop your own step to implement new functionality.<br /> </p> <p>Implement a <span class="code">WorkflowExternalProcess</span>, then use the JobService API and your job topic to prepare a job event and dispatch it to the JobService (an OSGi service).<br /> </p> <p>As an example, see <span class="code">INDDMediaExtractProcess</span>.java for the IDS proxy worker.<br /> </p> </li> 
   <li><p>Implement a job handler for your topic. This handler requires development so that it performs your specific action and is considered to be the worker implementation.<br /> </p> <p>As an example, see <span class="code">IDSJobProcessor.java</span> for the IDS proxy worker.<br /> </p> </li> 
   <li><p>Make use of <span class="code">ProxyUtil.java</span> in dam-commons. This allows you to dispatch jobs to workers using the dam proxy.</p> </li> 
  </ol> 
  <note> 
   <p>What the AEM Assets proxy framework does not provide out-of-the-box is the pool mechanism.</p> 
   <p>The InDesign integration allows the access of a pool of indesign servers (IDSPool). This pooling is specific to Indesign integration and not part of the AEM Assets proxy framework.</p> 
  </note> 
  <note> 
   <p>Synchronization of Results:</p> 
   <p>With n instances using the same proxy, the processing result stays with the proxy. It is the job of the client (AEM Author) to request the result using the same unique job id as given to the client on job creation. The proxy simply gets the job done and keeps the result ready to be requested.</p> 
  </note> 
 </body> 
</html>