<?xml version="1.1" encoding="UTF-8" standalone="yes"?> 
<html> 
 <head> 
  <meta content="" name="jcr:baseVersion" /> 
  <meta content="Security Checklist" name="seoTitle" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/SITES" name="primaryProductTag" /> 
  <meta content="/apps/help/templates/article-3" name="cq:template" /> 
  <meta content="https://helpx.adobe.com/experience-manager/6-4/sites/administering/using/security-checklist.html" name="publishExternalURL" /> 
  <meta content="2018-11-15T06:23:45.901-0500" name="cq:lastModified" /> 
  <meta content="2017-10-12T21:46:00.000-0400" name="qaDate" /> 
  <meta content="remove-legacypath-6-1" name="jcr:lastModifiedBy" /> 
  <meta content="audience:administering" name="primaryAudienceTag" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/SITES;topic_tags:Security;content_type:reference" name="cq:tags" /> 
  <meta content="2018-04-03T07:06:51.805-0400" name="topicBrowsingSortDate" /> 
  <meta content="false" name="isReadyForLocalization" /> 
  <meta content="/content/help/en/experience-manager/6-4/sites/administering/morehelp/security;/content/help/en/experience-manager/6-4/sites/administering/morehelp/security" name="moreHelpPaths" /> 
  <meta content="Learn about the various security considerations when configuring and deploying AEM." name="seoDescription" /> 
  <meta content="sarchiz" name="cq:lastReplicatedBy" /> 
  <meta content="sarchiz" name="cq:lastModifiedBy" /> 
  <meta content="f5fa34fd-2d70-4879-aca5-27c2b1e7924a" name="jcr:uuid" /> 
  <meta content="Activate" name="cq:lastReplicationAction" /> 
  <meta content="true" name="jcr:isCheckedOut" /> 
  <meta content="" name="jcr:primaryType" /> 
  <meta content="2018-02-27T08:01:05.245-0500" name="jcr:created" /> 
  <meta content="2017-10-31T16:21:59.749-0400" name="firstPublishExternalDate" /> 
  <meta content="mix:versionable" name="jcr:mixinTypes" /> 
  <meta content="2017-10-12T21:46:58.665-0400" name="mwpw_migration_script_version" /> 
  <meta content="carlino@adobe.com" name="lr_lastReplicatedBy" /> 
  <meta content="2018-04-03T07:06:51.805-0400" name="publishExternalDate" /> 
  <meta content="2018-11-15T06:23:54.479-0500" name="cq:lastReplicated" /> 
  <meta content="85892a7d-a553-44ae-ba5c-6c72de87666a" name="jcr:predecessors" /> 
  <meta content="msm-service" name="contentOwner" /> 
  <meta content="admin" name="jcr:createdBy" /> 
  <meta content="2018-04-26T10:12:00.153-0400" name="locHandOffDate" /> 
  <meta content="help/components/pages/article-3" name="sling:resourceType" /> 
  <meta content="en_us" name="jcr:language" /> 
  <meta content="/content/docs/en/aem/6-3/administer/security/security-checklist" name="qaNotes" /> 
  <meta content="/etc/designs/help" name="cq:designPath" /> 
  <meta content="" name="jcr:versionHistory" /> 
  <meta content="Security Checklist" name="jcr:title" /> 
  <meta content="Security Checklist" name="navTitle" /> 
  <meta content="2018-04-03T07:06:51.805-0400" name="lastPublishExternalDate" /> 
 </head> 
 <body>  
  <p>This section deals with various steps that you should take to ensure that your AEM installation is secure when deployed. The checklist is meant to be applied from top to bottom.<br /> </p> 
  <note> 
   <p>Further information <a href="https://www.owasp.org/index.php/OWASP_Top_Ten_Project">is also available about the most dangerous security threats as published by Open Web Application Security Project (OWASP)</a>.</p> 
  </note> 
  <note> 
   <p>There are some additional <a href="../../../sites/developing/using/dev-guidelines-bestpractices.md#securityconsiderations">security considerations</a> applicable at the development phase.<br /> </p> 
  </note> 
  <h2>Main Security Measures</h2> 
  <h3>Run AEM in Production Ready Mode</h3> 
  <p>For more information, see <a href="../../../sites/administering/using/production-ready.md">Running AEM in Production Ready Mode</a>.</p> 
  <h3>Enable HTTPS for transport layer security</h3> 
  <p>Enabling the HTTPS transport layer on both author and publish instances is mandatory for having a secure instance.<br /> </p> 
  <note> 
   <p>See the <a href="../../../sites/deploying/using/config-ssl.md">Enabling HTTP Over SSL</a> section for more information.<br /> </p> 
  </note> 
  <h3>Install Security Hotfixes</h3> 
  <p>Ensure that you have installed the latest <a href="https://helpx.adobe.com/experience-manager/kb/aem63-available-hotfixes.html">Security Hotfixes provided by Adobe</a>.</p> 
  <h3>Change Default Passwords For the AEM and OSGi Console Admin Accounts</h3>  
  <p>Adobe strongly recommends that after installation you change the password for the privileged <a href="#changingthecqadminpassword"><strong>AEM</strong> <span class="code">admin</span> accounts</a> (on all instances).</p> 
  <p>These accounts include:<br /> </p> 
  <ul> 
   <li>The AEM <span class="code">admin</span> account<br /> Once you have changed the password for the AEM admin account, you will need to use the new password when accessing CRX.</li> 
   <li>The <span class="code">admin</span> password for the OSGi Web console<br /> This change will also be applied to the admin account used for accessing the Web console, so you will need to use the same password when accessing that.</li> 
  </ul> 
  <p>These two accounts use separate credentials and having distinct, strong password for each is vital to a secure deployment.<br /> </p> 
  <h4>Changing the AEM admin password</h4> 
  <p>The password for the AEM admin account can be changed via the <a href="../../../sites/administering/using/granite-user-group-admin.md">Granite Operations - Users</a> console.</p> 
  <p>Here you can edit the <span class="code">admin</span> account and <a href="../../../sites/administering/using/granite-user-group-admin.md#changingthepasswordforanexistinguser">change the password</a>.</p> 
  <note> 
   <p>Changing the admin account also changes the OSGi web console account. After changing the admin account, you should then change the OSGi account to something different. </p> 
  </note> 
  <h4>Importance of Changing the OSGi Web Console Password</h4> 
  <p>Aside from the AEM <span class="code">admin</span> account, failing to change the default password for the OSGi web console password can lead to:</p> 
  <ul> 
   <li>Exposure of the server with a default password during startup and shutdown (that can take minutes for large servers);</li> 
   <li>Exposure of the server when the repository is down/restarting bundle - and OSGI is running.</li> 
  </ul> 
  <p>For more information on changing the web console password, see <a href="../../../sites/administering/using/security-checklist.md#main-pars-title-11-iclxdv-refd">Changing the OSGi web console admin password</a> below.</p>    
  <h4>Changing the OSGi web console admin password</h4> 
  <p>You must also change the password used for accessing the Web console. This is done by configuring the following properties of the <a href="../../../sites/deploying/using/osgi-configuration-settings.md#apachefelixosgimanagementconsole">Apache Felix OSGi Management Console</a>:<br /> </p> 
  <p><strong>User Name</strong> and <strong>Password</strong>, the credentials for accessing the Apache Felix Web Management Console itself.<br /> The password must be changed after the initial installation to ensure the security of your instance.</p> 
  <p>To do this:</p> 
  <ol> 
   <li><p>Navigate to the web console at <span class="code">&amp;lt;server&amp;gt;:&amp;lt;port&amp;gt;/system/console/configMgr</span>.</p> </li> 
   <li><p>Navigate to<strong> Apache Felix OSGi Management Console</strong> and change the <strong>user name</strong> and <strong>password</strong>.</p> <img imageRotate="0" src="assets/chlimage_1-205.png" /></li> 
   <li><p>Click <strong>Save</strong>.</p> </li> 
  </ol> 
  <h3>Implement Custom Error Handler</h3> 
  <p>Adobe recommends to define custom error handler pages, especially for 404 and 500 HTTP Response codes in order to prevent information disclosure.</p> 
  <note> 
   <p>See <a href="https://helpx.adobe.com/experience-manager/kb/CustomErrorHandling.html">How can I create custom scripts or error handlers</a> knowledge base article for more details.<br /> </p> 
  </note> 
  <h3>Complete Dispatcher Security Checklist</h3> 
  <p>AEM Dispatcher is a critical piece of your infrastructure. Adobe strongly recommend that you complete the <a href="/content/help/en/experience-manager/dispatcher/using/security-checklist">dispatcher security checklist</a>.<br /> </p> 
  <note> 
   <p>Using the Dispatcher you must disable the ".form" selector.</p> 
  </note> 
  <h2>Verification Steps</h2> 
  <h3>Configure replication and transport users</h3> 
  <p>A standard installation of AEM specifies <span class="code">admin</span> as the user for transport credentials within the default <a href="../../../sites/deploying/using/replication.md">replication agents</a>. Also, the admin user is used to source the replication on the author system.</p> 
  <p>For security considerations, both should be changed to reflect the particular use case at hand, with the following two aspects in mind:</p> 
  <ul> 
   <li>The <strong>transport user</strong> should not be the admin user. Rather, set up a user on the publish system that has only access rights to the relevant portions of the publish system and use that user's credentials for the transport.<br /> <br /> You can start from the bundled replication-receiver user and configure this user's access rights to match your situation<br /> <br /> </li> 
   <li>The <strong>replication user</strong> or <strong>Agent User Id</strong> should also not be the admin user, but a user who can only see content that is supposed to be replicated. The replication user is used to collect the content to be replicated on the author system before it is sent to the publisher.<br /> <br /> </li> 
  </ul> 
  <h3>Check the Operations Dashboard Security Health Checks</h3> 
  <p>AEM 6 introduces the new Operations Dashboard, aimed at aiding system operators troubleshoot problems and monitor the health of an instance.</p> 
  <p>The dashboard also comes with a collection of security health checks. It is recommended you check the status of all the security health checks before going live with your production instance. For more information, consult the <a href="../../../sites/administering/using/operations-dashboard.md">Operations Dashboard documentation</a>.<br /> </p> 
  <h3>Check if Example Content is Present</h3> 
  <p>All example content and users (e.g. the Geometrixx project and its components) should be uninstalled and deleted completely on a productive system before making it publicly accessible.</p> 
  <note> 
   <p>The sample Geometrixx applications are removed if this instance is running in <a href="../../../sites/administering/using/production-ready.md">Production Ready Mode</a>. If, for any reason, this is not the case, you can uninstall the <span class="code">cq-geometrixx-all-pkg</span> package as described in <a href="../../../sites/administering/using/package-manager.md#uninstallingpackages">Uninstalling Packages</a>. You can then delete all geometrixx packages using the same user interface.<br /> </p> 
  </note> 
  <h3>Check if the CRX development bundles are present</h3> 
  <p>These development OSGi bundles should be uninstalled on both author and publish productive systems before making them accessible.</p> 
  <ul> 
   <li>Adobe CRXDE Support (com.adobe.granite.crxde-support)</li> 
   <li>Adobe Granite CRX Explorer (com.adobe.granite.crx-explorer)</li> 
   <li>Adobe Granite CRXDE Lite (com.adobe.granite.crxde-lite)</li> 
  </ul> 
  <h3>Check if the Sling development bundle is present</h3> 
  <p>The <a href="../../../sites/developing/using/aem-eclipse.md">AEM Developer Tools for Eclipse</a> deployes the Apache Sling Tooling Support Install (org.apache.sling.tooling.support.install).</p> 
  <p>This OSGi bundle should be uninstalled on both author and publish productive systems before making them accessible.</p> 
  <h3>Protect against Cross-Site Request Forgery</h3> 
  <h4>The CSRF Protection Framework</h4> 
  <p>AEM 6.1 ships with a mechanism that helps protect agains Cross-Site Request Forgery attacks, called the <strong>CSRF Protection Framework</strong>. For more information on how to use it, consult the <a href="../../../sites/developing/using/csrf-protection.md">documentation</a>.<br /> </p> 
  <h4>The Sling Referrer Filter</h4> 
  <p>To address known security issues with Cross-Site Request Forgery (CSRF) in CRX WebDAV and Apache Sling you need to add configurations for the Referrer filter in order to use it.</p> 
  <p>The referrer filter service is an OSGi service that allows you to configure:</p> 
  <ul> 
   <li>which http methods should be filtered</li> 
   <li>whether an empty referrer header is allowed<br /> </li> 
   <li>and a white list of servers to be allowed in addition to the server host.</li> 
  </ul> 
  <p>By default, all variations of localhost and the current host names the server is bound to are in the white list.<br /> </p> 
  <p>To configure the referrer filter service:<br /> </p> 
  <ol> 
   <li><p>Open the Apache Felix console (<strong>Configurations</strong>) at:<br /> <span class="code">http://&amp;lt;<i>server</i>&amp;gt;:&amp;lt;<i>port_number</i>&amp;gt;/system/console/configMgr</span><br /> </p> </li> 
   <li><p>Login as <span class="code">admin</span>.</p> </li> 
   <li><p>In the <strong>Configurations</strong> menu, select:</p>  </li> 
   <li><p>In the <span class="code">Allow Hosts</span> field, enter all hosts that are allowed as a referrer. Each entry needs to be of the form<br /> &amp;lt;protocol&amp;gt;://&amp;lt;server&amp;gt;:&amp;lt;port&amp;gt; <br /> For example:</p> 
    <ul> 
     <li> <span class="code">http://allowed.server:80</span> allows all requests from this server with the given port.</li> 
     <li>If you also want to allow https requests, you have to enter a second line.</li> 
     <li>If you allow all ports from that server you can use <span class="code">0</span> as the port number.<br /> <br /> </li> 
    </ul> </li> 
   <li><p>Check the <span class="code">Allow Empty</span> field, if you want to allow empty/missing referrer headers.<br /> </p> 
    <note> 
     <p>It is recommended to provide a referrer while using commandline tools such as <span class="code">cURL</span> instead of allowing an empty value as it might expose your system to CSRF attacks.</p> 
    </note></li> 
   <li><p>Edit the methods this filter should use for checks with the <span class="code">Filter Methods</span> field.<br /> <br /> </p> </li> 
   <li><p>Click <strong>Save</strong> to save your changes.<br /> <br /> </p> </li> 
  </ol>     
  <h3>OSGI Settings</h3>  
  <p>Some OSGI settings are set by default to allow easier debugging of the application. These need to be changed on your publish and author productive instances to avoid internal information leaking to the public.</p> 
  <note> 
   <p>All of the below settings with the exception of <strong>The Day CQ WCM Debug Filter</strong> are automatically covered by the <a href="../../../sites/administering/using/production-ready.md">Production Ready Mode</a>. Because of this, we recommend reviewing all the settings before deploying your instance in a productive environment.</p> 
  </note> 
  <p>For each of the following services the specified settings need to be changed:</p> 
  <ul> 
   <li><a href="../../../sites/deploying/using/osgi-configuration-settings.md#daycqhtmllibrarymanager">Adobe Granite HTML Library Manager</a>: 
    <ul> 
     <li>enable <strong>Minify</strong> (to remove CRLF and whitespace characters).</li> 
     <li>enable <strong>Gzip</strong> (to allow files to be gzipped and accessed with one request).</li> 
     <li>disable <strong>Debug</strong></li> 
     <li>disable <strong>Timing</strong></li> 
    </ul> </li> 
   <li><a href="../../../sites/deploying/using/osgi-configuration-settings.md#daycqwcmdebugfilter">Day CQ WCM Debug Filter</a>:<br /> 
    <ul> 
     <li>uncheck <strong>Enable</strong></li> 
    </ul> </li> 
   <li><a href="../../../sites/deploying/using/osgi-configuration-settings.md#daycqwcmfilter">Day CQ WCM Filter</a>: 
    <ul> 
     <li>on publish only, set <strong>WCM Mode</strong> to "disabled"<br /> </li> 
    </ul> </li> 
   <li><a href="../../../sites/deploying/using/osgi-configuration-settings.md#apacheslingjavascripthandler">Apache Sling Java Script Handler</a>: 
    <ul> 
     <li>disable <strong>Generate Debug Info</strong></li> 
    </ul> </li> 
   <li><a href="../../../sites/deploying/using/osgi-configuration-settings.md#apacheslingjspscripthandler">Apache Sling JSP Script Handler</a>:<br /> 
    <ul> 
     <li>disable <strong>Generate Debug Info</strong></li> 
     <li>disable <strong>Mapped Content</strong><br /> </li> 
    </ul> </li> 
  </ul> 
  <p>For further details see <a href="../../../sites/deploying/using/osgi-configuration-settings.md">OSGi Configuration Settings</a>.</p> 
  <p>When working with AEM there are several methods of managing the configuration settings for such services; see <a href="../../../sites/deploying/using/configuring-osgi.md">Configuring OSGi</a> for more details and the recommended practices.</p> 
  <h2>Further Readings</h2> 
  <h3>Mitigate Denial of Service (DoS) Attacks</h3> 
  <p>A denial of service (DoS) attack is an attempt to make a computer resource unavailable to its intended users. This is often done by overloading the resource; for example:</p> 
  <ul> 
   <li>With a flood of requests from an external source.</li> 
   <li>With a request for more information than the system can successfully deliver.<br /> For example, a JSON representation of the entire repository.<br /> </li> 
   <li>By requesting a content page with an unlimited number of URLs, The URL can include a handle, some selectors, an extension, and a suffix - any of which can be modified.<br /> For example, <span class="code">.../en.html</span> can also be requested as:<span class="code"></span> 
    <ul> 
     <li><span class="code">.../en.ExtensionDosAttack</span></li> 
     <li><span class="code">.../en.SelectorDosAttack.html</span></li> 
     <li><span class="code">.../en.html/SuffixDosAttack</span></li> 
    </ul> All valid variations (e.g. return a <span class="code">200</span> response and are configured to be cached) will be cached by the dispatcher, eventually leading to a full file system and no service for further requests.</li> 
  </ul> 
  <p>There are many points of configuration for preventing such attacks, here we only discuss those directly related to AEM.</p> 
  <p><strong><u>Configuring Sling to Prevent DoS</u></strong></p> 
  <p>Sling is <i>content-centric</i>. This means that processing is focused on the content as each (HTTP) request is mapped onto content in the form of a JCR resource (a repository node):</p> 
  <ul> 
   <li>The first target is the resource (JCR node) holding the content.</li> 
   <li>Secondly, the renderer, or script, is located from the resource properties in combination with certain parts of the request (e.g. selectors and/or the extension).</li> 
  </ul> 
  <note> 
   <p>This is covered in more detail under <a href="../../../sites/developing/using/the-basics.md#slingrequestprocessing">Sling Request Processing</a>.</p> 
  </note> 
  <p>This approach makes Sling very powerful and very flexible, but as always it is the flexibility that needs to be carefully managed.</p> 
  <p>To help prevent DoS misuse you can:<br /> </p> 
  <ol> 
   <li><p>Incorporate controls at the application level; due to the number of variations possible a default configuration is not feasible.</p> <p>In your application you should:</p> 
    <ul> 
     <li>Control the selectors in your application, so that you <i>only</i> serve the explicit selectors needed and return <span class="code">404</span> for all others.</li> 
     <li>Prevent the output of an unlimited number of content nodes.</li> 
    </ul> </li> 
   <li><p>Check the configuration of the default renderers, which can be a problem area.</p> 
    <ul> 
     <li>In particular the JSON renderer which can transverse the tree structure over multiple levels.<br /> For example, the request:<br /> <span class="code">http://localhost:4502/.json</span><br /> could dump the whole repository in a JSON representation. This would cause significant server problems. For this reason Sling sets a limit on the number of maximum results. To limit the depth of the JSON rendering you can set the value for:<br /> <strong>JSON Max results</strong> (<span class="code">json.maximumresults</span>)<br /> in the configuration for the <a href="../../../sites/deploying/using/osgi-configuration-settings.md#apacheslinggetservlet">Apache Sling GET Servlet</a>. When this limit is exceeded the rendering will be collapsed. The default value for Sling within AEM is <span class="code">200</span>.<br /> </li> 
     <li>As a preventive measure disable the other default renderers (HTML, plain text, XML). Again by configuring the <a href="../../../sites/deploying/using/osgi-configuration-settings.md#apacheslinggetservlet">Apache Sling GET Servlet</a>.</li> 
    </ul> 
    <note> 
     <p>Do not disable the JSON renderer, this is required for the normal operation of AEM.<br /> </p> 
    </note></li> 
   <li><p>Use a firewall to filter access to your instance.</p> 
    <ul> 
     <li>The use of an operating system level firewall is necessary in order to filter access to points of your instance that might lead to denial of service attacks if left unprotected.</li> 
    </ul> </li> 
  </ol> 
  <p><u><strong>Mitigate Against DoS Caused by Using Form Selectors</strong></u></p> 
  <note> 
   <p>This mitigation should be performed only on AEM environments that are not using Forms.<br /> </p> 
  </note> 
  <p>Since AEM does not provide out of the box indexes for the <span class="code">FormChooserServlet</span>, using form selectors in queries will trigger a costly repository traversal, usually grinding the AEM instance to a halt. Form selectors can be detected by the presence of the <strong>*.form.*</strong> string in queries.</p> 
  <p>In order to mitigate this, please follow the below steps:<br /> </p> 
  <ol> 
   <li><p>Go to the Web Console by pointing your browser to <em>http://serveraddress:serverport/system/console/configMgr</em><br /> </p> </li> 
   <li><p>Search for <strong>Day CQ WCM Form Chooser Servlet</strong></p> </li> 
   <li><p>After you click on the entry, disable the <strong>Advanced Search Require</strong> in the following window.<br /> </p> </li> 
   <li><p>Click <strong>Save</strong>.</p> </li> 
  </ol> 
  <h3>Disable WebDAV</h3>  
  <p>WebDAV should be disabled on both the author and publish environments. This can be done by stopping the appropriate OSGi bundles.</p> 
  <ol> 
   <li><p>Connect to the <strong>Felix Management Console</strong> running on:</p>  <p>For example <span class="code">http://localhost:4503/system/console/bundles</span>.</p> </li> 
   <li><p>In the list of bundles, find the bundle named:</p>  </li> 
   <li><p>Click the stop button (in the Actions column) to stop this bundle.<br /> </p> </li> 
   <li><p>Again in the list of bundles, find the bundle named:</p>  </li> 
   <li><p>Click the stop button to stop this bundle.<br /> </p> 
    <note> 
     <p>A restart of AEM is not required.<br /> </p> 
    </note></li> 
  </ol> 
  <h3>Verify That You Are Not Disclosing Personally Identifiable Information In the Users Home Path</h3> 
  <p>It is important you protect your users by making sure that you do not expose any personally indetifiable information in the repository users home path.</p> 
  <p>Since AEM 6.1, the way user (also known as authorizable) ID node names are stored is changed with a new implementation of the <span class="code">AuthorizableNodeName</span> interface. The new interface will no longer expose the user ID in the node name, but will generate a random name instead.</p> 
  <p>No configuration needs to be performed in order to enable it, as this is now the default way of generating authorizable IDs in AEM.</p> 
  <p>Although not recommended, you can disable it in case you need the old implementation for backwards compatibility with your exsiting applications. In order to do this, you need to:</p> 
  <ol> 
   <li><p>Go to the Web Console and remove the<strong> org.apache.jackrabbit.oak.security.user.RandomAuthorizableNodeName</strong> entry from property <strong>requiredServicePids</strong> in <strong>Apache Jackrabbit Oak SecurityProvider</strong>. </p> <p>You can also find the Oak Security Provider by looking for the <strong>org.apache.jackrabbit.oak.security.internal.SecurityProviderRegistration</strong> PID in the OSGi configurations.<br /> </p> </li> 
   <li><p>Delete the <strong>Apache Jackrabbit Oak Random Authorizable Node Name</strong> OSGi configuration from the Web Console.</p> <p>For easier lookup, note that the PID for this configuration is <strong>org.apache.jackrabbit.oak.security.user.RandomAuthorizableNodeName</strong>.<br /> </p> </li> 
  </ol> 
  <note> 
   <p>For more information, see the Oak documentation on <a href="https://jackrabbit.apache.org/oak/docs/security/user/authorizablenodename.html">Authorizable Node Name Generation</a>.</p> 
  </note> 
  <h3>Prevent Clickjacking</h3>  
  <p>To prevent clickjacking we recommend that you configure your webserver to provide the <span class="code">X-FRAME-OPTIONS</span> HTTP header set to <span class="code">SAMEORIGIN</span>.<br /> <br /> For more <a href="https://www.owasp.org/index.php/Clickjacking">information on clickjacking please see the OWASP site</a>.<br /> </p> 
  <h3>Make Sure You Properly Replicate Encryption Keys When Needed</h3> 
  <p>Certain AEM features and authentication schemes require that you replicate your encryption keys across all AEM instances.</p> 
  <p>Before you do this, please take note that key replication is done differently between versions because the way in which keys are stored is different between 6.3 and older versions.</p> 
  <p>See below for more information.</p> 
  <h4>Replicating Keys for AEM 6.3</h4> 
  <p>Whereas in older versions the replication keys were stored in the repository, beginning with AEM 6.3 they are stored on the filesystem.</p> 
  <p>Therefore, in order to replicate your keys across instances you need to copy them from the source instance to the target instances' location on the filesystem.</p> 
  <p>More specifically, you need to:</p> 
  <ol> 
   <li><p>Access the AEM instance, typically an author instance, that contains the key material to copy;</p> </li> 
   <li><p>Locate the com.adobe.granite.crypto.file bundle in the local file system. For example, under this path:</p> 
    <ul> 
     <li><span class="code">&amp;lt;author-aem-install-dir&amp;gt;/crx-quickstart/launchpad/felix/bundle21</span></li> 
    </ul> <p>The <span class="code">bundle.info</span> file inside each folder will identify the bundle name.</p> </li> 
   <li><p>Navigate to the data folder. For example:<br /> </p> 
    <ul> 
     <li><span class="code">&amp;lt;author-aem-install-dir&amp;gt;/crx-quickstart/launchpad/felix/bundle21/data</span></li> 
    </ul> </li> 
   <li><p>Copy the HMAC and master files.</p> </li> 
   <li><p>Then, go to the target instance you want to duplicate the HMAC key to, and navigate to the data folder. For example:</p> 
    <ul> 
     <li><span class="code">&amp;lt;publish-aem-install-dir&amp;gt;/crx-quickstart/launchpad/felix/bundle21/data</span></li> 
    </ul> </li> 
   <li><p>Paste the two files you previously copied.</p> </li> 
   <li><p><a href="../../../communities/using/deploy-communities.md#refreshthegranitecryptobundle">Refresh the Crypto Bundle</a> if the target instance is already running.</p> </li> 
   <li><p>Repeat the above steps for all instances you want to replicate the key to.</p> </li> 
  </ol> 
  <note> 
   <p>You can revert to the pre 6.3 method of storing keys by adding the below parameter when you first install AEM:</p> 
   <p><span class="code">-Dcom.adobe.granite.crypto.file.disable=true</span></p> 
  </note> 
  <h4>Replicating Keys for AEM 6.2 and Older Versions</h4> 
  <p>In AEM 6.2 and older versions, the keys are stored in the repository under the <span class="code">/etc/key</span> node.</p> 
  <p>The recommended way to securely replicate the keys across your instances is to only replicate this node. You can selectively replicate nodes via CRXDE Lite:</p> 
  <ol> 
   <li><p>Open CRXDE Lite by going to <i>http://serrveraddress:4502/crx/de/index.jsp</i></p> </li> 
   <li><p>Select the <span class="code">/etc/key</span> node.<span class="code"></span></p> </li> 
   <li><p>Go to the <strong>Replication</strong> tab.</p> </li> 
   <li><p>Press the <strong>Replication</strong> button.</p> </li> 
  </ol> 
  <h3>Perform a Penetration Test</h3> 
  <p>Adobe strongly recommends to perform a penetration test of your AEM infrastructure before going on production.<br /> </p> 
  <h3>Development Best Practices</h3> 
  <p>It is critical that new development are following the <a href="../../../sites/developing/using/security.md">Security Best Practices</a> to ensure your AEM environement stays safe.</p> 
 </body> 
</html>