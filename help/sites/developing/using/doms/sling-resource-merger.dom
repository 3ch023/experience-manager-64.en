<?xml version="1.1" encoding="UTF-8" standalone="yes"?> 
<html> 
 <head> 
  <meta content="" name="jcr:versionHistory" /> 
  <meta content="" name="jcr:baseVersion" /> 
  <meta content="true" name="jcr:isCheckedOut" /> 
  <meta content="audience:developing" name="primaryAudienceTag" /> 
  <meta content="2018-04-03T09:01:15.861-0400" name="cq:lastReplicated" /> 
  <meta content="2017-10-12T21:46:58.665-0400" name="mwpw_migration_script_version" /> 
  <meta content="2017-12-06T06:15:18.322-0500" name="topicBrowsingSortDate" /> 
  <meta content="Using the Sling Resource Merger in AEM" name="navTitle" /> 
  <meta content="mix:versionable" name="jcr:mixinTypes" /> 
  <meta content="https://helpx.adobe.com/experience-manager/6-3/sites/developing/using/sling-resource-merger.html" name="publishExternalURL" /> 
  <meta content="help/components/pages/article-3" name="sling:resourceType" /> 
  <meta content="/content/docs/en/aem/6-3/develop/platform/sling-resource-merger" name="qaNotes" /> 
  <meta content="2017-12-07T19:01:28.237-0500" name="jcr:created" /> 
  <meta content="2018-05-08T12:45:12.155-0400" name="cq:lastModified" /> 
  <meta content="en_us" name="jcr:language" /> 
  <meta content="admin" name="jcr:createdBy" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/SITES" name="primaryProductTag" /> 
  <meta content="" name="jcr:primaryType" /> 
  <meta content="2017-10-31T16:16:17.815-0400" name="firstPublishExternalDate" /> 
  <meta content="Using the Sling Resource Merger in AEM" name="jcr:title" /> 
  <meta content="false" name="isReadyForLocalization" /> 
  <meta content="2017-12-06T06:15:18.322-0500" name="lastPublishExternalDate" /> 
  <meta content="carlino" name="cq:lastReplicatedBy" /> 
  <meta content="2017-10-12T21:46:58.665-0400" name="qaDate" /> 
  <meta content="/apps/help/templates/article-3" name="cq:template" /> 
  <meta content="bohnert@adobe.com" name="lr_lastReplicatedBy" /> 
  <meta content="The Sling Resource Merger provides services to access and merge resources" name="seoDescription" /> 
  <meta content="bohnert" name="cq:lastModifiedBy" /> 
  <meta content="b2f68afb-b76e-4abf-9c19-94c0142bf41b" name="jcr:predecessors" /> 
  <meta content="2017-12-06T06:15:18.322-0500" name="publishExternalDate" /> 
  <meta content="70fe086c-e82f-4ce8-9e64-b8abeb8fb744" name="jcr:uuid" /> 
  <meta content="Using the Sling Resource Merger in AEM" name="seoTitle" /> 
  <meta content="/etc/designs/help" name="cq:designPath" /> 
  <meta content="Activate" name="cq:lastReplicationAction" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/SITES;topic_tags:platform;content_type:reference" name="cq:tags" /> 
  <meta content="Guillaume Carlino" name="contentOwner" /> 
  <meta content="/content/help/en/experience-manager/6-4/sites/developing/morehelp/platform;/content/help/en/experience-manager/6-4/sites/developing/morehelp/platform" name="moreHelpPaths" /> 
  <meta content="2018-05-08T12:45:12.153-0400" name="locHandOffDate" /> 
 </head> 
 <body>  
  <h3>Purpose</h3> 
  <p>The Sling Resource Merger provides services to access and merge resources. It provides diff (differencing) mechanisms for both:</p> 
  <ul> 
   <li><strong><a href="../../../sites/developing/using/overlays.md">Overlays</a></strong> of resources using the <a href="../../../sites/developing/using/overlays.md#configuringthesearchpaths">configured search paths</a>.</li> 
   <li><strong>Overrides</strong> of component dialogs for the touch-enabled UI (<span class="code">cq:dialog</span>), using the resource type hierarchy (by means of the property <span class="code">sling:resourceSuperType</span>).</li> 
  </ul> 
  <p>With the Sling Resource Merger, the overlay/override resources and/or properties are merged with the original resources/properties:</p> 
  <ul> 
   <li>The content of the customized definition has a higher priority than that of the original (i.e. it <em>overlays </em>or<em> overrides</em> it).<br /> </li> 
   <li>Where necessary, <a href="#properties">properties</a> defined in the customization<span class="code"></span>, indicate how content merged from the original is to be used.</li> 
  </ul> 
  <note> 
   <p>The Sling Resource Merger and related methods can only be used with <a href="/sites/developing/using/reference-materials/granite-ui/api/index">Granite</a>. This also means that it is only appropriate for the stndard, touch-enabled UI; in particular overrides defined in this manner are only applicable for the touch-enabled dialog of a component.<br /> </p> 
   <p>Overlays/overrides for other areas (including other aspects of a touch-enabled component or the classic UI) involve copying the appropriate node and structure from the original to where the customization will be defined.</p> 
  </note> 
  <h3>Goals for AEM</h3> 
  <p>The goals for using the Sling Resource Merger in AEM are to:</p> 
  <ul> 
   <li>ensure that customization changes are not made in <span class="code">/libs</span>.</li> 
   <li>reduce the structure that is replicated from <span class="code">/libs</span>.<br /> When using the Sling Resource Merger it is not recommended to copy the entire structure from <span class="code">/libs</span> as this would result in too much information being held in the customization (usually <span class="code">/apps</span>). Duplicating information unnecessarily increases the chance of problems when the system in upgraded in any way.</li> 
  </ul> 
  <note> 
   <p>Overrides are not dependent on the search paths, they use the property <span class="code">sling:resourceSuperType</span> to make the connection.</p> 
   <p>However, overrides are often defined under <span class="code">/apps</span>, as best practice in AEM is to define customizations under <span class="code">/apps</span>; this is because you must not change anything under <span class="code">/libs</span>.</p> 
  </note> 
  <note> 
   <p>You <i><strong>must</strong></i> not change anything in the <span class="code">/libs</span> path.</p> 
   <p>This is because the content of <span class="code">/libs</span> is overwritten the next time you upgrade your instance (and may well be overwritten when you apply either a hotfix or feature pack).</p> 
   <p>The recommended method for configuration and other changes is:</p> 
   <ol> 
    <li>Recreate the required item (i.e. as it exists in <span class="code">/libs</span>) under <span class="code">/apps</span><br /> </li> 
    <li>Make any changes within <span class="code">/apps</span></li> 
   </ol> 
  </note> 
  <h3>Properties</h3> 
  <p>The resource merger provides the following properties:</p> 
  <ul> 
   <li><span class="code">sling:hideProperties</span> (<span class="code">String</span> or <span class="code">String[]</span>)<br /> Specifies the property, or list of properties, to hide.<br /> The wildcard <span class="code">*</span> hides all.<br /> </li> 
   <li><span class="code">sling:hideResource</span> (<span class="code">Boolean</span>)<br /> Indicates whether the resources should be completely hidden, including its children.<br /> <span class="code"></span></li> 
   <li><span class="code">sling:hideChildren</span> (<span class="code">String</span> or <span class="code">String[]</span>)<br /> Contains the child node, or list of child nodes, to hide. The properties of the node will be maintained.<br /> The wildcard <span class="code">*</span> hides all.</li> 
   <li><span class="code">sling:orderBefore</span> (<span class="code">String</span>)<br /> Contains the name of the sibling node that the current node should be positioned in front of.</li> 
  </ul> 
  <p>These properties affect how the corresponding/original resources/properties (from <span class="code">/libs</span>) are used by the overlay/override (often in <span class="code">/apps</span>).<br /> </p> 
  <h3>Creating the Structure</h3> 
  <p>To create an overlay or override you need to recreate the original node, with the equivalent structure, under the destination (usually <span class="code">/apps</span>). For example:</p> 
  <ul> 
   <li>Overlay 
    <ul> 
     <li>The definition of the navigation entry for the Sites console, as shown in the rail is defined at:<br /> <span class="code">/libs/cq/core/content/nav/sites/jcr:title</span></li> 
     <li>To overlay this, create the following node:<br /> <span class="code">/apps/cq/core/content/nav/sites</span><br /> Then update the property <span class="code">jcr:title</span> as required.</li> 
    </ul> </li> 
   <li>Override 
    <ul> 
     <li>The definition of the touch-enabled dialog for the Texts console, is defined at:<br /> <span class="code">/libs/foundation/components/text/cq:dialog</span></li> 
     <li>To override this, create the following node - for example:<br /> <span class="code">/apps/the-project/components/text/cq:dialog</span></li> 
    </ul> </li> 
  </ul> 
  <p>To create either of these you only need to recreate the skeleton structure. To simplify the recreation of the structure all intermediatry nodes can be of type <span class="code">nt:unstructured</span> (they do not have to reflect the original node type; for example, in <span class="code">/libs</span>). </p> 
  <p>So in the above overlay example, the following nodes are needed:</p> 
  <codeblock class="syntax shell">
    /apps!!discoiqbr!!&amp;nbsp;&amp;nbsp;/cq!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/core!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/content!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/nav!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/sites 
  </codeblock> 
  <note> 
   <p>When using the Sling Resource Merger (i.e. when dealing with the standard, touch-enabled UI) it is not recommended to copy the entire structure from <span class="code">/libs</span> as it would result in too much information being held in <span class="code">/apps</span>. This can cause problems when the system in upgraded in any way.<br /> </p> 
  </note> 
  <h3>Use Cases</h3> 
  <p>These, in conjunction with standard functionality, enable you to:</p> 
  <ul> 
   <li> <p>The property does not exist in the <span class="code">/libs</span> definition, but is required in the <span class="code">/apps</span> overlay/override.</p> 
    <ol> 
     <li>Create the corresponding node within <span class="code">/apps</span></li> 
     <li>Create the new property on this node<span class="code"></span></li> 
    </ol> </li> 
   <li> <p>The property is defined in <span class="code">/libs</span>, but a new value is required in the <span class="code">/apps</span> overlay/override.</p> 
    <ol> 
     <li>Create the corresponding node within <span class="code">/apps</span></li> 
     <li>Create the matching property on this node (under /<span class="code">apps</span>)<br /> 
      <ul> 
       <li>The property will have a priority based on the Sling Resource Resolver configuration.</li> 
       <li>Changing the property type is supported.<br /> If you use a property type different to the one used in <span class="code">/libs</span>, then the property type you define will be used.</li> 
      </ul> </li> 
    </ol> 
    <note> 
     <p>Changing the property type is supported.</p> 
    </note></li> 
   <li> <p>By default, auto-created properties (such as <span class="code">jcr:primaryType</span>) are not subject to an overlay/override to ensure that the node type currently under <span class="code">/libs</span> is respected. To impose an overlay/override you have to recreate the node in <span class="code">/apps</span>, explicitly hide the property and redefine it:</p> 
    <ol> 
     <li>Create the corresponding node under <span class="code">/apps</span> with the desired <span class="code">jcr:primaryType</span></li> 
     <li>Create the property <span class="code">sling:hideProperties</span> on that node, with the value set to that of the auto-created property; for example, <span class="code">jcr:primaryType</span><br /> This property, defined under <span class="code">/apps</span>, will now take priority over the one defined under <span class="code">/libs</span></li> 
    </ol> </li> 
   <li> <p>The node and its children are defined in <span class="code">/libs</span>, but a new configuration is required in the <span class="code">/apps</span> overlay/override.</p> 
    <ol> 
     <li>Combine the actions of: 
      <ol> 
       <li>Hide children of a node (keeping the properties of the node)</li> 
       <li>Redefine the property/properties</li> 
      </ol> </li> 
    </ol> </li> 
   <li> <p>The property is defined in <span class="code">/libs</span>, but not required in the <span class="code">/apps</span> overlay/override.</p> 
    <ol> 
     <li>Create the corresponding node within <span class="code">/apps</span></li> 
     <li>Create a property <span class="code">sling:hideProperties</span> of type <span class="code">String</span> or <span class="code">String[]</span>. Use this specify the properties to be hidden/ignored. Wildcards can also be used. For example:<br /> 
      <ul> 
       <li><span class="code">*</span></li> 
       <li><span class="code">["*"]</span></li> 
       <li><span class="code">jcr:title</span></li> 
       <li><span class="code">["jcr:title", "jcr:description"]</span></li> 
      </ul> </li> 
    </ol> </li> 
   <li> <p>The node and its children are defined in <span class="code">/libs</span>, but not required in the <span class="code">/apps</span> overlay/override.</p> 
    <ol> 
     <li>Create the corresponding node under /apps</li> 
     <li>Create a property <span class="code">sling:hideResource</span><br /> 
      <ul> 
       <li>type: <span class="code">Boolean</span><br /> </li> 
       <li>value: <span class="code">true</span></li> 
      </ul> </li> 
    </ol> </li> 
   <li> <p>The node, its properties and its children are defined in <span class="code">/libs</span>. The node and its properties are required in the <span class="code">/apps</span> overlay/override, but some or all of the child nodes are not required in the <span class="code">/apps</span> overlay/override.</p> 
    <ol> 
     <li>Create the corresponding node under <span class="code">/apps</span></li> 
     <li>Create the property <span class="code">sling:hideChildren</span>: 
      <ul> 
       <li>type: <span class="code">String[]</span></li> 
       <li>value: a list of the child nodes (as defined in <span class="code">/libs</span>) to hide/ignore</li> 
      </ul> The wildcard * can be used to hid/ignore all child nodes.</li> 
    </ol> </li> 
   <li> <p>The node and its siblings are defined in <span class="code">/libs</span>. A new position is required so the node is recreated in the <span class="code">/apps</span> overlay/override, where the new position is defined in reference to the appropriate sibling node in <span class="code">/libs</span>.</p> 
    <ul> 
     <li>Use the <span class="code">sling:orderBefore</span> property:<br /> 
      <ol> 
       <li>Create the corresponding node under <span class="code">/apps</span></li> 
       <li>Create the property <span class="code">sling:orderBefore</span>:<br /> This specifies the node (as in <span class="code">/libs</span>) that the current node should be positioned before:<br /> 
        <ul> 
         <li>type: <span class="code">String</span></li> 
         <li>value: <span class="code">&amp;lt;<i>before-SiblingName</i>&amp;gt;</span></li> 
        </ul> </li> 
      </ol> </li> 
    </ul> </li> 
  </ul> 
  <h3>Invoking the Sling Resource Merger from your code</h3> 
  <p>The Sling Resource Merger includes two custom resource providers - one for overlays and another for overrides. Each of these can be can invoked within your code by using a mount point:</p> 
  <note> 
   <p>When accessing your resource it is recommended to use the appropriate mount point. </p> 
   <p>This ensures that the Sling Resource Merger is invoked and the fully merged resource returned (reducing the structure that needs to be replicated from <span class="code">/libs</span>).</p> 
  </note> 
  <ul> 
   <li>Overlay: 
    <ul> 
     <li>purpose: merge resources based on their search path<br /> </li> 
     <li>mount point:<span class="code"> /mnt/overlay</span></li> 
     <li>usage:<span class="code"> mount point + relative path</span></li> 
     <li>example: 
      <ul> 
       <li><span class="code">getResource('/mnt/overlay' + '&amp;lt;<i>relative-path-to-resource</i>&amp;gt;');</span></li> 
      </ul> </li> 
    </ul> </li> 
   <li>Override: 
    <ul> 
     <li>purpose: merge resources based on their super type<br /> </li> 
     <li>mount point:<span class="code"> /mnt/overide</span></li> 
     <li>usage:<span class="code"> mount point + absolute path</span></li> 
     <li>example: 
      <ul> 
       <li><span class="code">getResource('/mnt/override' + '&amp;lt;<i>absolute-path-to-resource</i>&amp;gt;');</span></li> 
      </ul> </li> 
    </ul> </li> 
  </ul> 
  <h3>Example of Usage</h3> 
  <p>Some examples are covered:</p> 
  <ul> 
   <li>Overlay: 
    <ul> 
     <li><a href="../../../sites/developing/using/customizing-consoles-touch.md">Customizing the Consoles</a></li> 
     <li><a href="../../../sites/developing/using/customizing-page-authoring-touch.md">Customizing Page Authoring</a></li> 
    </ul> </li> 
   <li>Override: 
    <ul> 
     <li><a href="../../../sites/developing/using/page-properties-views.md#configuringyourpageproperties">Configuring your Page Properties</a></li> 
    </ul> </li> 
  </ul> 
 </body> 
</html>