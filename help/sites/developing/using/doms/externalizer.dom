<?xml version="1.1" encoding="UTF-8" standalone="yes"?> 
<html> 
 <head> 
  <meta content="" name="jcr:versionHistory" /> 
  <meta content="help/components/pages/article-3" name="sling:resourceType" /> 
  <meta content="true" name="jcr:isCheckedOut" /> 
  <meta content="Guillaume Carlino" name="contentOwner" /> 
  <meta content="2017-10-31T16:16:42.909-0400" name="publishExternalDate" /> 
  <meta content="2017-10-31T16:16:42.909-0400" name="topicBrowsingSortDate" /> 
  <meta content="2017-10-12T21:46:58.665-0400" name="mwpw_migration_script_version" /> 
  <meta content="Activate" name="cq:lastReplicationAction" /> 
  <meta content="admin" name="jcr:createdBy" /> 
  <meta content="2017-10-12T21:46:58.665-0400" name="qaDate" /> 
  <meta content="/apps/help/templates/article-3" name="cq:template" /> 
  <meta content="a443fdd4-6006-4f6d-a869-a6c031a61fcf" name="jcr:uuid" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/SITES" name="primaryProductTag" /> 
  <meta content="en_us" name="jcr:language" /> 
  <meta content="Externalizing URLs" name="seoTitle" /> 
  <meta content="2017-10-31T16:16:42.909-0400" name="lastPublishExternalDate" /> 
  <meta content="2018-04-03T09:00:43.659-0400" name="cq:lastReplicated" /> 
  <meta content="false" name="isReadyForLocalization" /> 
  <meta content="2018-05-08T12:43:29.238-0400" name="cq:lastModified" /> 
  <meta content="2017-10-31T16:16:42.909-0400" name="firstPublishExternalDate" /> 
  <meta content="b9d9979c-d71d-4d93-b060-e8f76892b02f" name="jcr:predecessors" /> 
  <meta content="audience:developing" name="primaryAudienceTag" /> 
  <meta content="Externalizing URLs" name="navTitle" /> 
  <meta content="Externalizing URLs" name="jcr:title" /> 
  <meta content="2018-05-08T12:43:29.236-0400" name="locHandOffDate" /> 
  <meta content="" name="jcr:baseVersion" /> 
  <meta content="/content/docs/en/aem/6-3/develop/platform/externalizer" name="qaNotes" /> 
  <meta content="carlino" name="cq:lastModifiedBy" /> 
  <meta content="" name="jcr:primaryType" /> 
  <meta content="/etc/designs/help" name="cq:designPath" /> 
  <meta content="https://helpx.adobe.com/experience-manager/6-3/sites/developing/using/externalizer.html" name="publishExternalURL" /> 
  <meta content="carlino" name="cq:lastReplicatedBy" /> 
  <meta content="mix:versionable" name="jcr:mixinTypes" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/SITES;topic_tags:platform;content_type:reference" name="cq:tags" /> 
  <meta content="remove-legacypath-6-1" name="jcr:lastModifiedBy" /> 
  <meta content="/content/help/en/experience-manager/6-4/sites/developing/morehelp/platform;/content/help/en/experience-manager/6-4/sites/developing/morehelp/platform" name="moreHelpPaths" /> 
  <meta content="wmyersta@adobe.com" name="lr_lastReplicatedBy" /> 
  <meta content="2017-12-01T19:04:34.699-0500" name="jcr:created" /> 
  <meta content="The Externalizer is an OSGI service that allows you to programmatically transform a resource path into an external and absolute URL" name="seoDescription" /> 
 </head> 
 <body> 
  <p>In AEM, the <strong>Externalizer</strong> is an OSGI service that allows you to programmatically transform a resource path (e.g. <span class="code">/path/to/my/page</span>) into an external and absolute URL (for example, <span class="code">http://www.mycompany.com/path/to/my/page</span>) by prefixing the path with a pre-configured DNS.<br /> </p> 
  <p>Because an instance can not know its externally visible URL if it is running behind a web layer, and because sometimes a link has to be created outside of the request scope, this service provides a central place to configure those external URLs and build them.</p> 
  <p>This page explains how to configure the <strong>Externalizer</strong> service and how to use it. For more details, please refer to the <a href="/sites/developing/using/reference-materials/javadoc/com/day/cq/commons/Externalizer">Javadocs</a>.</p> 
  <h3>Configuring the Externalizer service</h3> 
  <p style="font-family: tahoma, arial, helvetica, sans-serif; font-size: 12px;">The <strong>Externalizer</strong> service allows you to centrally define multiple domains that can be used to programmatically prefix resource paths. Each domain is identified by a unique name that is used to programmatically reference the domain.</p> 
  <p style="font-family: tahoma, arial, helvetica, sans-serif; font-size: 12px;">To define a domain mapping for the <strong>Externalizer</strong> service:</p> 
  <ol> 
   <li><p>Navigate to the configuration manager via <strong>Tools</strong>, then<strong> Web Console</strong>, or enter <span class="code">http://&amp;lt;host&amp;gt;:&amp;lt;port&amp;gt;/system/console/configMgr.</span></p> </li> 
   <li><p>Click <strong>Day CQ Link Externalizer</strong> to open the configuration dialog box.</p> 
    <note> 
     <p style="font-family: tahoma, arial, helvetica, sans-serif; font-size: 12px;">The direct link to the configuration is <span class="code">http://&amp;lt;host&amp;gt;:&amp;lt;port&amp;gt;/system/console/configMgr/com.day.cq.commons.impl.ExternalizerImpl</span></p> 
    </note><img imageRotate="0" src="assets/chlimage_1-53.png" /></li> 
   <li><p>Define a domain mapping: a mapping consists of a unique name that can be used in the code to reference the domain, a space and the domain:<br /> <span class="code">&amp;lt;unique-name&amp;gt; [scheme://]server[:port][/contextpath]</span>, where:</p> 
    <ul> 
     <li><strong>scheme</strong> is usually http or https, but can also be ftp etc.; use https to enforce https links if desired; it will be used if the client code does not override the scheme when asking for externalization of a URL.<br /> </li> 
     <li><strong>server</strong> is the host name (can be a domain name or ip address).<br /> </li> 
     <li><strong>port</strong> (optional) is the port number.<br /> </li> 
     <li><strong>contextpath</strong> (optional) is only set if AEM is installed as a webapp under a different context path.</li> 
    </ul> <p>For example: <span class="code">production http://my.production.instance</span><br /> The following mapping names are predefined and must always be set as AEM relies on them:</p> 
    <ul> 
     <li><strong>local</strong> - the local instance</li> 
     <li><strong>author</strong> - the authoring system DNS<br /> </li> 
     <li><strong>publish</strong> - the public facing website DNS</li> 
    </ul> 
    <note> 
     <p>A custom configuration allows you to add a new category, such as "production," "staging," or even external non-AEM systems such as "my-internal-webservice" and is useful to avoid hardcoding such URLs across different places in a project's codebase.</p> 
    </note></li> 
   <li><p>Click <strong>Save</strong> to save your changes.</p> </li> 
  </ol> 
  <note> 
   <p>Adobe recommends that you <a href="../../../sites/deploying/using/configuring.md#addinganewconfigurationtotherepository">add the configuration to the repository</a>.<br /> </p> 
  </note> 
  <h3>Using the Externalizer service</h3> 
  <p>This section shows a few examples of how the <strong>Externalizer</strong> service can be used.</p> 
  <p> </p> 
  <p><strong>To get the Externalizer service in a JSP:</strong></p> 
  <p><span class="code">Externalizer externalizer = resourceResolver.adaptTo(Externalizer.class);</span></p> 
  <p> </p> 
  <p><strong>To externalize a path with the 'publish' domain:</strong></p> 
  <p><span class="code">String myExternalizedUrl = externalizer.publishLink(resolver, "/my/page") + ".html";</span><br /> </p> 
  <p>Assuming the domain mapping "<span class="code">publish http://www.website.com</span>", myExternalizedUrl ends up with the value "<span class="code">http://www.website.com/contextpath/my/page.html</span>".<br /> </p> 
  <p> </p> 
  <p><strong>To externalize a path with the 'author' domain:</strong><br /> </p> 
  <p><span class="code">String myExternalizedUrl = externalizer.authorLink(resolver, "/my/page") + ".html";</span><br /> </p> 
  <p>Assuming the domain mapping "<span class="code">author http://author.website.com</span>", myExternalizedUrl ends up with the value "<span class="code">http://author.website.com/contextpath/my/page.html</span>".<br /> </p> 
  <p> </p> 
  <p><strong>To externalize a path with the 'local' domain:</strong><br /> </p> 
  <p><span class="code">String myExternalizedUrl = externalizer.externalLink(resolver, Externalizer.LOCAL, "/my/page") + ".html";</span><br /> </p> 
  <p>Assuming the domain mapping "<span class="code">local http://publish-3.internal</span>", myExternalizedUrl ends up with the value "<span class="code">http://publish-3.internal/contextpath/my/page.html</span>".<br /> </p> 
  <p> </p> 
  <p>You can find more examples in the <a href="/sites/developing/using/reference-materials/javadoc/com/day/cq/commons/Externalizer">Javadocs</a>.</p> 
 </body> 
</html>