<?xml version="1.1" encoding="UTF-8" standalone="yes"?> 
<html> 
 <head> 
  <meta content="light" name="heroGradient" /> 
  <meta content="bohnert" name="cq:lastReplicatedBy" /> 
  <meta content="https://helpx.adobe.com/experience-manager/6-4/sites/developing/using/spa-routing.html" name="publishExternalURL" /> 
  <meta content="2018-09-07T12:31:18.365-0400" name="firstPublishExternalDate" /> 
  <meta content="2018-12-11T04:52:32.441-0500" name="cq:lastReplicated" /> 
  <meta content="" name="jcr:primaryType" /> 
  <meta content="admin" name="jcr:createdBy" /> 
  <meta content="For single page applications in AEM, the app is responsible for the routing. This document describes the routing mechanism, the contract, and options available." name="seoDescription" /> 
  <meta content="2018-06-27T07:29:18.797-0400" name="jcr:created" /> 
  <meta content="2018-12-11T04:52:31.762-0500" name="lastPublishExternalDate" /> 
  <meta content="2018-12-11T04:52:31.762-0500" name="publishExternalDate" /> 
  <meta content="false" name="doNotLocalize" /> 
  <meta content="SPA Model Routing" name="jcr:title" /> 
  <meta content="Activate" name="cq:lastReplicationAction" /> 
  <meta content="/etc/designs/help" name="cq:designPath" /> 
  <meta content="/content/help/en/experience-manager/6-4/sites/developing/morehelp/spa;/content/help/en/experience-manager/6-4/sites/developing/morehelp/spa" name="moreHelpPaths" /> 
  <meta content="mix:versionable" name="jcr:mixinTypes" /> 
  <meta content="2018-12-11T04:52:31.762-0500" name="topicBrowsingSortDate" /> 
  <meta content="24c9a5c4-0d0a-4642-b789-3cb8b374c8cc" name="jcr:uuid" /> 
  <meta content="bohnert" name="contentOwner" /> 
  <meta content="video" name="pageLayout" /> 
  <meta content="/apps/help/templates/article-3" name="cq:template" /> 
  <meta content="en" name="pageCreatedAt" /> 
  <meta content="not_checked" name="acrolinxStatus" /> 
  <meta content="true" name="jcr:isCheckedOut" /> 
  <meta content="gknob" name="cq:lastModifiedBy" /> 
  <meta content="left" name="sideColumn" /> 
  <meta content="" name="jcr:baseVersion" /> 
  <meta content="audience:developing" name="primaryAudienceTag" /> 
  <meta content="en_us" name="jcr:language" /> 
  <meta content="e548d504-21af-43e2-9b45-346603423b0d" name="jcr:predecessors" /> 
  <meta content="" name="jcr:versionHistory" /> 
  <meta content="2018-12-11T04:52:31.778-0500" name="cq:lastModified" /> 
  <meta content="bohnert@adobe.com" name="lr_lastReplicatedBy" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/SITES" name="primaryProductTag" /> 
  <meta content="help/components/pages/article-3" name="sling:resourceType" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/SITES;topic_tags:spa;content_type:reference" name="cq:tags" /> 
 </head> 
 <body> 
  <p>For single page applications in AEM, the app is responsible for the routing. This document describes the routing mechanism, the contract, and options available.<br /> </p> 
  <h2>Project Routing</h2> 
  <p>The App owns the routing and is then implemented by the project front end developers. This document describes the routing specific to the model returned by the AEM server. The page model data structure exposes the URL of the underlying resource. The front end project can use any custom or third-party library providing routing functionalities. Once a route expects a fragment of model, a call to the <span class="code">PageModelManager.getData()</span> function can be made. When a model route has changed an event must be triggered to warn listening libraries such as the Page Editor.</p> 
  <h2>Architecture</h2> 
  <p>For a detailed description, please refer to the <a href="../../../sites/developing/using/spa-blueprint.md#main-pars-header-249430796">PageModelManager</a> section of the SPA Blueprint document.</p> 
  <h2>ModelRouter</h2> 
  <p>The <span class="code">ModelRouter</span> - when enabled - encapsulates the HTML5 History API functions <span class="code">pushState</span> and <span class="code">replaceState</span> to guarantee a given fragment of model is pre-fetched and accessible. It then notifies the registered front end component that the model has been modified.</p> 
  <h2>Manual vs Automatic Model Routing</h2> 
  <p>The <span class="code">ModelRouter</span> automates the fetching of fragments of the model. But as any automated tooling it comes with limitations. When needed the <span class="code">ModelRouter</span> can be disabled or configured to ignore paths using meta properties (See the Meta Properties section of the <a href="../../../sites/developing/using/spa-page-component.md">SPA Page Component</a> document). Front end developers can then implement their own model routing layer by requesting the <span class="code">PageModelManager</span> to load any given fragment of model using the <span class="code">getData()</span> function.</p> 
  <note> 
   <p>Currently the We.Retail Journal sample React project illustrates the automated approach while the Angular project illustrates the manual one. A semi-automated approach would also be valid use-case.<br /> </p> 
  </note> 
  <note> 
   <p>The current version of the <span class="code">ModelRouter</span> only support the use of URLs that points to the actual resource path of Sling Model entry points. It doesn't support the use of Vanity URLs or aliases.</p> 
  </note> 
  <h2>Routing Contract</h2> 
  <p>The current implementation is based on the assumption that the SPA project uses the HTML5 History API for routing to the different application pages.</p> 
  <h3>Configuration</h3> 
  <p>The <span class="code">ModelRouter</span> supports the concept of model routing as it listens for <span class="code">pushState</span> and <span class="code">replaceState</span> calls to prefetch model fragments. Internally it triggers the <span class="code">PageModelManager</span> to load the model that corresponds to a given URL and fires a <span class="code">cq-pagemodel-route-changed</span> event that other modules can listen to.</p> 
  <p>By default, this behavior is automatically enabled. To disable it, the SPA should render the following meta property:</p> 
  <codeblock class="syntax js">
    &lt;meta&amp;nbsp;property="cq:pagemodel_router"&amp;nbsp;content="disable"\&gt; 
  </codeblock> 
  <p>Note that every route of the SPA should correspond to an accessible resource in AEM (e.g., "<span class="code">/content/mysite/mypage"</span>) since the <span class="code">PageModelManager</span> will automatically try to load the corresponding page model once the route is selected. Though, if needed, the SPA can also define a "black list" of routes that should be ignored by the <span class="code">PageModelManager</span>:</p> 
  <codeblock class="syntax js">
    &lt;meta&amp;nbsp;property="cq:pagemodel_route_filters"&amp;nbsp;content="route/not/found,^(.*)(?:exclude/path)(.*)"/&gt; 
  </codeblock> 
 </body> 
</html>