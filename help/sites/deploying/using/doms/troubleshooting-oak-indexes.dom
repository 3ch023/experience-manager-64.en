<?xml version="1.1" encoding="UTF-8" standalone="yes"?> 
<html> 
 <head> 
  <meta content="2017-10-12T21:46:58.665-0400" name="mwpw_migration_script_version" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/SITES" name="primaryProductTag" /> 
  <meta content="2017-10-31T16:17:32.497-0400" name="firstPublishExternalDate" /> 
  <meta content="2018-05-08T10:17:22.413-0400" name="publishExternalDate" /> 
  <meta content="User" name="contentOwner" /> 
  <meta content="light" name="gnavTheme" /> 
  <meta content="en_us" name="jcr:language" /> 
  <meta content="Troubleshooting Oak Indexes" name="seoTitle" /> 
  <meta content="admin" name="jcr:createdBy" /> 
  <meta content="Troubleshooting Oak Indexes" name="navTitle" /> 
  <meta content="49d485ec-5347-47e6-a6ae-0aae019d996b" name="jcr:uuid" /> 
  <meta content="true" name="jcr:isCheckedOut" /> 
  <meta content="1a968aa1-c4a6-41e4-9854-f15fd835d12e" name="jcr:predecessors" /> 
  <meta content="2018-04-30T03:29:15.794-0400" name="locHandOffDate" /> 
  <meta content="" name="jcr:versionHistory" /> 
  <meta content="/content/docs/en/aem/6-3/deploy/troubleshooting/troubleshooting-oak-indexes" name="qaNotes" /> 
  <meta content="2018-05-08T10:17:22.413-0400" name="lastPublishExternalDate" /> 
  <meta content="/etc/designs/help" name="cq:designPath" /> 
  <meta content="audience:deploying" name="primaryAudienceTag" /> 
  <meta content="2018-10-11T03:31:28.110-0400" name="cq:lastModified" /> 
  <meta content="help/components/pages/article-3" name="sling:resourceType" /> 
  <meta content="/content/help/en/experience-manager/6-4/sites/deploying/morehelp/deploying;/content/help/en/experience-manager/6-4/sites/deploying/morehelp/deploying" name="moreHelpPaths" /> 
  <meta content="mix:versionable" name="jcr:mixinTypes" /> 
  <meta content="2018-05-08T10:17:22.413-0400" name="topicBrowsingSortDate" /> 
  <meta content="2017-10-12T21:46:00.000-0400" name="qaDate" /> 
  <meta content="" name="jcr:primaryType" /> 
  <meta content="Activate" name="cq:lastReplicationAction" /> 
  <meta content="How to detect and fix slow re-indexing." name="seoDescription" /> 
  <meta content="sarchiz" name="cq:lastReplicatedBy" /> 
  <meta content="/apps/help/templates/article-3" name="cq:template" /> 
  <meta content="https://helpx.adobe.com/experience-manager/6-4/sites/deploying/using/troubleshooting-oak-indexes.html" name="publishExternalURL" /> 
  <meta content="2017-12-01T19:05:08.497-0500" name="jcr:created" /> 
  <meta content="reference-adjustment-service" name="cq:lastModifiedBy" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/SITES;content_type:reference;topic_tags:deploying" name="cq:tags" /> 
  <meta content="Troubleshooting Oak Indexes" name="jcr:title" /> 
  <meta content="dist5" name="distType" /> 
  <meta content="" name="jcr:baseVersion" /> 
  <meta content="sarchiz@adobe.com" name="lr_lastReplicatedBy" /> 
  <meta content="false" name="isReadyForLocalization" /> 
  <meta content="2018-05-08T10:17:22.445-0400" name="cq:lastReplicated" /> 
 </head> 
 <body> 
  <h2>Slow Re-indexing </h2> 
  <p>AEM's internal re-indexing process collects repository data and stores it in Oak indexes to support performant querying of content. In exceptional circumstances, the process can become slow or even stuck. This page acts as a troubleshooting guide to help identify if the indexing is slow, find the cause, and resolve the issue.</p> 
  <p>It is important to distinguish between re-indexing that takes an inappropriately long amount of time, and re-indexing that takes a long amount of time because it's indexing vast quantities of content. For example, the time it takes to index content scales with the amount of content, so large production repositories will take longer to re-index than small development repositories.</p> 
  <p>See the <a href="../../../sites/deploying/using/best-practices-for-queries-and-indexing.md" target="_blank">Best Practices on Queries and Indexing</a> for additional information on when and how to re-index content.</p> 
  <h2>Initial Detection</h2> 
  <p>Initial detection slow indexing requires reviewing the <span class="code">IndexStats</span> JMX MBeans. On the affected AEM instance, do the following:</p> 
  <ol> 
   <li style="box-sizing: border-box; border: 0px; margin: 0px 0px 3px; padding: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;">Open the Web Console and click the JMX tab or go to http://&amp;lt;host&amp;gt;:&amp;lt;port&amp;gt;/system/console/jmx (for example, <a href="http://localhost:4502/system/console/jmx" style="box-sizing: border-box; border: 0px; cursor: pointer; margin: 0px; padding: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: adobe-clean-semilight, sans-serif; vertical-align: baseline; text-decoration-line: none; color: rgb(15, 100, 210); transition: color 150ms ease-in-out;" target="_blank">http://localhost:4502/system/console/jmx</a>).</li> 
   <li>Navigate to the <span class="code">IndexStats</span> Mbeans.</li> 
   <li>Open the <span class="code">IndexStats</span> MBeans for "<span class="code">async</span>" and "<span class="code">fulltext-async</span>".</li> 
   <li>For both MBeans, check if the <strong>Done</strong> timestamp and <strong>LastIndexTime</strong> timestamp are less than 45 mins from the current time.</li> 
   <li>For either MBean, if the time value (<strong>Done</strong> or <strong>LastIndexedTime</strong>) is greater than 45 mins from the current time, then the index job is either failing or taking too long. This causes the asynchronous indexes to be stale.</li> 
  </ol> 
  <h2>Indexing is paused after a forced shutdown</h2> 
  <div>
    A forced shutdown results in AEM suspending asynchronous indexing for up to 30 minutes after the restart, and typically requires another 15 minutes to complete the first re-indexing pass, for a total of approximately 45 minutes (tying back to the 
   <a href="../../../sites/deploying/using/troubleshooting-oak-indexes.md#initialdetection">Initial Detection</a> timeframe of 45 minutes). In the event you suspect indexing is paused after a forced shutdown: 
  </div> 
  <ol> 
   <li><p>Firstly, determine if the AEM instance was shut down in a forced manner (the AEM process was forcefully killed, or a power failure occured) and subsequently restarted.</p> 
    <ul> 
     <li><a href="../../../sites/deploying/using/configure-logging.md" target="_blank">AEM logging</a> can be reviewed for this purpose.</li> 
    </ul> </li> 
   <li><p>If the forced shutdown occurred, upon restart, AEM automatically suspends re-indexing for up to 30 minutes.</p> </li> 
   <li><p>Wait approximately 45 minutes for AEM to resume normal asynchronous indexing operations.</p> </li> 
  </ol> 
  <h2>Thread pool overloaded</h2> 
  <note> 
   <p>For AEM 6.1, ensure that <a href="/content/help/en/experience-manager/release-notes-aem-6-1-cumulative-fix-pack">AEM 6.1 CFP 11</a> is installed.</p> 
  </note> 
  <p>In exceptional circumstances, the thread pool used to manage asychronous indexing may become overloaded. In order to isolate the indexing process, a thread pool can be configured to prevent other AEM work from interfering with Oak's ability to index content in a timely manner. To do this, you should:</p> 
  <ol> 
   <li><p>Define a new, isolated thread pool for the Apache Sling Scheduler to use for asynchronous indexing:</p> 
    <ul> 
     <li>On the affected AEM instance, navigate to AEM OSGi Web Console&amp;gt;OSGi&amp;gt;Configuration&amp;gt;Apache Sling Scheduler or go to http://&amp;lt;host&amp;gt;:&amp;lt;port&amp;gt;/system/console/configMgr (for example, <a href="http://localhost:4502/system/console/configMgr" target="_blank">http://localhost:4502/system/console/configMgr</a>)</li> 
     <li>Add an entry to the "Allowed Thread Pools" field with the value of "oak".</li> 
     <li>Click Save in the bottom-right to save the changes.</li> 
    </ul> <img imageRotate="0" src="assets/chlimage_1-122.png" /></li> 
   <li><p>Verify that the new Apache Sling Scheduler thread pool is registered and displays in the Apache Sling Scheduler Satus web console.</p> 
    <ul> 
     <li>Navigate to the AEM OSGi Web console&amp;gt;Status&amp;gt;Sling Scheduler or go to http://&amp;lt;host&amp;gt;:&amp;lt;port&amp;gt;/system/console/status-slingscheduler (for example, <a href="http://localhost:4502/system/console/status-slingscheduler" target="_blank">http://localhost:4502/system/console/status-slingscheduler</a>) </li> 
     <li>Verify that the following pool entries exist: 
      <ul> 
       <li>ApacheSlingoak</li> 
       <li>ApacheSlingdefault</li> 
      </ul> </li> 
    </ul> <img imageRotate="0" src="assets/chlimage_1-123.png" /></li> 
  </ol> 
  <h2>Observation queue is full</h2> 
  <p>If too many changes and commits are made to the repository in a short amount of time, indexing can be delayed due to a full observation queue. Firstly, determine if the observation queue is full:</p> 
  <ol> 
   <li><p>Go to the Web Console and click the JMX tab or go to http://&amp;lt;host&amp;gt;:&amp;lt;port&amp;gt;/system/console/jmx (for example, <a href="http://localhost:4502/system/console/jmx">http://localhost:4502/system/console/jmx</a>)</p> </li> 
   <li><p>Open the Oak Repository Statistics MBean and determine if any <span class="code">ObservationQueueMaxLength</span> value is greater than 10,000.</p> 
    <ul> 
     <li>In normal operations, this maximum value must always eventually reduce to zero (especially in the <span class="code">per second</span> section) so verify that the <span class="code">ObservationQueueMaxLength</span>'s seconds metrics are 0.</li> 
     <li>If the values are 10,000 or more, and increase steadily, this indicates at least one (possibly more) queues cannot be processed as fast as new changes (commits) occur.</li> 
     <li>Each observation queue has a limit (10,000 by default) and if the queue hits that limit, its processing degrades.</li> 
     <li>When using MongoMK, as queue lengths grow large, internal Oak cache performance degrades. This correlation can be seen in an increased <span class="code">missRate</span> for the <span class="code">DocChildren</span> cache in the <span class="code">Consolidated Cache</span> statistics MBean.</li> 
    </ul> </li> 
   <li><p>To avoid exceeding acceptable observation queue limits, it is recommended to:</p> 
    <ul> 
     <li>Lower the constant rate of commits. Short spikes in commits are acceptable, but the constant rate should be reduced.</li> 
     <li>Increase the size of the <span class="code">DiffCache</span> as described in <a href="/content/help/en/experience-manager/kb/performance-tuning-tips#main-pars_text_3" target="_blank">Performance tuning tips &amp;gt; Mongo Storage Tuning &amp;gt; Document cache size</a>.<span class="code"></span></li> 
    </ul> </li> 
  </ol> 
  <h2>Identifying and remediating a stuck re-indexing process</h2> 
  <div>
    Re-indexing can be considered "completely stuck" under two conditions: 
  </div> 
  <ul> 
   <li>Re-indexing is very slow, to the point where no significant progress is reported in log files regarding the number of nodes traversed. 
    <ul> 
     <li>For example, if there are no messages over the course of an hour, or if progress is so slow that it will take a week or more to finish.</li> 
    </ul> </li> 
   <li>Re-indexing is stuck in an endless loop if repeated exceptions appear in the log files (for example, <span class="code">OutOfMemoryException</span>) in the indexing thread. The repetition of the same exception(s) in the log, indicates Oak attempts to index the same thing repeatedly, but fails on the same issue.</li> 
  </ul> 
  <p>To identify and fix a stuck re-indexing process, do the following:</p> 
  <ol> 
   <li><p>In order to identify the cause of stuck indexing the following information must be collected:</p> 
    <ul> 
     <li>Collect 5 minutes of thread dump, one thread dump every 2 seconds.</li> 
     <li><a href="../../../sites/deploying/using/configure-logging.md" target="_blank">Set DEBUG level and logs for the appenders</a>. 
      <ul> 
       <li><i>org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate</i> </li> 
       <li><i>org.apache.jackrabbit.oak.plugins.index.IndexUpdate</i></li> 
      </ul> </li> 
     <li>Collect data from the async <span class="code">IndexStats</span> MBean: 
      <ul> 
       <li>Navigate to AEM OSGi Web Console&amp;gt;Main&amp;gt;JMX&amp;gt;IndexStat&amp;gt;async<br /> or go to <a href="http://localhost:4502/system/console/jmx/org.apache.jackrabbit.oak%3Aname%3Dasync%2Ctype%3DIndexStats" target="_blank">http://localhost:4502/system/console/jmx/org.apache.jackrabbit.oak%3Aname%3Dasync%2Ctype%3DIndexStats</a></li> 
      </ul> </li> 
     <li>Use <a href="https://github.com/apache/jackrabbit-oak/tree/trunk/oak-run" target="_blank">oak-run.jar's console mode</a> to collect the details of what exists under the <i><span class="code">/:async</span></i> node.</li> 
     <li>Collect a list of repository checkpoints by using the <span class="code">CheckpointManager</span> MBean: 
      <ul> 
       <li>AEM OSGi Web Console&amp;gt;Main&amp;gt;JMX&amp;gt;CheckpointManager&amp;gt;listCheckpoints() <br /> or go to <a href="http://localhost:4502/system/console/jmx/org.apache.jackrabbit.oak%3Aname%3DSegment+node+store+checkpoint+management%2Ctype%3DCheckpointManager" target="_blank">http://localhost:4502/system/console/jmx/org.apache.jackrabbit.oak%3Aname%3DSegment+node+store+checkpoint+management%2Ctype%3DCheckpointManager</a></li> 
      </ul> </li> 
    </ul>  </li> 
   <li><p>After collecting all the information outlined in Step 1, restart AEM.</p> 
    <ul> 
     <li>Restarting AEM may solve the problem in the case of a high concurrent load (observation queue overflow or something similar).</li> 
     <li>If a restart does not solve the problem, open an issue with <a href="https://helpx.adobe.com/marketing-cloud/contact-support.html" target="_blank">Adobe Customer Care</a> and provide all the information collected in Step 1.</li> 
    </ul> </li> 
  </ol> 
  <h2>Safely aborting asynchronous re-indexing</h2> 
  <p>Re-indexing can be safely aborted (stopped before it is completed) via the <span class="code">async, async-reindex </span>and f<span class="code">ulltext-async</span> indexing lanes (<span class="code">IndexStats</span> Mbean). For more information, also see the Apache Oak documentation on <a href="http://jackrabbit.apache.org/oak/docs/query/indexing.html#abort-reindex" target="_blank">How to Abort Reindexing</a>. Aditionally, take into consideration that:</p> 
  <ul> 
   <li>The re-indexing of Lucene and Lucene Property Indexes can be aborted as they are naturally asychronous.</li> 
   <li>The re-indexing of Oak Property Indexes can only be aborted if re-indexing was intiated via the <span class="code">PropertyIndexAsyncReindexMBean</span>.</li> 
  </ul> 
  <p>To safely abort re-indexing, follow these steps:</p> 
  <ol> 
   <li><p>Identify the IndexStats MBean that controls the re-indexing lane that needs to be stopped.</p> 
    <ul> 
     <li>Navigate to the appropriate IndexStats MBean via the JMX console by going to either AEM OSGi Web Console&amp;gt;Main&amp;gt;JMX or http://&amp;lt;host&amp;gt;:&amp;lt;port&amp;gt;/system/console/jmx (for example, <a href="http://localhost:4502/system/console/jmx">http://localhost:4502/system/console/jmx</a>)</li> 
     <li>Open the IndexStats MBean based on the re-indexing lane that you wish to stop (<span class="code">async</span>, <span class="code">async-reindex</span>, or <span class="code">fulltext-async</span>) 
      <ul> 
       <li>To identify the appropriate lane and thus the IndexStats MBean instance, look at the Oak Indexes "async" property. The "async" property will contain the lane name: <span class="code">async</span>, <span class="code">async-reindex</span>, or <span class="code">fulltext-async</span>.</li> 
       <li>The lane is also available by accessing AEM's Index Manager in the "Async" column. To access the Index manager navigate to Operations&amp;gt;Diagnosis&amp;gt;Index Manager.</li> 
      </ul> </li> 
    </ul> <img imageRotate="0" src="assets/chlimage_1-124.png" /></li> 
   <li><p>Invoke the <span class="code">abortAndPause()</span> command on the appropriate <span class="code">IndexStats</span> MBean.</p> </li> 
   <li><p>Mark the Oak index definition appropriately to prevent resuming re-indexing when the indexing lane resumes.</p> 
    <ul> 
     <li>When re-indexing an <strong>existing</strong> index, set the reindex property to false 
      <ul> 
       <li><span class="code">/oak:index/someExistingIndex@reindex=false</span></li> 
      </ul> </li> 
     <li>Or else, for a <strong>new</strong> index, either: 
      <ul> 
       <li>Set the type property to disabled 
        <ul> 
         <li><span class="code">/oak:index/someNewIndex@type=disabled</span></li> 
        </ul> </li> 
       <li>or remove the index definition entirely</li> 
      </ul> </li> 
    </ul> <p>Commit the changes to the repository when complete.</p> </li> 
   <li><p>Finally, resume asychronous indexing on the aborted indexing lane.</p> 
    <ul> 
     <li>In the <span class="code">IndexStats</span> MBean that issued the <span class="code">abortAndPause()</span> command in Step 2, invoke the <span class="code">resume() </span>command.</li> 
    </ul> </li> 
  </ol> 
  <h2>Preventing slow re-indexing</h2> 
  <p>It is best to re-index during quiet periods (for example, not during a large content ingest), and ideally during maintenance windows when AEM's load is known and controlled. Also, ensure that the re-indexing does not take place during other maintenance activities.</p> 
 </body> 
</html>