<?xml version="1.1" encoding="UTF-8" standalone="yes"?> 
<html> 
 <head> 
  <meta content="light" name="heroGradient" /> 
  <meta content="admin" name="jcr:createdBy" /> 
  <meta content="help/components/pages/article-3" name="sling:resourceType" /> 
  <meta content="mix:versionable" name="jcr:mixinTypes" /> 
  <meta content="f5b99825-a048-4cbc-a86b-574de7b91eb4" name="jcr:predecessors" /> 
  <meta content="en_us" name="jcr:language" /> 
  <meta content="not_checked" name="acrolinxStatus" /> 
  <meta content="Rendering HTML Forms Using Custom&amp;#xA;CSS Files Rendering HTML Forms Using Custom&amp;#xA;CSS Files Rendering HTML Forms Using Custom&amp;#xA;CSS Files" name="navTitle" /> 
  <meta content="2017-10-31T16:33:01.317-0400" name="lastPublishExternalDate" /> 
  <meta content="content_type:reference;geptopics:SG_AEMFORMS/categories/rendering_forms;products:SG_EXPERIENCEMANAGER/6.4/FORMS;topic_tags:operations" name="cq:tags" /> 
  <meta content="/apps/help/templates/article-3" name="cq:template" /> 
  <meta content="Rendering HTML Forms Using Custom CSS Files" name="jcr:title" /> 
  <meta content="" name="jcr:primaryType" /> 
  <meta content="video" name="pageLayout" /> 
  <meta content="admin" name="lr_creator" /> 
  <meta content="admin" name="contentOwner" /> 
  <meta content="carlino" name="cq:lastModifiedBy" /> 
  <meta content="" name="jcr:versionHistory" /> 
  <meta content="9f319dd2-a853-4248-b60c-a87d94328af9" name="jcr:uuid" /> 
  <meta content="Activate" name="cq:lastReplicationAction" /> 
  <meta content="true" name="jcr:isCheckedOut" /> 
  <meta content="2017-10-03T06:52:28.435-0400" name="firstPublishExternalDate" /> 
  <meta content="false" name="doNotLocalize" /> 
  <meta content="2017-08-09T03:29:00.000-0400" name="sortDate" /> 
  <meta content="head1_20111213" name="gep_conversion_script_version" /> 
  <meta content="2017-11-22T19:04:52.496-0500" name="jcr:created" /> 
  <meta content="vishgupt@adobe.com" name="lr_lastReplicatedBy" /> 
  <meta content="carlino" name="cq:lastReplicatedBy" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/FORMS" name="primaryProductTag" /> 
  <meta content="2017-11-21T06:59:49.733-0500" name="cq:lastModified" /> 
  <meta content="/etc/designs/help" name="cq:designPath" /> 
  <meta content="/content/help/en/experience-manager/6-4/forms/developing/morehelp/operations;/content/help/en/experience-manager/6-4/forms/developing/morehelp/operations" name="moreHelpPaths" /> 
  <meta content="admin" name="lr_lastModifiedBy" /> 
  <meta content="2017-11-01T04:29:33.206-0400" name="unpublishExternalDate" /> 
  <meta content="" name="jcr:baseVersion" /> 
  <meta content="AEMForms/6.1/ProgramLC/WS624e3cba99b79e12e69a9941333732bac8-7e34.2,AEMForms/6.1/ProgramLC/WS74380ba2132add06-45302c4e15a1c68dfbf-8000,AEMForms/6.1/ProgramLC/WS624e3cba99b79e1262f7903e1336a3529e5-7ffb.2,AEMForms/6.1/ProgramLC/WS624e3cba99b79e12e69a9941333732bac8-7a06.2,AEMForms/6.1/ProgramLC/WS624e3cba99b79e1262f7903e1336a3529e5-7ff5.2" name="cq:gepId" /> 
  <meta content="left" name="sideColumn" /> 
  <meta content="audience:developing" name="primaryAudienceTag" /> 
  <meta content="" name="publishExternalURL" /> 
  <meta content="2018-04-03T08:33:06.379-0400" name="cq:lastReplicated" /> 
  <meta content="2017-08-09T03:29:45.497-0400" name="lr_lastModified" /> 
 </head> 
 <body> 
  <h2 id="rendering_html_forms_using_custom_css_files">Rendering HTML Forms Using Custom CSS Files</h2> 
  <p></p> 
  <p>The Forms service renders HTML forms in response to an HTTP request from a web browser. When rendering an HTML form, the Forms service can reference a custom CSS file. You can create a custom CSS file to meet your business requirements and reference that CSS file when using the Forms service to render HTML forms.</p> 
  <p>The Forms service silently parses the custom CSS file. That is, the Forms service does not report errors that may be encountered if the custom CSS file does not comply with CSS standards. In this situation, the Forms service ignores the style and continues with the remaining styles located in the CSS file.</p> 
  <p>The following list specifies styles that are supported in a custom CSS file:</p> 
  <ul> 
   <li><p><strong>Class level selector-style pairs</strong>: If present in a custom CSS file, selectors used in the HTML form as class styles are used. Unused class styles are ignored.</p></li> 
   <li><p><strong>Identifier level selector-style pairs</strong>: All identifier styles are used if they are used in the HTML form.</p></li> 
   <li><p><strong>Element level selector-style pairs</strong>: All element styles are used if they are used in the HTML form.</p></li> 
   <li><p><strong>Style Priority</strong>: Style priority (like important) is supported and can be used in a custom CSS file.</p></li> 
   <li><p><strong>Media Type</strong>: One or more selector-style pairs can be wrapped in @media style to define the media type. The Forms service does not check whether the specified media type is supported. The media type specified in the custom CSS file is merged in the HTML form.</p></li> 
  </ul> 
  <p>You can retrieve a sample CSS file by using the FormsIVS application. Upload the form, select it in the Test Form Design page, and click GenerateCSS. You are not required to set the HTML transformation type before clicking the button. Next select save. You can edit this CSS file to meet your business requirements. </p> 
  <note> 
   <p>Before rendering an HTML form that uses a custom CSS file, it is important that you have a solid understanding of rendering HTML forms. (See <a href="/programming-with-aem-forms/rendering-forms-rendering-forms rendering-forms-html-rendering-forms rendering-forms-html-rendering-forms#rendering_forms_as_html">Rendering Forms as HTML</a>.)</p> 
  </note> 
  <note> 
   <p>For more information about the Forms service, see<a href="http://www.adobe.com/go/learn_aemforms_services_63"> Services Reference for AEM Forms</a>.</p> 
  </note> 
  <h3 id="summary_of_steps">Summary of steps</h3> 
  <p></p> 
  <p>To render an HTML form that uses a CSS file, perform the following tasks:</p> 
  <ol> 
   <li><p>Include project files.</p></li> 
   <li><p>Create a Forms Java API object. </p></li> 
   <li><p>Reference the CSS file.</p></li> 
   <li><p>Render an HTML form.</p></li> 
   <li><p>Write the form data stream to the client web browser.</p></li> 
  </ol> 
  <p><strong>Include project files</strong></p> 
  <p>Include necessary files in your development project. If you are creating a client application by using Java, include the necessary JAR files. If you are using web services, ensure that you include the proxy files.</p> 
  <p><strong>Create a Forms Java API object</strong></p> 
  <p>Before you can programmatically perform an operation supported by the Forms service, you must create a Forms client object.</p> 
  <p><strong>Reference the CSS file</strong></p> 
  <p>To render an HTML form that uses a custom CSS file, ensure that you reference an existing CSS file. </p> 
  <p><strong>Render an HTML form</strong></p> 
  <p>To render an HTML form, you must specify a form design created in Designer and saved as an XDP file. You must also select an HTML transformation type. For example, you can specify the HTML transformation type that renders a dynamic HTML for Internet Explorer 5.0 or later. </p> 
  <p>Rendering an HTML form also requires values, such as URI values needed to render other form types. </p> 
  <p><strong>Write the form data stream to the client web browser</strong></p> 
  <p>When the Forms service renders an HTML form, it returns a form data stream that you must write to the client web browser to make the HTML form visible to the user.</p> 
  <p><strong>See also</strong></p> 
  <p><a href="/programming-with-aem-forms/rendering-forms-rendering-forms rendering-html-forms-using-custom rendering-html-forms-using-custom#render_an_html_form_that_uses_a_css_file_using_the_java_api">Render an HTML form that uses a CSS file using the Java API</a></p> 
  <p><a href="#unresolvedlink-lc-in-invoke-using-java-iu.xml#ws624e3cba99b79e12e69a9941333732bac8-7b4b.2">Including AEM Forms Java library files</a></p> 
  <p><a href="#unresolvedlink-lc-in-invoke-using-java-iu.xml#ws624e3cba99b79e12e69a9941333732bac8-7fd6.2">Setting connection properties</a></p> 
  <p><a href="#unresolvedlink-lc-qs-forms-fo.xml#ws624e3cba99b79e12e69a9941333732bac8-7af6.2">Forms Service API Quick Starts</a></p> 
  <p><a href="/programming-with-aem-forms/rendering-forms-rendering-forms rendering-interactive-pdf-forms-rendering#rendering_interactive_pdf_forms">Rendering Interactive PDF Forms</a></p> 
  <p><a href="/programming-with-aem-forms/rendering-forms-rendering-forms rendering-forms-html-rendering-forms rendering-forms-html-rendering-forms#rendering_forms_as_html">Rendering Forms as HTML</a></p> 
  <p><a href="/programming-with-aem-forms/rendering-forms-rendering-forms creating-web-applications-renders-forms#creating_web_applications_that_renders_forms">Creating Web Applications that Renders Forms</a></p> 
  <h3 id="render_an_html_form_that_uses_a_css_file_using_the_java_api">Render an HTML form that uses a CSS file using the Java API</h3> 
  <p></p> 
  <p>Render an HTML form that uses a custom CSS file by using the Forms API (Java):</p> 
  <ol> 
   <li><p>Include project files </p><p>Include client JAR files, such as adobe-forms-client.jar, in your Java projectâ€™s class path.</p></li> 
   <li><p>Create a Forms Java API object </p> 
    <ul> 
     <li><p>Create a <span class="code">ServiceClientFactory</span> object that contains connection properties. </p></li> 
     <li><p>Create a <span class="code">FormsServiceClient</span> object by using its constructor and passing the <span class="code">ServiceClientFactory</span> object.</p></li> 
    </ul></li> 
   <li><p>Reference the CSS file </p> 
    <ul> 
     <li><p>Create an <span class="code">HTMLRenderSpec</span> object by using its constructor. </p></li> 
     <li><p>To render the HTML form that uses a custom CSS file, invoke the <span class="code">HTMLRenderSpec</span> objectâ€™s <span class="code">setCustomCSSURI</span> method and pass a string value that specifies the location and name of the CSS file.</p></li> 
    </ul></li> 
   <li><p>Render an HTML form </p><p>Invoke the <span class="code">FormsServiceClient</span> objectâ€™s <span class="code">(Deprecated) (Deprecated) renderHTMLForm</span> method and pass the following values:</p> 
    <ul> 
     <li><p>A string value that specifies the form design name, including the file name extension. If you reference a form design that is part of a Forms application, ensure that you specify the complete path, such as <span class="code">Applications/FormsApplication/1.0/FormsFolder/Loan.xdp</span>.</p></li> 
     <li><p>A <span class="code">TransformTo</span> enum value that specifies the HTML preference type. For example, to render an HTML form that is compatible with dynamic HTML for Internet Explorer 5.0 or later, specify <span class="code">TransformTo.MSDHTML</span>. </p></li> 
     <li><p>A <span class="code">com.adobe.idp.Document</span> object that contains data to merge with the form. If you do not want to merge data, pass an empty <span class="code">com.adobe.idp.Document</span> object. </p></li> 
     <li><p>The <span class="code">HTMLRenderSpec</span> object that stores HTML run-time options. </p></li> 
     <li><p>A string value that specifies the <span class="code">HTTP_USER_AGENT</span> header value, such as <span class="code">Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322)</span>.</p></li> 
     <li><p>A <span class="code">URLSpec</span> object that stores URI values required to render an HTML form.</p></li> 
     <li><p>A <span class="code">java.util.HashMap</span> object that stores file attachments. This is an optional parameter, and you can specify <span class="code">null</span> if you do not want to attach files to the form. </p></li> 
    </ul><p>The <span class="code">(Deprecated) renderHTMLForm</span> method returns a <span class="code">FormsResult</span> object that contains a form data stream that must be written to the client web browser.</p></li> 
   <li><p>Write the form data stream to the client web browser </p> 
    <ul> 
     <li><p>Create a <span class="code">com.adobe.idp.Document</span> object by invoking the <span class="code">FormsResult</span> object â€˜s <span class="code">getOutputContent</span> method.</p></li> 
     <li><p>Get the content type of the <span class="code">com.adobe.idp.Document</span> object by invoking its <span class="code">getContentType</span> method.</p></li> 
     <li><p>Set the <span class="code">javax.servlet.http.HttpServletResponse</span> objectâ€™s content type by invoking its <span class="code">setContentType</span> method and passing the content type of the <span class="code">com.adobe.idp.Document</span> object.</p></li> 
     <li><p>Create a <span class="code">javax.servlet.ServletOutputStream</span> object used to write the form data stream to the client web browser by invoking the <span class="code">javax.servlet.h\ttp.HttpServletResponse</span> objectâ€™s <span class="code">getOutputStream</span> method.</p></li> 
     <li><p>Create a <span class="code">java.io.InputStream</span> object by invoking the <span class="code">com.adobe.idp.Document</span> objectâ€™s <span class="code">getInputStream</span> method. </p></li> 
     <li><p>Create a byte array and populate it with the form data stream by invoking the <span class="code">InputStream</span> objectâ€™s <span class="code">read</span> method and passing the byte array as an argument. </p></li> 
     <li><p>Invoke the <span class="code">javax.servlet.ServletOutputStream</span> objectâ€™s <span class="code">write</span> method to send the form data stream to the client web browser. Pass the byte array to the <span class="code">write</span> method.</p></li> 
    </ul></li> 
  </ol> 
  <p><strong>See also</strong></p> 
  <p><a href="/programming-with-aem-forms/rendering-forms-rendering-forms rendering-html-forms-using-custom#rendering_html_forms_using_custom_css_files">Rendering HTML Forms Using Custom CSS Files</a></p> 
  <p><a href="#unresolvedlink-lc-qs-forms-fo.xml#ws624e3cba99b79e12e69a9941333732bac8-7a03.2">Quick Start (SOAP mode): Rendering an HTML form that uses a CSS file using the Java API</a></p> 
  <p><a href="#unresolvedlink-lc-in-invoke-using-java-iu.xml#ws624e3cba99b79e12e69a9941333732bac8-7b4b.2">Including AEM Forms Java library files</a></p> 
  <p><a href="#unresolvedlink-lc-in-invoke-using-java-iu.xml#ws624e3cba99b79e12e69a9941333732bac8-7fd6.2">Setting connection properties</a></p> 
  <h3 id="render_an_html_form_that_uses_a_css_file_using_the_web_service_api">Render an HTML form that uses a CSS file using the web service API</h3> 
  <p></p> 
  <p>Render an HTML form that uses a custom CSS file by using the Forms API (web service):</p> 
  <ol> 
   <li><p>Include project files </p> 
    <ul> 
     <li><p>Create Java proxy classes that consume the Forms service WSDL. </p></li> 
     <li><p>Include the Java proxy classes in your class path. </p></li> 
    </ul></li> 
   <li><p>Create a Forms Java API object </p><p>Create a <span class="code">FormsService</span> object and set authentication values. </p></li> 
   <li><p>Reference the CSS file </p> 
    <ul> 
     <li><p>Create an <span class="code">HTMLRenderSpec</span> object by using its constructor. </p></li> 
     <li><p>To render the HTML form that uses a custom CSS file, invoke the <span class="code">HTMLRenderSpec</span> objectâ€™s <span class="code">setCustomCSSURI</span> method and pass a string value that specifies the location and name of the CSS file.</p></li> 
    </ul></li> 
   <li><p>Render an HTML form </p><p>Invoke the <span class="code">FormsService</span> objectâ€™s <span class="code">(Deprecated) renderHTMLForm</span> method and pass the following values:</p> 
    <ul> 
     <li><p>A string value that specifies the form design name, including the file name extension. If you reference a form design that is part of a Forms application, ensure that you specify the complete path, such as <span class="code">Applications/FormsApplication/1.0/FormsFolder/Loan.xdp</span>.</p></li> 
     <li><p>A <span class="code">TransformTo</span> enum value that specifies the HTML preference type. For example, to render an HTML form that is compatible with dynamic HTML for Internet Explorer 5.0 or later, specify <span class="code">TransformTo.MSDHTML</span>. </p></li> 
     <li><p>A <span class="code">BLOB</span> object that contains data to merge with the form. If you do not want to merge data, pass <span class="code">null</span>. (See <a href="/programming-with-aem-forms/rendering-forms-rendering-forms prepopulating-forms-flowable-layouts-prepopulating#prepopulating_forms_with_flowable_layouts">Prepopulating Forms with Flowable Layouts</a>.)</p></li> 
     <li><p>The <span class="code">HTMLRenderSpec</span> object that stores HTML run-time options. </p></li> 
     <li><p>A string value that specifies the <span class="code">HTTP_USER_AGENT</span> header value, such as <span class="code">Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322)</span>. You can pass an empty string if you do not want to set this value. </p></li> 
     <li><p>A <span class="code">URLSpec</span> object that stores URI values required to render an HTML form. (See <a href="#unresolvedlink-lc-re-render-interactive-forms-ri.xml#ws624e3cba99b79e12e69a9941333732bac8-7a96.2">Specify URI values</a>.)</p></li> 
     <li><p>A <span class="code">java.util.HashMap</span> object that stores file attachments. This is an optional parameter, and you can specify <span class="code">null</span> if you do not want to attach files to the form. (See <a href="#unresolvedlink-lc-re-render-interactive-forms-ri.xml#ws624e3cba99b79e12e69a9941333732bac8-7a95.2">Attach files to the form</a>.)</p></li> 
     <li><p>An empty <span class="code">com.adobe.idp.services.holders.BLOBHolder</span> object that is populated by the <span class="code">(Deprecated) renderHTMLForm</span> method. This parameter value stores the rendered form. </p></li> 
     <li><p>An empty <span class="code">com.adobe.idp.services.holders.BLOBHolder</span> object that is populated by the <span class="code">(Deprecated) renderHTMLForm</span> method. This parameter stores the output XML data. </p></li> 
     <li><p>An empty <span class="code">javax.xml.rpc.holders.LongHolder</span> object that is populated by the <span class="code">(Deprecated) renderHTMLForm</span> method. This argument stores the number of pages in the form.</p></li> 
     <li><p>An empty <span class="code">javax.xml.rpc.holders.StringHolder</span> object that is populated by the <span class="code">(Deprecated) renderHTMLForm</span> method. This argument stores the locale value.</p></li> 
     <li><p>An empty <span class="code">javax.xml.rpc.holders.StringHolder</span> object that is populated by the <span class="code">(Deprecated) renderHTMLForm</span> method. This argument stores the HTML rendering value that is used.</p></li> 
     <li><p>An empty <span class="code">com.adobe.idp.services.holders.FormsResultHolder</span> object that will contain the results of this operation.</p></li> 
    </ul><p>The <span class="code">(Deprecated) renderHTMLForm</span> method populates the <span class="code">com.adobe.idp.services.holders.FormsResultHolder</span> object that is passed as the last argument value with a form data stream that must be written to the client web browser.</p></li> 
   <li><p>Write the form data stream to the client web browser </p> 
    <ul> 
     <li><p>Create a <span class="code">FormResult</span> object by getting the value of the <span class="code">com.adobe.idp.services.holders.FormsResultHolder</span> objectâ€™s <span class="code">value</span> data member. </p></li> 
     <li><p>Create a <span class="code">BLOB</span> object that contains form data by invoking the <span class="code">FormsResult</span> objectâ€™s <span class="code">getOutputContent</span> method.</p></li> 
     <li><p>Get the content type of the <span class="code">BLOB</span> object by invoking its <span class="code">getContentType</span> method.</p></li> 
     <li><p>Set the <span class="code">javax.servlet.http.HttpServletResponse</span> objectâ€™s content type by invoking its <span class="code">setContentType</span> method and passing the content type of the <span class="code">BLOB</span> object.</p></li> 
     <li><p>Create a <span class="code">javax.servlet.ServletOutputStream</span> object used to write the form data stream to the client web browser by invoking the <span class="code">javax.servlet.http.HttpServletResponse</span> objectâ€™s <span class="code">getOutputStream</span> method.</p></li> 
     <li><p>Create a byte array and populate it by invoking the <span class="code">BLOB</span> objectâ€™s <span class="code">getBinaryData</span> method. This task assigns the content of the <span class="code">FormsResult</span> object to the byte array. </p></li> 
     <li><p>Invoke the <span class="code">javax.servlet.http.HttpServletResponse</span> objectâ€™s <span class="code">write</span> method to send the form data stream to the client web browser. Pass the byte array to the <span class="code">write</span> method. </p></li> 
    </ul></li> 
  </ol> 
  <p><strong>See also</strong></p> 
  <p><a href="/programming-with-aem-forms/rendering-forms-rendering-forms rendering-html-forms-using-custom#rendering_html_forms_using_custom_css_files">Rendering HTML Forms Using Custom CSS Files</a></p> 
  <p><a href="#unresolvedlink-lc-qs-forms-fo.xml#ws624e3cba99b79e12e69a9941333732bac8-7e32.2">Quick Start (Base64): Rendering an HTML form that uses a CSS file using the web service API</a></p> 
  <p><a href="#unresolvedlink-lc-in-invoke-using-web-services-iu.xml#ws624e3cba99b79e12e69a9941333732bac8-7fca.2">Invoking AEM Forms using Base64 encoding</a></p> 
 </body> 
</html>