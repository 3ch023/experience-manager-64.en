<?xml version="1.1" encoding="UTF-8" standalone="yes"?>
<html>
 <head>
  <meta content="" name="jcr:baseVersion" />
  <meta content="Disassemble a PDF document using&amp;#xA;the web service API Disassemble a PDF document using&amp;#xA;the web service API" name="navTitle" />
  <meta content="admin" name="contentOwner" />
  <meta content="/apps/help/templates/article-3" name="cq:template" />
  <meta content="" name="jcr:versionHistory" />
  <meta content="en_us" name="jcr:language" />
  <meta content="audience:developing" name="primaryAudienceTag" />
  <meta content="" name="jcr:primaryType" />
  <meta content="help/components/pages/article-3" name="sling:resourceType" />
  <meta content="not_checked" name="acrolinxStatus" />
  <meta content="95fd0378-c2dd-41c2-8955-e40410cc749f" name="jcr:uuid" />
  <meta content="de9c010d-4633-4839-815e-6cc6bffabc3c" name="jcr:predecessors" />
  <meta content="content_type:reference;geptopics:SG_AEMFORMS/categories/programmatically_disassembling_pdf_documents;products:SG_EXPERIENCEMANAGER/6.4/FORMS" name="cq:tags" />
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/FORMS" name="primaryProductTag" />
  <meta content="https://helpx.adobe.com/aem-forms/6-3/developing/disassemble-pdf-document-using-web.html" name="publishExternalURL" />
  <meta content="admin" name="jcr:createdBy" />
  <meta content="carlino" name="cq:lastModifiedBy" />
  <meta content="2017-08-09T03:29:00.000-0400" name="sortDate" />
  <meta content="admin" name="lr_creator" />
  <meta content="khsingh@adobe.com" name="lr_lastReplicatedBy" />
  <meta content="Disassemble a PDF document usingthe web service API" name="jcr:title" />
  <meta content="carlino" name="cq:lastReplicatedBy" />
  <meta content="video" name="pageLayout" />
  <meta content="mix:versionable" name="jcr:mixinTypes" />
  <meta content="2017-10-03T06:52:15.859-0400" name="lastPublishExternalDate" />
  <meta content="Activate" name="cq:lastReplicationAction" />
  <meta content="2017-10-03T06:52:15.859-0400" name="publishExternalDate" />
  <meta content="2018-04-03T08:32:20.478-0400" name="cq:lastReplicated" />
  <meta content="2017-08-09T03:29:00.000-0400" name="topicBrowsingSortDate" />
  <meta content="2017-08-09T03:29:42.551-0400" name="lr_lastModified" />
  <meta content="light" name="heroGradient" />
  <meta content="2017-11-22T19:06:28.511-0500" name="jcr:created" />
  <meta content="/etc/designs/help" name="cq:designPath" />
  <meta content="admin" name="lr_lastModifiedBy" />
  <meta content="2017-10-03T06:52:15.859-0400" name="firstPublishExternalDate" />
  <meta content="2017-11-21T06:59:32.415-0500" name="cq:lastModified" />
  <meta content="AEMForms/6.1/ProgramLC/WS624e3cba99b79e12e69a9941333732bac8-741e.2" name="cq:gepId" />
  <meta content="false" name="doNotLocalize" />
  <meta content="head1_20111213" name="gep_conversion_script_version" />
  <meta content="true" name="jcr:isCheckedOut" />
  <meta content="left" name="sideColumn" />
 </head>
 <body>
  <p>Disassemble a PDF document by using the Assembler Service API (web service):</p>
  <ol>
   <li><p>Include project files. </p><p>Create a Microsoft .NET project that uses MTOM. Ensure that you use the following WSDL definition when setting a service reference: <span class="code">http://localhost:8080/soap/services/AssemblerService?WSDL&amp;lc_version=9.0.1</span>. </p>
    <note>
     <p>Replace <span class="code">localhost</span> with the IP address of the server hosting AEM Forms. </p>
    </note></li>
   <li><p>Create a PDF Assembler client. </p>
    <ul>
     <li><p>Create an <span class="code">AssemblerServiceClient</span> object by using its default constructor. </p></li>
     <li><p>Create an <span class="code">AssemblerServiceClient.Endpoint.Address</span> object by using the <span class="code">System.ServiceModel.EndpointAddress</span> constructor. Pass a string value that specifies the WSDL to the AEM Forms service (for example, <span class="code">http://localhost:8080/soap/services/AssemblerService?blob=mtom</span>). You do not need to use the <span class="code">lc_version</span> attribute. This attribute is used when you create a service reference.</p></li>
     <li><p>Create a <span class="code">System.ServiceModel.BasicHttpBinding</span> object by getting the value of the <span class="code">AssemblerServiceClient.Endpoint.Binding</span> field. Cast the return value to <span class="code">BasicHttpBinding</span>. </p></li>
     <li><p>Set the <span class="code">System.ServiceModel.BasicHttpBinding</span> object’s <span class="code">MessageEncoding</span> field to <span class="code">WSMessageEncoding.Mtom</span>. This value ensures that MTOM is used. </p></li>
     <li><p>Enable basic HTTP authentication by performing the following tasks:</p>
      <ul>
       <li><p>Assign the AEM forms user name to the field <span class="code">AssemblerServiceClient.ClientCredentials.UserName.UserName</span>.</p></li>
       <li><p>Assign the corresponding password value to the field <span class="code">AssemblerServiceClient.ClientCredentials.UserName.Password</span>.</p></li>
       <li><p>Assign the constant value <span class="code">HttpClientCredentialType.Basic</span> to the field <span class="code">BasicHttpBindingSecurity.Transport.ClientCredentialType</span>. </p></li>
       <li><p>Assign the constant value <span class="code">BasicHttpSecurityMode.TransportCredentialOnly</span> to the field <span class="code">BasicHttpBindingSecurity.Security.Mode</span>. </p></li>
      </ul></li>
    </ul></li>
   <li><p>Reference an existing DDX document. </p>
    <ul>
     <li><p>Create a <span class="code">BLOB</span> object by using its constructor. The <span class="code">BLOB</span> object is used to store the DDX document.</p></li>
     <li><p>Create a <span class="code">System.IO.FileStream</span> object by invoking its constructor. Pass a string value that represents the file location of the DDX document and the mode in which to open the file.</p></li>
     <li><p>Create a byte array that stores the content of the <span class="code">System.IO.FileStream</span> object. You can determine the size of the byte array by getting the <span class="code">System.IO.FileStream</span> object’s <span class="code">Length</span> property. </p></li>
     <li><p>Populate the byte array with stream data by invoking the <span class="code">System.IO.FileStream</span> object’s <span class="code">Read</span> method and passing the byte array, the starting position, and the stream length to read.</p></li>
     <li><p>Populate the <span class="code">BLOB</span> object by assigning its <span class="code">MTOM</span> property with the contents of the byte array.</p></li>
    </ul></li>
   <li><p>Reference a PDF document to disassemble. </p>
    <ul>
     <li><p>Create a <span class="code">BLOB</span> object by using its constructor. The <span class="code">BLOB</span> object is used to store the input PDF document. This <span class="code">BLOB</span> object is passed to the <span class="code">invokeOneDocument</span> as an argument. </p></li>
     <li><p>Create a <span class="code">System.IO.FileStream</span> object by invoking its constructor and passing a string value that represents the file location of the input PDF document and the mode in which to open the file.</p></li>
     <li><p>Create a byte array that stores the content of the <span class="code">System.IO.FileStream</span> object. You can determine the size of the byte array by getting the <span class="code">System.IO.FileStream</span> object’s <span class="code">Length</span> property. </p></li>
     <li><p>Populate the byte array with stream data by invoking the <span class="code">System.IO.FileStream</span> object’s <span class="code">Read</span> method and passing the byte array, the starting position, and the stream length to read.</p></li>
     <li><p>Populate the <span class="code">BLOB</span> object by assigning its <span class="code">MTOM</span> field the contents of the byte array.</p></li>
     <li><p>Create a <span class="code">MyMapOf_xsd_string_To_xsd_anyType</span> object. This collection object is used to store the PDF to disassemble. </p></li>
     <li><p>Create a <span class="code">MyMapOf_xsd_string_To_xsd_anyType_Item</span> object. </p></li>
     <li><p>Assign a string value that represents the key name to the <span class="code">MyMapOf_xsd_string_To_xsd_anyType_Item</span> object’s <span class="code">key</span> field. This value must match the value of the PDF source element specified in the DDX document.</p></li>
     <li><p>Assign the <span class="code">BLOB</span> object that stores the PDF document to the <span class="code">MyMapOf_xsd_string_To_xsd_anyType_Item</span> object’s <span class="code">value</span> field.</p></li>
     <li><p>Add the <span class="code">MyMapOf_xsd_string_To_xsd_anyType_Item</span> object to the <span class="code">MyMapOf_xsd_string_To_xsd_anyType</span> object. Invoke the <span class="code">MyMapOf_xsd_string_To_xsd_anyType</span> object’ <span class="code">Add</span> method and pass the <span class="code">MyMapOf_xsd_string_To_xsd_anyType</span> object.</p></li>
    </ul></li>
   <li><p>Set run-time options. </p>
    <ul>
     <li><p>Create an <span class="code">AssemblerOptionSpec</span> object that stores run-time options by using its constructor.</p></li>
     <li><p>Set run-time options to meet your business requirements by assigning a value to a data member that belongs to the <span class="code">AssemblerOptionSpec</span> object. For example, to instruct the Assembler service to continue processing a job when an error occurs, assign <span class="code">false</span> to the <span class="code">AssemblerOptionSpec</span> object’s <span class="code">failOnError</span> field.</p></li>
    </ul></li>
   <li><p>Disassemble the PDF document. </p><p>Invoke the <span class="code">AssemblerServiceClient</span> object’s <span class="code">invokeDDX</span> method and pass the following values:</p>
    <ul>
     <li><p>A <span class="code">BLOB</span> object that represents the DDX document that disassembles the PDF document</p></li>
     <li><p>The <span class="code">MyMapOf_xsd_string_To_xsd_anyType</span> object that contains the PDF document to disassemble</p></li>
     <li><p>An <span class="code">AssemblerOptionSpec</span> object that specifies run-time options</p></li>
    </ul><p>The <span class="code">invokeDDX</span> method returns an <span class="code">AssemblerResult</span> object that contains the job results and any exceptions that occurred. </p></li>
   <li><p>Save the disassembled PDF documents. </p><p>To obtain the newly created PDF documents, perform the following actions:</p>
    <ul>
     <li><p>Access the <span class="code">AssemblerResult</span> object’s <span class="code">documents</span> field, which is a <span class="code">Map</span> object that contains the disassembled PDF documents.</p></li>
     <li><p>Iterate through the <span class="code">Map</span> object to obtain each resultant document. Then, cast that array member’s <span class="code">value</span> to a <span class="code">BLOB</span>.</p></li>
     <li><p>Extract the binary data that represents the PDF document by accessing its <span class="code">BLOB</span> object’s <span class="code">MTOM</span> property. This returns an array of bytes that you can write out to a PDF file.</p></li>
    </ul></li>
  </ol>
  <p><strong>See also</strong></p>
  <p><a href="/programming-with-aem-forms/programmatically-disassembling-pdf-documents-programmatically#programmatically_disassembling_pdf_documents">Programmatically Disassembling PDF Documents</a></p>
  <p><a href="#unresolvedlink-lc-qs-assembler-as.xml#ws624e3cba99b79e12e69a9941333732bac8-7fb1.2">Quick Start (MTOM): Disassembling a PDF document using the web service API</a></p>
  <p><a href="#unresolvedlink-lc-in-invoke-using-web-services-iu.xml#ws624e3cba99b79e12e69a9941333732bac8-7fe7.2">Invoking AEM Forms using MTOM</a></p>
 </body>
</html>