<?xml version="1.1" encoding="UTF-8" standalone="yes"?> 
<html> 
 <head> 
  <meta content="2017-09-22T08:28:22.192-0400" name="acrolinxDate" /> 
  <meta content="/apps/help/templates/article-3" name="cq:template" /> 
  <meta content="2018-04-03T08:51:58.698-0400" name="firstPublishExternalDate" /> 
  <meta content="en_us" name="jcr:language" /> 
  <meta content="http://acrolinx.corp.adobe.com:8031/output/en/Protect_document_on_behalf_of_another_user_krs_workflow_65f90d1012cb6548_104_report.xml" name="acrolinxReportURL" /> 
  <meta content="khsingh@adobe.com" name="lr_lastReplicatedBy" /> 
  <meta content="false" name="doNotLocalize" /> 
  <meta content="4942f52c-b0be-4115-9aaa-41f9a9f33fbe" name="jcr:uuid" /> 
  <meta content="khsingh" name="cq:lastReplicatedBy" /> 
  <meta content="2018-04-16T05:09:32.713-0400" name="lastPublishExternalDate" /> 
  <meta content="/etc/designs/help" name="cq:designPath" /> 
  <meta content="Activate" name="cq:lastReplicationAction" /> 
  <meta content="/content/help/en/experience-manager/6-4/forms/using/morehelp/working_with_document_security" name="moreHelpPaths" /> 
  <meta content="2018-04-16T05:09:32.736-0400" name="cq:lastReplicated" /> 
  <meta content="" name="jcr:baseVersion" /> 
  <meta content="true" name="jcr:isCheckedOut" /> 
  <meta content="video" name="pageLayout" /> 
  <meta content="geptopics:SG_AEMFORMS/categories/working_with_document_security" name="cq:tags" /> 
  <meta content="163c97cc-5006-4756-bd5f-be895c37a92e" name="jcr:predecessors" /> 
  <meta content="2018-04-26T04:40:26.304-0400" name="locHandOffDate" /> 
  <meta content="https://helpx.adobe.com/experience-manager/6-4/forms/using/Protect-document-on-behalf-of-another-user.html" name="publishExternalURL" /> 
  <meta content="vishgupt" name="cq:lastModifiedBy" /> 
  <meta content="2018-04-16T05:09:32.713-0400" name="topicBrowsingSortDate" /> 
  <meta content="left" name="sideColumn" /> 
  <meta content="en" name="pageCreatedAt" /> 
  <meta content="mix:versionable" name="jcr:mixinTypes" /> 
  <meta content="355" name="acrolinxWords" /> 
  <meta content="2018-03-29T07:29:26.338-0400" name="jcr:created" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/FORMS" name="primaryProductTag" /> 
  <meta content="2018-04-16T05:09:32.713-0400" name="publishExternalDate" /> 
  <meta content="" name="jcr:versionHistory" /> 
  <meta content="Protect a document on behalf of another user" name="jcr:title" /> 
  <meta content="2018-04-26T04:40:26.304-0400" name="cq:lastModified" /> 
  <meta content="" name="jcr:primaryType" /> 
  <meta content="yellow" name="acrolinxPageStatus" /> 
  <meta content="admin" name="jcr:createdBy" /> 
  <meta content="checked_not_improved" name="acrolinxStatus" /> 
  <meta content="27" name="acrolinxSentences" /> 
  <meta content="help/components/pages/article-3" name="sling:resourceType" /> 
  <meta content="khsingh" name="acrolinxLastCheckedBy" /> 
  <meta content="light" name="heroGradient" /> 
  <meta content="false" name="isReadyForLocalization" /> 
 </head> 
 <body> 
  <p>AEM Forms Document Security Java SDK provides APIs to allow a user account to protect a document on behalf of another user without attaining the permissions to edit the document. You can use the APIs in a workflow process or programmatically as a document service. The new APIs are:</p> 
  <ul> 
   <li><strong>protectDocumentUse</strong> the ProtectDocument API to apply a policy to a document on behalf of<br /> another user account. Permissions of the user account used to apply the policy remain limited to protecting the document. It does not attain rights to open and view the document. RMSecureDocumentResult protectDocument(Document inDoc, String documentName, String policySetName, String policyName, RMLocale locale, boolean bExactMatchForNames)</li> 
   <li><strong>createLicenseUse</strong> the CreateLicense API to create a license for a policy on behalf of another user account. PublishLicenseDTO createLicense(String policyId, String documentName, boolean logSecureDocEvent)</li> 
   <li><strong>protectDocumentWithCoverPageUse</strong> the ProtectDocumentWithCoverPage API to apply a policy and add a cover page to a document on behalf of another user. Permissions of the user account used to apply the policy remain limited to protecting the document. It does not attain the rights to open and view the document. RMSecureDocumentResult protectDocumentWithCoverPage(Document inDoc, String documentName, String policySetName, String policyName, Document coverDoc, boolean bExactMatchForNames)<br /> <br /> </li> 
  </ul> 
  <h2>Using the APIs to protect a document on behalf of another user</h2> 
  <p>Perform the following steps to protect a document on behalf of another user and without attaining the permissions to edit the document:</p> 
  <ol> 
   <li><p>Create a policy set. For example, PolicySet1.<br /> </p> </li> 
   <li><p>Create a policy in the newly created policy set. For example, Policy1 in PolicySet1.<br /> </p> </li> 
   <li><p>Create a user with role Rights Management End User. For example, User1. Provide the permissions to view documents protected using Policy1 to the newly created user.<br /> </p> </li> 
   <li><p>Create a new role. For example, Role1. Provide the Service Invoke permission to the newly created role. Create a user with newly created role. For example, User2.You can use User2 or an administrator to create SDK connection and invoke the protectDocument service.</p> <p>Now, you can run the following sample code to protect a document without providing permissions to edit the document to the user protecting the document:</p> 
    <codeblock gutter="true" class="syntax java">
      !!discoiqbr!!import&amp;nbsp;java.io.File;!!discoiqbr!!import&amp;nbsp;java.io.FileInputStream;!!discoiqbr!!import&amp;nbsp;java.io.FileNotFoundException;!!discoiqbr!!import&amp;nbsp;java.io.FileOutputStream;!!discoiqbr!!import&amp;nbsp;java.io.IOException;!!discoiqbr!!import&amp;nbsp;java.io.InputStream;!!discoiqbr!!import&amp;nbsp;java.util.Properties;!!discoiqbr!!!!discoiqbr!!import&amp;nbsp;com.adobe.edc.common.dto.PublishLicenseDTO;!!discoiqbr!!import&amp;nbsp;com.adobe.edc.sdk.SDKException;!!discoiqbr!!import&amp;nbsp;com.adobe.idp.Document;!!discoiqbr!!import&amp;nbsp;com.adobe.idp.dsc.clientsdk.ServiceClientFactory;!!discoiqbr!!import&amp;nbsp;com.adobe.idp.dsc.clientsdk.ServiceClientFactoryProperties;!!discoiqbr!!import&amp;nbsp;com.adobe.livecycle.rightsmanagement.RMSecureDocumentResult;!!discoiqbr!!import&amp;nbsp;com.adobe.livecycle.rightsmanagement.client.DocumentManager;!!discoiqbr!!import&amp;nbsp;com.adobe.livecycle.rightsmanagement.client.RightsManagementClient;!!discoiqbr!!import&amp;nbsp;com.adobe.livecycle.rightsmanagement.client.RightsManagementClient2;!!discoiqbr!!!!discoiqbr!!public&amp;nbsp;class&amp;nbsp;PublishAsProtectAPI&amp;nbsp;{!!discoiqbr!!!!discoiqbr!!private&amp;nbsp;static&amp;nbsp;final&amp;nbsp;String&amp;nbsp;unprotectedFileName&amp;nbsp;=&amp;nbsp;"C:\\unprotected.pdf";!!discoiqbr!!private&amp;nbsp;static&amp;nbsp;final&amp;nbsp;String&amp;nbsp;protectedFileName&amp;nbsp;=&amp;nbsp;"C:\\protect.pdf";!!discoiqbr!!private&amp;nbsp;static&amp;nbsp;final&amp;nbsp;String&amp;nbsp;coverFileName&amp;nbsp;=&amp;nbsp;"C:\\CoverPage.pdf";!!discoiqbr!!private&amp;nbsp;static&amp;nbsp;final&amp;nbsp;String&amp;nbsp;POLICY_ID&amp;nbsp;=&amp;nbsp;"2EF66008-5E2D-1034-9B06-00000A292C18";&amp;nbsp;!!discoiqbr!!!!discoiqbr!!public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;main(String[]&amp;nbsp;args)&amp;nbsp;{!!discoiqbr!!!!discoiqbr!!try&amp;nbsp;{!!discoiqbr!!!!discoiqbr!!Properties&amp;nbsp;connectionProps&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Properties();!!discoiqbr!!connectionProps.setProperty(ServiceClientFactoryProperties.DSC_DEFAULT_SOAP_ENDPOINT,"http://localhost:8080");!!discoiqbr!!connectionProps.setProperty(ServiceClientFactoryProperties.DSC_TRANSPORT_PROTOCOL,ServiceClientFactoryProperties.DSC_SOAP_PROTOCOL);!!discoiqbr!!connectionProps.setProperty(ServiceClientFactoryProperties.DSC_SERVER_TYPE,&amp;nbsp;"JBoss");!!discoiqbr!!connectionProps.setProperty(ServiceClientFactoryProperties.DSC_CREDENTIAL_USERNAME,"administrator");!!discoiqbr!!connectionProps.setProperty(ServiceClientFactoryProperties.DSC_CREDENTIAL_PASSWORD,"password");!!discoiqbr!!!!discoiqbr!!//&amp;nbsp;Create&amp;nbsp;a&amp;nbsp;ServiceClientFactory&amp;nbsp;instance!!discoiqbr!!ServiceClientFactory&amp;nbsp;factory&amp;nbsp;=&amp;nbsp;ServiceClientFactory.createInstance(connectionProps);!!discoiqbr!!testProtectDocument(factory);!!discoiqbr!!testProtectDocumentWithCoverPage(factory);!!discoiqbr!!testProtectDocumentJavaPPL(factory);!!discoiqbr!!!!discoiqbr!!}&amp;nbsp;!!discoiqbr!!catch&amp;nbsp;(Exception&amp;nbsp;ex)&amp;nbsp;{!!discoiqbr!!ex.printStackTrace();&amp;nbsp;}!!discoiqbr!!}!!discoiqbr!!!!discoiqbr!!private&amp;nbsp;static&amp;nbsp;void&amp;nbsp;testProtectDocument(ServiceClientFactory&amp;nbsp;factory)&amp;nbsp;throws&amp;nbsp;FileNotFoundException,&amp;nbsp;SDKException&amp;nbsp;{!!discoiqbr!!//&amp;nbsp;Create&amp;nbsp;a&amp;nbsp;RightsManagementClient&amp;nbsp;object!!discoiqbr!!RightsManagementClient&amp;nbsp;rmClient&amp;nbsp;=&amp;nbsp;new&amp;nbsp;RightsManagementClient(factory);!!discoiqbr!!//&amp;nbsp;Create&amp;nbsp;a&amp;nbsp;Document&amp;nbsp;Manager&amp;nbsp;object!!discoiqbr!!DocumentManager&amp;nbsp;documentManager&amp;nbsp;=&amp;nbsp;rmClient.getDocumentManager();!!discoiqbr!!//Reference&amp;nbsp;a&amp;nbsp;policy-protected&amp;nbsp;PDF&amp;nbsp;document&amp;nbsp;from&amp;nbsp;which&amp;nbsp;to&amp;nbsp;remove&amp;nbsp;a&amp;nbsp;policy!!discoiqbr!!FileInputStream&amp;nbsp;is&amp;nbsp;=&amp;nbsp;new&amp;nbsp;FileInputStream(unprotectedFileName);!!discoiqbr!!Document&amp;nbsp;inPDF&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Document(is);!!discoiqbr!!long&amp;nbsp;startTime&amp;nbsp;=&amp;nbsp;System.currentTimeMillis();!!discoiqbr!!//Remove&amp;nbsp;a&amp;nbsp;policy&amp;nbsp;from&amp;nbsp;the&amp;nbsp;policy-protected&amp;nbsp;PDF&amp;nbsp;document!!discoiqbr!!RMSecureDocumentResult&amp;nbsp;securePDF&amp;nbsp;=&amp;nbsp;documentManager.protectDocument(inPDF,&amp;nbsp;"test",&amp;nbsp;"newPolicySet",&amp;nbsp;"latest",&amp;nbsp;"DefaultDom",&amp;nbsp;"administrator",&amp;nbsp;null,&amp;nbsp;true);!!discoiqbr!!System.out.println("Total&amp;nbsp;Time&amp;nbsp;taken&amp;nbsp;for&amp;nbsp;protectDocument&amp;nbsp;=&amp;nbsp;"&amp;nbsp;+&amp;nbsp;(System.currentTimeMillis()&amp;nbsp;-&amp;nbsp;startTime));!!discoiqbr!!//Save&amp;nbsp;the&amp;nbsp;unsecured&amp;nbsp;PDF&amp;nbsp;document!!discoiqbr!!File&amp;nbsp;myFile&amp;nbsp;=&amp;nbsp;new&amp;nbsp;File(protectedFileName);!!discoiqbr!!securePDF.getProtectedDoc().copyToFile(myFile);!!discoiqbr!!}!!discoiqbr!!!!discoiqbr!!private&amp;nbsp;static&amp;nbsp;void&amp;nbsp;testProtectDocumentWithCoverPage(ServiceClientFactory&amp;nbsp;factory)&amp;nbsp;throws&amp;nbsp;FileNotFoundException,&amp;nbsp;SDKException&amp;nbsp;{!!discoiqbr!!//&amp;nbsp;Create&amp;nbsp;a&amp;nbsp;RightsManagementClient&amp;nbsp;object!!discoiqbr!!RightsManagementClient&amp;nbsp;rmClient&amp;nbsp;=&amp;nbsp;new&amp;nbsp;RightsManagementClient(factory);!!discoiqbr!!//&amp;nbsp;Create&amp;nbsp;a&amp;nbsp;Document&amp;nbsp;Manager&amp;nbsp;object!!discoiqbr!!DocumentManager&amp;nbsp;documentManager&amp;nbsp;=&amp;nbsp;rmClient.getDocumentManager();!!discoiqbr!!//Reference&amp;nbsp;a&amp;nbsp;policy-protected&amp;nbsp;PDF&amp;nbsp;document&amp;nbsp;from&amp;nbsp;which&amp;nbsp;to&amp;nbsp;remove&amp;nbsp;a&amp;nbsp;policy!!discoiqbr!!FileInputStream&amp;nbsp;is&amp;nbsp;=&amp;nbsp;new&amp;nbsp;FileInputStream(unprotectedFileName);!!discoiqbr!!Document&amp;nbsp;inPDF&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Document(is);!!discoiqbr!!FileInputStream&amp;nbsp;coverIS&amp;nbsp;=&amp;nbsp;new&amp;nbsp;FileInputStream(coverFileName);!!discoiqbr!!Document&amp;nbsp;inCoverPDF&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Document(coverIS);!!discoiqbr!!long&amp;nbsp;startTime&amp;nbsp;=&amp;nbsp;System.currentTimeMillis();!!discoiqbr!!//Remove&amp;nbsp;a&amp;nbsp;policy&amp;nbsp;from&amp;nbsp;the&amp;nbsp;policy-protected&amp;nbsp;PDF&amp;nbsp;document!!discoiqbr!!RMSecureDocumentResult&amp;nbsp;securePDF&amp;nbsp;=&amp;nbsp;documentManager.protectDocumentWithCoverPage(inPDF,&amp;nbsp;"test",&amp;nbsp;"newPolicySet",&amp;nbsp;"latestPolicy",&amp;nbsp;inCoverPDF,&amp;nbsp;true);!!discoiqbr!!System.out.println("Total&amp;nbsp;Time&amp;nbsp;taken&amp;nbsp;for&amp;nbsp;Page0ProtectDocument&amp;nbsp;=&amp;nbsp;"&amp;nbsp;+&amp;nbsp;(System.currentTimeMillis()&amp;nbsp;-&amp;nbsp;startTime));!!discoiqbr!!//Save&amp;nbsp;the&amp;nbsp;unsecured&amp;nbsp;PDF&amp;nbsp;document!!discoiqbr!!File&amp;nbsp;myFile&amp;nbsp;=&amp;nbsp;new&amp;nbsp;File(protectedFileName);!!discoiqbr!!securePDF.getProtectedDoc().copyToFile(myFile);!!discoiqbr!!}!!discoiqbr!!!!discoiqbr!!private&amp;nbsp;static&amp;nbsp;PublishLicenseDTO&amp;nbsp;testProtectDocumentJavaPPL&amp;nbsp;(ServiceClientFactory&amp;nbsp;factory)&amp;nbsp;throws&amp;nbsp;SDKException,&amp;nbsp;FileNotFoundException,&amp;nbsp;IOException&amp;nbsp;{!!discoiqbr!!//&amp;nbsp;Create&amp;nbsp;a&amp;nbsp;RightsManagementClient&amp;nbsp;object!!discoiqbr!!RightsManagementClient2&amp;nbsp;rmClient2&amp;nbsp;=&amp;nbsp;new&amp;nbsp;RightsManagementClient2(factory);!!discoiqbr!!//&amp;nbsp;Create&amp;nbsp;a&amp;nbsp;Document&amp;nbsp;Manager&amp;nbsp;object!!discoiqbr!!DocumentManager&amp;nbsp;documentManager&amp;nbsp;=&amp;nbsp;rmClient2.getDocumentManager();!!discoiqbr!!long&amp;nbsp;startTime&amp;nbsp;=&amp;nbsp;System.currentTimeMillis();!!discoiqbr!!PublishLicenseDTO&amp;nbsp;license&amp;nbsp;=&amp;nbsp;documentManager.createLicense(POLICY_ID,&amp;nbsp;"Out.pdf",&amp;nbsp;true);!!discoiqbr!!System.out.println("Create&amp;nbsp;License&amp;nbsp;totalTime&amp;nbsp;=&amp;nbsp;"&amp;nbsp;+&amp;nbsp;(System.currentTimeMillis()&amp;nbsp;-&amp;nbsp;startTime));!!discoiqbr!!startTime&amp;nbsp;=&amp;nbsp;System.currentTimeMillis();!!discoiqbr!!//&amp;nbsp;Reference&amp;nbsp;a&amp;nbsp;PDF&amp;nbsp;document&amp;nbsp;to&amp;nbsp;which&amp;nbsp;a&amp;nbsp;policy&amp;nbsp;is&amp;nbsp;applied!!discoiqbr!!InputStream&amp;nbsp;inputFileStream&amp;nbsp;=&amp;nbsp;new&amp;nbsp;FileInputStream(unprotectedFileName);!!discoiqbr!!//&amp;nbsp;Apply&amp;nbsp;a&amp;nbsp;policy&amp;nbsp;to&amp;nbsp;the&amp;nbsp;PDF&amp;nbsp;document!!discoiqbr!!InputStream&amp;nbsp;protectPDF&amp;nbsp;=&amp;nbsp;rmClient2.getRightsManagementEncryptionService().protectDocument(inputFileStream,&amp;nbsp;license);!!discoiqbr!!//&amp;nbsp;Save&amp;nbsp;the&amp;nbsp;policy-protected&amp;nbsp;PDF&amp;nbsp;document!!discoiqbr!!File&amp;nbsp;myFile&amp;nbsp;=&amp;nbsp;new&amp;nbsp;File(protectedFileName);!!discoiqbr!!//&amp;nbsp;write&amp;nbsp;the&amp;nbsp;inputStream&amp;nbsp;to&amp;nbsp;a&amp;nbsp;FileOutputStream!!discoiqbr!!FileOutputStream&amp;nbsp;outputStream&amp;nbsp;=&amp;nbsp;new&amp;nbsp;FileOutputStream(myFile);!!discoiqbr!!int&amp;nbsp;read&amp;nbsp;=&amp;nbsp;0;!!discoiqbr!!byte[]&amp;nbsp;bytes&amp;nbsp;=&amp;nbsp;new&amp;nbsp;byte[1024];!!discoiqbr!!while&amp;nbsp;((read&amp;nbsp;=&amp;nbsp;protectPDF.read(bytes))&amp;nbsp;!=&amp;nbsp;-1)&amp;nbsp;{!!discoiqbr!!outputStream.write(bytes,&amp;nbsp;0,&amp;nbsp;read);!!discoiqbr!!}!!discoiqbr!!System.out.println("protectPDFDocument&amp;nbsp;totalTime&amp;nbsp;=&amp;nbsp;"&amp;nbsp;+&amp;nbsp;(System.currentTimeMillis()&amp;nbsp;-&amp;nbsp;startTime));!!discoiqbr!!outputStream.close();!!discoiqbr!!inputFileStream.close();!!discoiqbr!!System.out.println("Document&amp;nbsp;Protected&amp;nbsp;Successfully");!!discoiqbr!!return&amp;nbsp;license;!!discoiqbr!!}!!discoiqbr!!}!!discoiqbr!!!!discoiqbr!! 
    </codeblock></li> 
  </ol> 
 </body> 
</html>