<?xml version="1.1" encoding="UTF-8" standalone="yes"?> 
<html> 
 <head> 
  <meta content="AEMForms/6.1/AdminHelp/WS92d06802c76abadb-5145d5d12905ce07e7-7df4.2,AEMForms/6.1/AdminHelp/WS92d06802c76abadb-908c05612905cdf653-7ff9.2,AEMForms/6.1/AdminHelp/WS92d06802c76abadb-908c05612905cdf653-7ff3.2,AEMForms/6.1/AdminHelp/WS92d06802c76abadb-908c05612905cdf653-7ff2.2" name="cq:gepId" /> 
  <meta content="" name="jcr:primaryType" /> 
  <meta content="not_checked" name="acrolinxStatus" /> 
  <meta content="2018-04-05T05:55:36.451-0400" name="cq:lastReplicated" /> 
  <meta content="39" name="acrolinxSentences" /> 
  <meta content="admin" name="jcr:createdBy" /> 
  <meta content="2018-04-05T05:55:36.128-0400" name="lastPublishExternalDate" /> 
  <meta content="mix:versionable" name="jcr:mixinTypes" /> 
  <meta content="left" name="sideColumn" /> 
  <meta content="2018-03-13T09:04:06.147-0400" name="jcr:created" /> 
  <meta content="2018-04-05T05:55:36.128-0400" name="publishExternalDate" /> 
  <meta content="light" name="heroGradient" /> 
  <meta content="false" name="isReadyForLocalization" /> 
  <meta content="Activate" name="cq:lastReplicationAction" /> 
  <meta content="false" name="doNotLocalize" /> 
  <meta content="head1_20111213" name="gep_conversion_script_version" /> 
  <meta content="admin" name="lr_lastModifiedBy" /> 
  <meta content="Configuring SSL for JBoss Application Server" name="navTitle" /> 
  <meta content="red" name="acrolinxPageStatus" /> 
  <meta content="khsingh" name="cq:lastModifiedBy" /> 
  <meta content="admin" name="contentOwner" /> 
  <meta content="" name="jcr:versionHistory" /> 
  <meta content="Configuring SSL for JBoss Application Server" name="jcr:title" /> 
  <meta content="Learn how to configure SSL for JBoss Application Server." name="seoDescription" /> 
  <meta content="2016-02-05T03:27:19.018-0500" name="lr_lastModified" /> 
  <meta content="http://checkstyle.corp.adobe.com:8031/output/en/configuring_ssl_jboss_application_server_admin_5e12de0b318c6865_2299_report.xml" name="acrolinxReportURL" /> 
  <meta content="/apps/help/templates/article-3" name="cq:template" /> 
  <meta content="true" name="jcr:isCheckedOut" /> 
  <meta content="2018-04-26T04:24:19.249-0400" name="cq:lastModified" /> 
  <meta content="" name="jcr:baseVersion" /> 
  <meta content="453c4a01-880c-46c9-92db-230bd573ba12" name="jcr:predecessors" /> 
  <meta content="2018-04-26T04:24:19.248-0400" name="locHandOffDate" /> 
  <meta content="en_us" name="jcr:language" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/FORMS" name="primaryProductTag" /> 
  <meta content="khsingh" name="cq:lastReplicatedBy" /> 
  <meta content="/etc/designs/help" name="cq:designPath" /> 
  <meta content="khsingh@adobe.com" name="lr_lastReplicatedBy" /> 
  <meta content="help/components/pages/article-3" name="sling:resourceType" /> 
  <meta content="https://helpx.adobe.com/experience-manager/6-4/forms/using/admin-help/configuring-ssl-jboss-application-server.html" name="publishExternalURL" /> 
  <meta content="950" name="acrolinxWords" /> 
  <meta content="2016-02-05T03:27:00.000-0500" name="sortDate" /> 
  <meta content="2016-05-31T06:57:44.526-0400" name="acrolinxDate" /> 
  <meta content="/content/help/en/experience-manager/6-4/forms/morehelp/configuring_ssl;/content/help/en/experience-manager/6-4/forms/morehelp/configuring_ssl" name="moreHelpPaths" /> 
  <meta content="2016-02-05T03:27:00.000-0500" name="topicBrowsingSortDate" /> 
  <meta content="content_type:reference;geptopics:SG_AEMFORMS/categories/configuring_ssl;products:SG_EXPERIENCEMANAGER/6.4/FORMS" name="cq:tags" /> 
  <meta content="0113080a-003c-4e7e-b4d5-f98d2755af1c" name="jcr:uuid" /> 
  <meta content="vishgupt" name="acrolinxLastCheckedBy" /> 
  <meta content="admin" name="lr_creator" /> 
  <meta content="2016-04-20T10:02:29.514-0400" name="firstPublishExternalDate" /> 
  <meta content="video" name="pageLayout" /> 
 </head> 
 <body> 
  <p>To configure SSL on JBoss Application Server, you need an SSL credential for authentication. You can use the Java keytool to create a credential or request and import a credential from a certificate authority (CA). You must then enable SSL on JBoss. </p> 
  <p>You can run keytool by using a single command that includes all of the information needed to create the keystore. </p> 
  <p>In this procedure:</p> 
  <ul> 
   <li><p><i>[appserver root]</i> is the home directory of the application server running AEM forms.</p></li> 
   <li><p><i>[type]</i> is a folder name that varies, depending on the type of install you performed.</p></li> 
  </ul> 
  <h2 id="create_an_ssl_credential">Create an SSL credential</h2> 
  <p></p> 
  <ol> 
   <li><p>In a command prompt, navigate to <i>[JAVA HOME]</i>/bin and type the following command to create the credential and keystore:</p> 
    <note> 
     <p>Replace [JAVA_HOME] with the directory where the JDK is installed, and replace the text in italic with values that correspond with your environment. Host Name is the fully qualified domain name of the application server.</p> 
    </note></li> 
   <li><p>Enter the <span class="code">keystore_password</span> when prompted for a password. The password for the keystore and the key must be identical. </p> 
    <note> 
     <p>The <span class="code">keystore_password</span><i> entered at this step may be the same password (key_password) that you entered in step 1, or it may be different. </i></p> 
    </note></li> 
   <li><p>Copy the <i>keystorename</i>.keystore to the <i>[appserver root]</i>/server/<i>[type]</i>/conf directory by typing one of the following commands:</p> 
    <ul> 
     <li>(Windows Single Server) <span class="code">copy </span><em>keystorename</em><span class="code">.keystore </span><em>[appserver root]</em><span class="code">\standalone\configuration</span></li> 
     <li>(Windows Server Cluster) copy <em>keystorename</em>.keystore <em>[appserver root]</em>\domain\configuration</li> 
    </ul> 
    <ul> 
     <li>(Linux Single Server) <span class="code">cp </span><em>keystorename</em><span class="code">.keystore</span><em>[appserver root]</em><span class="code">/standalone/configuration</span></li> 
     <li>(Linux Server Cluster)<code class="code"> cp <em>keystorename</em>.keystore<em>[appserver root]</em>/domain/configuration
       <discoiqbr /> </code><br /> </li> 
    </ul>  </li> 
   <li><p>Export the certificate file by typing the following command:</p> 
    <ul> 
     <li><span class="code"></span>(Single Server) keytool -export -alias "LC Cert" -file LC_cert.cer -keystore [appserver root]/standalone/configuration/keystorename.keystore<br /> </li> 
     <li>(Server Cluster) keytool -export -alias <em>"LC Cert"</em> -file <em>LC_cert</em>.cer -keystore <em>[appserver root]</em>/domain/configuration/<em>keystorename</em>.keystore</li> 
    </ul>  </li> 
   <li><p>Enter the <i>keystore_password</i> when prompted for a password.</p></li> 
   <li><p>Copy the LC_cert.cer file to the <i>[appserver root] \conf </i>directory by typing the following command:</p> 
    <ul> 
     <li> (Windows Single Server) copy LC_cert.cer [appserver root]\standalone\configuration</li> 
     <li>(Windows Server Cluster) copy LC_cert.cer [appserver root]\domain\configuration</li> 
     <li> (Linux Single Server) cp LC _cert.cer [appserver root]\standalone\configuration</li> 
     <li>(Linux Server Cluster) cp LC _cert.cer [appserver root]\domain\configuration</li> 
    </ul>  </li> 
   <li><p>View the contents of the certificate by typing the following command:</p> 
    <ul> 
     <li><span class="code">keytool -printcert -v -file [appserver root]\standalone\configuration\LC_cert.cer</span></li> 
     <li><code class="code">keytool -printcert -v -file [appserver root]\domain\configuration\LC_cert.cer
       <discoiqbr /> </code></li> 
    </ul>  </li> 
   <li><p>To provide write access to the cacerts file in <i>[JAVA_HOME]</i>\jre\lib\security, if required, perform the following task:</p> 
    <ul> 
     <li><p>(Windows) Right-click the cacerts file and select Properties, and then deselect the Read-only attribute.</p></li> 
     <li><p>(Linux) Type <span class="code">chmod 777 cacerts</span></p></li> 
    </ul> 
    <draft-comment lastModifiedBy="" prevFirstName="unknown" prevLastName="unknown" type="remark"> 
     <p>Bug 1791546:</p> 
    </draft-comment></li> 
   <li><p>Import the certificate by typing the following command:</p></li> 
   <li><p>Type <span class="code">changeit</span> as the password. This password is the default password for a Java installation and may have been changed by the system administrator.</p></li> 
   <li><p>When prompted for <span class="code">Trust this certificate? [no]</span>:, type <span class="code">yes</span>. The confirmation "Certificate was added to keystore" is displayed.</p></li> 
   <li><p>If you are connecting over SSL from Workbench, install the certificate on the Workbench computer.</p></li> 
   <li><p>In a text editor, open the following files for editing: </p> 
    <ul> 
     <li> Single Server - [appserver root]/standalone/configuration/lc_&amp;lt;dbname/turnkey&amp;gt;.xml</li> 
    </ul> 
    <ul> 
     <li> Server Cluster - [appserver root]/domain/configuration/host.xml</li> 
    </ul> 
    <ul> 
     <li> Server Cluster - [appserver root]/domain/configuration/domain_&amp;lt;dbname&amp;gt;.xml</li> 
    </ul> </li> 
   <li> 
    <ul> 
     <li><strong>For single server,</strong> in the lc_&amp;lt;dbaname/tunkey&amp;gt;.xml file, add the following after &amp;lt;security-realms&amp;gt; section:</li> 
    </ul> 
    <codeblock gutter="true" class="syntax as3">
      &lt;security-realm&amp;nbsp;name="SSLRealm"&gt;!!discoiqbr!!&lt;server-identities&gt;!!discoiqbr!!&lt;ssl&gt;!!discoiqbr!!&lt;keystore&amp;nbsp;path="C:/Adobe/Adobe_Experience_Manager_Forms/jboss/standalone/configuration/aemformses.keystore"&amp;nbsp;keystore-password="adobe"&amp;nbsp;alias="AEMformsCert"&amp;nbsp;key-password="adobe"/&gt;!!discoiqbr!!&lt;/ssl&gt;!!discoiqbr!!&lt;/server-identities&gt;!!discoiqbr!!&lt;/security-realm&gt; 
    </codeblock><p>Locate the <span class="code">&amp;lt;server&amp;gt;</span> section present after the following code: </p>  <p>Add the following to the &amp;lt;server&amp;gt; section present after above code:</p> 
    <codeblock gutter="true" class="syntax js">
      &lt;https-listener&amp;nbsp;name="default-secure"&amp;nbsp;socket-binding="https"&amp;nbsp;security-realm="SSLRealm"/&gt; 
    </codeblock> 
    <ul> 
     <li><strong>For server cluster,</strong> in the [appserver root]\domain\configuration\host.xml on all nodes, add the following after &amp;lt;security-realms&amp;gt; section:<br /> </li> 
    </ul> 
    <codeblock gutter="true" class="syntax as3">
      &lt;security-realm&amp;nbsp;name="SSLRealm"&gt;!!discoiqbr!!&lt;server-identities&gt;!!discoiqbr!!&lt;ssl&gt;!!discoiqbr!!&lt;keystore&amp;nbsp;path="C:/Adobe/Adobe_Experience_Manager_Forms/jboss/standalone/configuration/aemformses.keystore"&amp;nbsp;keystore-password="adobe"&amp;nbsp;alias="AEMformsCert"&amp;nbsp;key-password="adobe"/&gt;!!discoiqbr!!&lt;/ssl&gt;!!discoiqbr!!&lt;/server-identities&gt;!!discoiqbr!!&lt;/security-realm&gt; 
    </codeblock><p>On the master node of the Server Cluster, in the [appserver root]\domain\configuration\domain_&amp;lt;dbname&amp;gt;.xml, locate the &amp;lt;server&amp;gt; section present after the following code: </p>  <p>Add the following to the &amp;lt;server&amp;gt; section present after above code:<br /> </p> 
    <codeblock gutter="true" class="syntax js">
      &lt;https-listener&amp;nbsp;name="default-secure"&amp;nbsp;socket-binding="https"&amp;nbsp;security-realm="SSLRealm"/&gt; 
    </codeblock></li> 
   <li><p>Change the value for the <span class="code">keystoreFile</span> attribute and the <span class="code">keystorePass</span> attribute to the keystore password that you specified when you created the keystore.</p></li> 
   <li><p>Restart the application server:</p> 
    <ul> 
     <li><p>For turnkey installations:</p> 
      <ul> 
       <li><p>From the Windows Control Panel, click Administrative Tools, and then click Services. </p></li> 
       <li><p>Select JBoss for Adobe Experience Manager forms. </p></li> 
       <li><p>Select Action &amp;gt; Stop. </p></li> 
       <li><p>Wait for the status of the service to appear as stopped. </p></li> 
       <li><p>Select Action &amp;gt; Start.</p></li> 
      </ul></li> 
     <li><p>For Adobe preconfigured or manually configured JBoss installations:</p> 
      <ul> 
       <li><p>From a command prompt, navigate to<i> [appserver root]</i>/bin.</p></li> 
       <li><p>Stop the server by entering the following command:</p> 
        <ul> 
         <li><p>(Windows) <span class="code">shutdown.bat -S</span></p></li> 
         <li><p>(Linux) <span class="code">./shutdown.sh -S</span></p></li> 
        </ul></li> 
       <li><p>Wait until the JBoss process has fully shut down (when the JBoss process returns control to the terminal it was started in).</p></li> 
       <li><p>Start the server by entering the following command:</p> 
        <ul> 
         <li><p>(Windows) <span class="code">run.bat -c &amp;lt;profile&amp;gt;</span></p></li> 
         <li><p>(Linux) <span class="code">./run.sh -c &amp;lt;profile&amp;gt;</span></p></li> 
        </ul></li> 
      </ul></li> 
    </ul></li> 
   <li><p>To access administration console using SSL, type <span class="code">https://[host name]:[port]/adminui</span> in a web browser:</p><p>The default SSL port for JBoss is 8443. From here on, specify this port when accessing AEM forms.</p></li> 
  </ol> 
  <h2 id="request_a_credential_from_a_ca">Request a credential from a CA</h2> 
  <p></p> 
  <ol> 
   <li><p>In a command prompt, navigate to <i>[JAVA HOME]</i>/bin and type the following command to create the keystore and the key:</p><p><span class="code">keytool -genkey -dname "CN=</span><i>Host Name</i><span class="code">, OU=</span><i>Group Name</i><span class="code">, O=</span><i>Company Name</i><span class="code">, L=</span><i>City Name</i><span class="code">, S=</span><i>State</i><span class="code">, C=</span><i>Country Code</i><span class="code">" -alias </span><span class="code">"</span><span class="code"><i>LC Cert</i></span><i>"</i><span class="code"> -keyalg RSA -keypass </span>-<i>key_password</i><span class="code"> -keystore </span><i>keystorename</i><span class="code">.keystore</span></p> 
    <note> 
     <p>Replace <i>[JAVA_HOME] with the directory where the JDK is installed, and replace the text in italic with values that correspond with your environment.</i></p> 
    </note></li> 
   <li><p>Type the following command to generate a certificate request to send to the certificate authority:</p></li> 
   <li><p>When your request for a certificate file is fulfilled, complete the next procedure.</p></li> 
  </ol> 
  <h2 id="use_a_credential_obtained_from_a_ca_to_enable_ssl">Use a credential obtained from a CA to enable SSL</h2> 
  <p></p> 
  <ol> 
   <li><p>In a command prompt, navigate to <i>[JAVA HOME]</i>/bin and type the following command to import the root certificate of the CA with which the CSR has been signed:</p><p>If the root certificate is not in the browser, also import it there.</p> 
    <note> 
     <p>Replace <i>[JAVA_HOME] with the directory where the JDK is installed, and replace the text in italic with values that correspond with your environment.</i></p> 
    </note></li> 
   <li><p>In a command prompt, navigate to <i>[JAVA HOME]</i>/bin and type the following command to import the credential into the keystore:</p> 
    <note> 
     <ul> 
      <li>Replace [JAVA_HOME] with the directory where the JDK is installed, and replace the text in italic with values that correspond with your environment.</li> 
      <li>The imported CA signed certificate will replace a self-signed public certificate if it exists.</li> 
     </ul> 
    </note></li> 
   <li><p>Complete steps 13 - 18 of Create an SSL credential. </p></li> 
  </ol> 
 </body> 
</html>