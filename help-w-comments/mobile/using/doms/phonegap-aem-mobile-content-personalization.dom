<?xml version="1.1" encoding="UTF-8" standalone="yes"?> 
<html> 
 <head> 
  <meta content="/apps/help/templates/article-3" name="cq:template" /> 
  <meta content="2017-10-31T16:26:19.396-0400" name="firstPublishExternalDate" /> 
  <meta content="AEM Mobile content personalization" name="navTitle" /> 
  <meta content="2017-10-12T21:46:58.665-0400" name="mwpw_migration_script_version" /> 
  <meta content="2018-05-11T10:02:02.750-0400" name="cq:lastModified" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/MOBILE" name="primaryProductTag" /> 
  <meta content="/content/docs/en/aem/6-3/develop/mobile-apps/developing-in-phonegap/developing-mobile-applications/aem-mobile-content-personalization" name="qaNotes" /> 
  <meta content="/content/help/en/experience-manager/6-4/mobile/morehelp/developing-adobe-phonegap-enterprise;/content/help/en/experience-manager/6-4/mobile/morehelp/developing-adobe-phonegap-enterprise" name="moreHelpPaths" /> 
  <meta content="2017-12-13T19:01:34.989-0500" name="jcr:created" /> 
  <meta content="" name="jcr:primaryType" /> 
  <meta content="Follow this page to learn about AEM Mobile content personalization feature that allows AEM authors to personalize mobile app content by leveraging Adobe Target. " name="seoDescription" /> 
  <meta content="" name="jcr:versionHistory" /> 
  <meta content="en_us" name="jcr:language" /> 
  <meta content="AEM Mobile content personalization" name="seoTitle" /> 
  <meta content="2018-05-11T10:02:02.749-0400" name="locHandOffDate" /> 
  <meta content="Activate" name="cq:lastReplicationAction" /> 
  <meta content="content_type:reference;products:SG_EXPERIENCEMANAGER/6.4/MOBILE;topic_tags:developing-adobe-phonegap-enterprise" name="cq:tags" /> 
  <meta content="3a9c465c-06be-4cbf-840a-2fa4fb8e2edc" name="jcr:predecessors" /> 
  <meta content="2018-05-04T05:13:30.609-0400" name="publishExternalDate" /> 
  <meta content="help/components/pages/article-3" name="sling:resourceType" /> 
  <meta content="mix:versionable" name="jcr:mixinTypes" /> 
  <meta content="2018-05-04T05:13:30.609-0400" name="lastPublishExternalDate" /> 
  <meta content="https://helpx.adobe.com/experience-manager/6-4/mobile/using/phonegap-aem-mobile-content-personalization.html" name="publishExternalURL" /> 
  <meta content="msm-service" name="cq:lastModifiedBy" /> 
  <meta content="" name="jcr:baseVersion" /> 
  <meta content="efdfc713-306c-4579-ab1c-40e5254c8a85" name="jcr:uuid" /> 
  <meta content="admin" name="jcr:createdBy" /> 
  <meta content="AEM Mobile content personalization" name="jcr:title" /> 
  <meta content="jsyal" name="cq:lastReplicatedBy" /> 
  <meta content="false" name="isReadyForLocalization" /> 
  <meta content="2018-05-04T05:13:30.609-0400" name="topicBrowsingSortDate" /> 
  <meta content="/etc/designs/help" name="cq:designPath" /> 
  <meta content="2018-10-27T23:44:04.161-0400" name="cq:lastReplicated" /> 
  <meta content="bohnert@adobe.com" name="lr_lastReplicatedBy" /> 
  <meta content="true" name="jcr:isCheckedOut" /> 
  <meta content="User" name="contentOwner" /> 
  <meta content="2017-10-12T21:46:00.000-0400" name="qaDate" /> 
 </head> 
 <body> 
  <note> 
   <p>Adobe recommends using the SPA Editor for projects that require single page application framework-based client-side rendering (e.g. React). <a href="../../sites/developing/using/spa-overview.md">Learn more</a>.</p> 
  </note> 
  <note> 
   <p>This document is part of the <a href="../../mobile/using/getting-started-aem-mobile.md">Getting Started with AEM Mobile</a> Guide, a recommended starting point for AEM Mobile reference.</p> 
  </note> 
  <p>The AEM Mobile content personalization feature allows <a href="#author">AEM Authors</a> to personalize mobile app content by leveraging <a href="http://www.adobe.com/ca/marketing-cloud/testing-targeting.html">Adobe Target</a>. This allows the delivery of targeted offers to mobile application users. Adobe Experience Manager Mobile provides the ability to create, target, and deliver content that will provide the user with content that is specific for their own individual tastes.</p> 
  <p>As is often the case in AEM, in order for authors to begin creating this content, administrators and developers need to first prepare the environment.</p> 
  <p><a href="#administrator">AEM dministrators</a> are required to establish a connection between AEM Mobile and the Adobe Target Cloud Service.</p> 
  <p>Meanwhile, AEM Mobile <a href="#developer">developers</a> need to modify their existing scripts to facilitate targeted content authoring.</p> 
  <h2>For Administrators</h2> 
  <p>There's a number of steps that need to come together before content authors can start to generate targeted content for mobile apps: There's getting the right set of permissions for users and groups, creating cloud services, configuring the application for the activity, and finally generating the content.</p> 
  <p>This article will guide you through the process used to configure the <a href="https://github.com/Adobe-Marketing-Cloud-Apps/aem-mobile-hybrid-reference">AEM Mobile Hybrid Reference Application</a> for targeting. </p> 
  <p>The assumption going forward is that the AEM Mobile Hybrid Reference Application has been successfully deployed and accessible via the AEM Mobile Dashboard.</p> 
  <p><a name="administrator"></a>Before authors can generate targeted content within an applications, your AEM instance needs to be <a href="../../mobile/using/aem-mobile-configuring-cloud-service.md" style="font-size: 16px; font-style: normal; font-weight: 400; line-height: 25px;">configured with the Adobe Target Cloud Service.</a></p> 
  <h4>Permissions</h4> 
  <p>Users that need access to the personalization console need to be part of the `target-activity-authors` group. </p> 
  <p>It is suggested that as part of the users and group setup that the target-activity-group should be added to the apps-admins group. By adding the target-activity-authors group this will allow users ability to see the Personalization navigation menu entry.</p> 
  <p> </p> 
  <note> 
   <p>Forgetting to add the users or groups that you want to have access to the personalization admin console to the target-activity-authors group will prevent users from seeing the personalization console.</p> 
  </note> 
  <h4>Cloud Services</h4> 
  <p>To get targeted content working for mobile applications there are two services that need to be configured: The Adobe Target Service and the Adobe Mobile Services service. The Adobe Target Service provides the engine for processing client requests and returning the personalized content. The Adobe Mobile Services service provides the connection between the Adobe services and the mobile application via the ADBMobileConfig.json file which is consumed by the AMS Cordova plugin. From the AEM Mobile Dashboard you can configure your application by adding the two services. </p> 
  <p> </p> 
  <p>From the AEM Mobile Dashboard locate the Manage Cloud Services and click the + button. </p> 
  <img imageRotate="0" src="assets/chlimage_1-42.png" title="Mobile Cloud Services" /> 
  <p> </p> 
  <p>From the Add Cloud Service wizard select the "Adobe Target" cloud service card and click Next.</p> 
  <img imageRotate="0" src="assets/chlimage_1-43.png" /> 
  <p> </p> 
  <p>From the Select a Configuration dropdown you can either create a new configuration or select from an existing one. To create a new configuration select "Create Configuration" from the dropdown. Enter a title for the Target configuration. Enter your client code, email, and password that are associated with your Target account. If you do not know the values for these fields contact the Adobe Target support. Click the "Verify" button to validate the credentials. Once verified, click the Submit button to create the cloud service.</p> 
  <note> 
   <p>The cloud service that gets created is automatically associated with the mobile application via the wizard. The cq:cloudserviceconfigs property value gets set on the jcr:content node of the apps group node. For the hybrid app sample it gets set on /content/mobileapps/hybrid-reference-app/jcr:content with the value pointing to the automatically generated framework node located at /etc/cloudservices/testandtarget/adobe-target---aem-apps/framework. The framework node has two properties set by default, gender and age. The framework is only used by AEM previewing and does not have any impact on the device.</p> 
  </note> 
  <p> </p> 
  <p>After completion of the wizard the Manage Cloud Service tile will contain the Target cloud service, however it contains a warning about a missing Adobe Mobile Service account. </p> 
  <img imageRotate="0" src="assets/chlimage_1-44.png" /> 
  <h4>Adobe Mobile Services</h4> 
  <p>It is necessary to link a Adobe Mobile Services (AMS) account to the application as well, the AMS service provides the required ADBMobileConfig.json file which contains the Target client code information. Before creating an association with the AMS account, the AMS account needs to be modified by a user that has permissions to AMS. </p> 
  <h4>Client Code</h4> 
  <p>To login to the AMS services visit <a href="https://mobilemarketing.adobe.com/">https://mobilemarketing.adobe.com</a>, select the mobile application and click the settings. Locate the SDK Target Options field and place the client code into the field and click Save. </p> 
  <img imageRotate="0" src="assets/chlimage_1-45.png" /> 
  <p>Now that the client code has been associated with the mobile application, when the AMS cloud service is configured via the Adobe Mobile Dashboard the settings for the service settings will be delivered via the ADBMobileConfig.json file.</p> 
  <h4>Adobe Mobile Service Cloud Service</h4> 
  <p>Now that AMS has been configured, it's time to associate the mobile application in the Adobe Mobile Dashboard. From the AEM Mobile Dashboard locate the Manage Cloud Services and click the + button. </p> 
  <img imageRotate="0" src="assets/chlimage_1-46.png" /> 
  <p>Select the Adobe Mobile Services card and click Next.</p> 
  <img imageRotate="0" src="assets/chlimage_1-47.png" /> 
  <p> </p> 
  <p>From the Create or Select wizard step select the Mobile Service dropdown and select the Create Configuration entry. Provide a title, company, username, password and select the appropriate data center. If you do not know these values contact your Adobe Mobile Service administrator to obtain them. Once all fields have been filled out click the Verify button. The verification process goes to AMS and verifies the credentials for the account, and upon successful validation, a list of Mobile Applications will be populated where you select the associated mobile application from the dropdown. Click the Submit button to complete the wizard. The process may take a bit of time to obtain the configuration data and any associated analytics with the application. Once the process is complete click the Done button from the modal to return back to the Adobe Mobile Dashboard.</p> 
  <p>Returning back to the Mobile Dashboard the Manage Cloud Services tile will contain the AMS cloud service. You will also note that the Analyze Metrics tile will be populated with lifecycle reports.</p> 
  <img imageRotate="0" src="assets/chlimage_1-48.png" /> 
  <h2>For Authors</h2> 
  <p><strong><a name="author"></a>Prerequisite:</strong> As mentioned above, administrators need to configure the connection to the Adobe Target Service before authors can generate new targeted content.</p> 
  <p>Once the Administrator has configured the two cloud services and the developer has configured the mobileappoffers handler, content authors can now start generating targeted experiences. </p> 
  <p> </p> 
  <p>Authoring targeted content within an AEM Mobile app follows a similar procedure to authoring AEM Sites:</p> 
  <p>See here for a complete overview on <a href="../../sites/authoring/using/personalization.md">Authoring targeted content in AEM</a></p> 
  <h2>For Developers</h2> 
  <p><a name="developer"></a>AEM developers building mobile applications should continue to follow the patterns commonly used throughout AEM when developing components. Here, we will walk you through the necessary steps to enable content authors to create targeted content:</p> 
  <h4>Adobe Target ContentSync Handlers</h4> 
  <p>To deliver content to the user's device content is generated by rendering the offers which are created by AEM content authors. To handle the rendering of target offers there is a new content sync handler that will process the offers. Using the Hybrid Reference Application as our sample, the en (english) content package contains the ContentSyncConfig with a <a href="https://github.com/Adobe-Marketing-Cloud-Apps/aem-mobile-hybrid-reference/blob/master/aem-package/content-author/src/main/content/jcr_root/content/mobileapps/hybrid-reference-app/en/_jcr_content/pge-app/app-config-dev/targetOffers/.content.xml">mobileappoffers</a> handler. The next step is crucial for rendering offers to the device. The mobileappoffers handler has a path property that identifies the path to the personalization activity that are to be used for the application. </p> 
  <p>For example if there is an activity that is located at <i>/content/campaigns/hybridref</i> copy this path and paste it as the value to the <i>path</i> property of the mobileappoffers handler.</p> 
  <note> 
   <p>For the Hybrid Reference Application there are two mobileappoffers handlers one for the dev and one for productions.</p> 
  </note> 
  <p> </p> 
  <p>Once the activities path has been set in the mobileappoffers handler's path property save the handler. The handler will now be ready to start rendering offers for our mobile devices.</p> 
  <h4>Render Mode</h4> 
  <p>The mobileappoffers handler is configured differently for publish and dev setups. For publish setups there is a property called <i>renderMode</i> with a value of <i>publish</i> set on the cq:ContentSyncConfig node. The mobileappoffers handler references the renderMode and, if set to publish, will modify the mbox id that gets created. By default, mboxes that are created by AEM have an --author value appended to the mbox id. This identifies that the activity has not been published and should use the unpublished campaign for offer resolutions. </p> 
  <p>When content is staged via the Adobe Mobile Dashboard, staged content is considered production ready content and is rendered via the non-dev Content Sync Config. Rendering this way will cause the --author to be removed from all mbox ids and expect a published activity to be available on the Target server. Before testing staged content make sure the activity has been published.</p> 
  <h3>Personalization App Development</h3> 
  <h4>Components</h4> 
  <p>The foundation for any content is typically a page component that extends either one of the base AEM page components wcm/foundation/components/page or foundation/components/page depending if you're using HTL or JSPs. The duration of these steps will focus on using the wcm/foundation/components/page component. The basic structure of the page component is broken down into multiple scripts, with each script providing the specific purpose of allowing the developer to organize and override their code if needed. The two scripts that are of interest for Personalization is the head.html and body.html. These two scripts provide an area where code can be injected to support the Context Hub, Cloud Services, and Mobile authoring. </p> 
  <p>Here is an overview of the two primary scripts used to enable content targeting.</p> 
  <h4>head.html</h4> 
  <p>To provide the author the ability to target their content the target menu needs to be added to the page so that the author can change context from edit mode to targeting mode. To enable this feature, the developer should modify the head.html script to include the following snippet of code near the top of the head.html or as close to the &amp;lt;title&amp;gt;&amp;lt;/title&amp;gt; element as possible.</p> 
  <codeblock class="syntax xml">
    &lt;meta&amp;nbsp;data-sly-test="${!wcmmode.disabled}"&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;div&amp;nbsp;data-sly-call="${clientLib.all&amp;nbsp;@&amp;nbsp;categories='personalization.kernel'}"&amp;nbsp;data-sly-unwrap&gt;&lt;/div&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;div&amp;nbsp;data-sly-resource="${'config'&amp;nbsp;@&amp;nbsp;resourceType='cq/personalization/components/clientcontext_optimized/config'}"&amp;nbsp;data-sly-unwrap&gt;&lt;/div&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;div&amp;nbsp;data-sly-resource="${'contexthub'&amp;nbsp;@&amp;nbsp;resourceType='granite/contexthub/components/contexthub'}"&amp;nbsp;data-sly-unwrap&gt;&lt;/div&gt;!!discoiqbr!!&lt;/meta&gt; 
  </codeblock> 
  <note> 
   <p>Take note that the script should only be included when the WCM Mode has not beed disabled such that when the WCM Mode is disabled (see ContentSync handler's section for details) the script will not be included in the final application code.</p> 
  </note> 
  <p>To provide authors the ability to preview the targeted content, the editor needs to be able to locate the configuration of the Adobe Target cloud service. The code block below adds two important scripts. The first adding the ability for the page to locate the associated Target cloud service and make the calls out to Adobe Target. The second is the addition of the cq.apps.targeting category. </p> 
  <p>The <strong>cq.apps.targeting</strong> category overrides the default cq/personalization/component/target component and uses the mobileapps/components/target component that renders offers specifically for mobile application consumption. More details of this will be discussed in the Target Component section.</p> 
  <p>The code should be added in the head.html and placed just before the end of the &amp;lt;/head&amp;gt; element. </p> 
  <codeblock class="syntax xml">
    &lt;div&amp;nbsp;data-sly-test="${!wcmmode.disabled}"&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;div&amp;nbsp;data-sly-include="/libs/cq/cloudserviceconfigs/components/servicelibs/servicelibs.jsp"&amp;nbsp;data-sly-unwrap&gt;&lt;/div&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;meta&amp;nbsp;data-sly-call="${clientLib.all&amp;nbsp;@&amp;nbsp;categories='cq.apps.targeting'}"&amp;nbsp;data-sly-unwrap&gt;&lt;/meta&gt;!!discoiqbr!!&lt;/div&gt; 
  </codeblock> 
  <note> 
   <p>Note that the block of code is wrapped within a WCM Mode not being disabled therefore only coming into play while the content author is working on creating content. The cloud service scripts will not be added to the generated mobile runtime code.</p> 
  </note> 
  <h4>body.html</h4> 
  <p>To enable the content author the ability to test different personas the body.html script needs to include the following code block as the first child of the body element. </p> 
  <codeblock class="syntax xml">
    &lt;div&amp;nbsp;data-sly-test="${!wcmmode.disabled}"&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;div&amp;nbsp;data-sly-resource="${'clientcontext'&amp;nbsp;@&amp;nbsp;resourceType='cq/personalization/components/clientcontext_optimized'}"&amp;nbsp;data-sly-unwrap&gt;&lt;/div&gt;!!discoiqbr!!&lt;/div&gt; 
  </codeblock> 
  <p>The last bit of code required is at the very bottom of the body.html. This bit of code looks for the associated cloud service and injects the appropriate targeting engine code.</p> 
  <codeblock class="syntax xml">
    &lt;div&amp;nbsp;data-sly-test="${!wcmmode.disabled}"&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;div&amp;nbsp;data-sly-resource="${'cloudservices'&amp;nbsp;@&amp;nbsp;resourceType='cq/cloudserviceconfigs/components/servicecomponents'}"&amp;nbsp;data-sly-unwrap&gt;&lt;/div&gt;!!discoiqbr!!&lt;/div&gt; 
  </codeblock> 
  <h3>Reference Application</h3> 
  <p>Examples of head.html and body.html can be found in the <a href="https://github.com/Adobe-Marketing-Cloud-Apps/aem-mobile-hybrid-reference">AEM Mobile Hybrid Reference Application</a> showing the developer where to place the script blocks within the two scripts.</p> 
  <h3>Content Sync Handlers</h3> 
  <p>When the content author has finished creating content for the mobile application the next step is to download the source and build the application, or stage the content to be published. There are a number of steps that the developer is involved with to make this happen. To aid in rendering the content AEM Mobile utilizes content sync handlers to render and package the content. A new content sync handler has been introduced for the Personalization use case to render targeted content. The 'mobileappoffers' handler knows how to render the associated target offers that have been created by the content author. The mobileappoffers handler extends the abstract pages update handler therefore, many of the properties are similar. The details of the mobileappoffers handler has the following properties.</p> 
  <table border="1" cellpadding="1" cellspacing="0" width="100%"> 
   <tbody> 
    <tr> 
     <td><strong>Property</strong></td> 
     <td><strong>Value</strong></td> 
     <td><strong>Description</strong></td> 
    </tr> 
    <tr> 
     <td>rewrite</td> 
     <td>+ relativeParentPath<p> - "/"</p> </td> 
     <td>The rewrite property identifies how paths within the content should be rewritten.</td> 
    </tr> 
    <tr> 
     <td>includedPageTypes</td> 
     <td><p>"cq/personalization/components/teaserpage",</p> <p>"cq/personalization/components/offerproxy"</p> </td> 
     <td>The includePageTypes property is optional, defaulting to pages that have resource types of cq/personalization/components/teaserpage and cq/personalization/components/offerproxy. These two resource types are the default resource types used when content is targeted. If additional resource types need to be supported they should be added to the list of includePageTypes.</td> 
    </tr> 
    <tr> 
     <td>locationRoot</td> 
     <td>/content/mobileapps/&lt;app&gt;</td> 
     <td>The location of the App.</td> 
    </tr> 
    <tr> 
     <td>type</td> 
     <td>mobileappoffers</td> 
     <td>The name of the handler being mobileappoffers.</td> 
    </tr> 
    <tr> 
     <td>selector</td> 
     <td>tandt</td> 
     <td>The tandt selector is used to render the targeted content. </td> 
    </tr> 
    <tr> 
     <td>targetRootDirectory</td> 
     <td>www</td> 
     <td>The root directory where to persist the rendered content.</td> 
    </tr> 
    <tr> 
     <td>includeImages</td> 
     <td>true | false</td> 
     <td>If true any images included in the offer will be rendered. If false images will be skipped.</td> 
    </tr> 
    <tr> 
     <td>includeVideos</td> 
     <td>true | false</td> 
     <td>If true any videos included in the offer will be rendered. If false videos will be skipped.</td> 
    </tr> 
    <tr> 
     <td>path</td> 
     <td>/content/campaigns/&lt;brand&gt;</td> 
     <td>Points to the campaign's brand which the offers participate in. Currently all offers must come from the same campaign.</td> 
    </tr> 
    <tr> 
     <td>deep</td> 
     <td>true | false</td> 
     <td>If true recursively render all child pages, if false do not recurse. </td> 
    </tr> 
    <tr> 
     <td>extension</td> 
     <td>html</td> 
     <td>Sets the extension for the resource being rendered. Set to html such that the pages have a .html extension.</td> 
    </tr> 
   </tbody> 
  </table> 
  <note> 
   <p>The <a href="https://github.com/Adobe-Marketing-Cloud-Apps/aem-mobile-hybrid-reference">AEM Mobile Hybrid Reference App</a> has the default mobileappoffer handler's configuration. The path property in the sample is empty as it depends on the campaign location. After a Campaign author has created a Campaign, the apps administrator should associate the Campaign with the handler by specifying the path property to point to the Campaign.</p> 
  </note> 
  <h3>Target Component</h3> 
  <p>To help render content specifically for mobile applications, AEM Mobile uses the mobileapps/components/target component. The mobile target component extends the cq/personalization/components/target component and overrides the engine_tnt.jsp script. By overriding the engine_tnt.jsp this allows AEM Mobile to control the generated HTML for the mobile apps use case. For every component that is targeted by a content author, an associated mbox is created by the engine_tnt.jsp. </p> 
  <p>For each mbox an attribute of <strong>cq-targeting</strong> is added allowing application developers to write custom code to consume and use however they please. The <a href="https://github.com/Adobe-Marketing-Cloud-Apps/aem-mobile-hybrid-reference">AEM Mobile Hybrid Reference App</a> has an example of a Angular directive that uses the cq-targeting attribute. The concept of content replacement when and how it is done is very much up to the mobile application developer. There is a Mobile SDK that is delivered via AEM /etc/clientlibs/mobileapps/js/mobileapps.js that provides an API to call the Adobe Targeting service. It is up to the application developer to specify when that call should be made according to the design of their application.</p> 
  <h2>What's Next?</h2> 
  <ol> 
   <li><a href="/content/docs/en/aem/6-3/develop/mobile-apps/starting-a-new-aem-mobile-app">Start my AEM Mobile app experience</a></li> 
   <li><a href="/content/docs/en/aem/6-3/develop/mobile-apps/manage-my-apps-content">Manage my app's content</a></li> 
   <li><a href="/content/docs/en/aem/6-3/author/authoring-mobile-apps/build-app-through-adobe-phonegap-build-cloud-service">Build my application</a></li> 
   <li><a href="/content/docs/en/aem/6-3/develop/mobile-apps/apps/intro-to-app-analytics">Track my app's performance with Adobe Mobile Analytics</a></li> 
   <li><a href="../../mobile/using/phonegap-aem-mobile-content-personalization.md">Deliver a personalized app experience with Adobe Target</a></li> 
   <li><strong><h5><a href="/content/docs/en/aem/6-3/develop/mobile-apps/apps/push-notifications">Send important messages to my users</a></h5> </strong></li> 
  </ol> 
 </body> 
</html>