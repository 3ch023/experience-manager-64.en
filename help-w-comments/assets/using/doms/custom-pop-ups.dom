<?xml version="1.1" encoding="UTF-8" standalone="yes"?> 
<html> 
 <head> 
  <meta content="checked_not_improved" name="acrolinxStatus" /> 
  <meta content="red" name="acrolinxPageStatus" /> 
  <meta content="asgupta" name="acrolinxLastCheckedBy" /> 
  <meta content="Using Quickviews to create custom pop-ups" name="seoTitle" /> 
  <meta content="wmyersta@adobe.com" name="lr_lastReplicatedBy" /> 
  <meta content="true" name="jcr:isCheckedOut" /> 
  <meta content="" name="jcr:versionHistory" /> 
  <meta content="2017-10-31T16:35:01.387-0400" name="publishExternalDate" /> 
  <meta content="Rick Brough" name="contentOwner" /> 
  <meta content="37db8b7d-034a-4d39-9dd7-b8f91fc4e883" name="jcr:predecessors" /> 
  <meta content="en_us" name="jcr:language" /> 
  <meta content="2017-10-31T16:35:01.387-0400" name="topicBrowsingSortDate" /> 
  <meta content="" name="jcr:primaryType" /> 
  <meta content="2018-04-24T11:58:24.155-0400" name="locHandOffDate" /> 
  <meta content="/content/docs/en/aem/6-3/author/assets/dynamic-media/custompopups" name="qaNotes" /> 
  <meta content="2017-10-12T21:46:58.665-0400" name="mwpw_migration_script_version" /> 
  <meta content="78" name="acrolinxSentences" /> 
  <meta content="carlino" name="cq:lastReplicatedBy" /> 
  <meta content="2017-10-31T16:35:01.387-0400" name="firstPublishExternalDate" /> 
  <meta content="Using Quickviews to create custom pop-ups" name="navTitle" /> 
  <meta content="926167d4-d655-4538-b5ee-0a669cb1f620" name="jcr:uuid" /> 
  <meta content="false" name="isReadyForLocalization" /> 
  <meta content="2017-10-12T21:46:00.000-0400" name="qaDate" /> 
  <meta content="admin" name="jcr:createdBy" /> 
  <meta content="/content/help/en/experience-manager/6-4/assets/morehelp/dynamic-media;/content/help/en/experience-manager/6-4/assets/morehelp/dynamic-media" name="moreHelpPaths" /> 
  <meta content="" name="jcr:baseVersion" /> 
  <meta content="Using Quickviews to create custom pop-ups" name="jcr:title" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/ASSETS" name="primaryProductTag" /> 
  <meta content="/apps/help/templates/article-3" name="cq:template" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/ASSETS;topic_tags:dynamic-media;content_type:reference" name="cq:tags" /> 
  <meta content="http://acrolinx.corp.adobe.com:8031/output/en/custom_pop_ups_krs_workflow_f3c2f2ccebf6138e_123_report.xml" name="acrolinxReportURL" /> 
  <meta content="991" name="acrolinxWords" /> 
  <meta content="2019-01-12T17:28:23.086-0500" name="acrolinxDate" /> 
  <meta content="2018-04-24T11:58:24.155-0400" name="cq:lastModified" /> 
  <meta content="mix:versionable" name="jcr:mixinTypes" /> 
  <meta content="/etc/designs/help" name="cq:designPath" /> 
  <meta content="The default Quickview is used in ecommerce experiences whereby a pop-up is displayed with product information to drive a purchase. You can trigger custom content to display in the pop-ups." name="seoDescription" /> 
  <meta content="Activate" name="cq:lastReplicationAction" /> 
  <meta content="2018-03-14T09:01:16.326-0400" name="jcr:created" /> 
  <meta content="2017-10-31T16:35:01.387-0400" name="lastPublishExternalDate" /> 
  <meta content="https://helpx.adobe.com/experience-manager/6-3/assets/using/custom-pop-ups.html" name="publishExternalURL" /> 
  <meta content="help/components/pages/article-3" name="sling:resourceType" /> 
  <meta content="rbrough" name="cq:lastModifiedBy" /> 
  <meta content="2018-04-03T08:07:45.312-0400" name="cq:lastReplicated" /> 
 </head> 
 <body> 
  <p>The default Quickview is used in ecommerce experiences whereby a pop-up is displayed with product information to drive a purchase. However, you can trigger custom content to display in the pop-ups. Depending on the viewer you are using, this functionality lets users click on a hotspot, or a thumbnail image, or on an image map to see information or related content.</p> 
  <p>Quickviews are supported by the following viewers in Dynamic Media:</p> 
  <ul> 
   <li>Interactive Images (clickable hotspots)<br /> </li> 
   <li>Interactive Video (clickable thumbnail images during video playback)<br /> </li> 
   <li>Carousel Banners (clickable hotspots or image maps)</li> 
  </ul> 
  <p>While the functionality of each viewer differs, the process of creating a Quickview is the same across all three supported viewers.</p> 
  <p><strong>To use Quickviews to create custom pop-ups,</strong><br /> </p> 
  <ol> 
   <li><p>Create a Quickview for an uploaded asset.</p> <p>You typically create a Quickview the same time you edit an asset for use with the viewer you are using.</p>  
    <table border="1" cellpadding="1" cellspacing="0" height="80" width="710"> 
     <tbody> 
      <tr> 
       <td><strong>Viewer you are using</strong></td> 
       <td><strong>Complete these steps to create the Quickview</strong></td> 
      </tr> 
      <tr> 
       <td>Interactive Images</td> 
       <td><a href="../../assets/using/interactive-images.md#addinghotspotstoanimagebanner" target="_blank">Adding hotspots to an image banner</a>.</td> 
      </tr> 
      <tr> 
       <td>Interactive Videos</td> 
       <td><a href="../../assets/using/interactive-videos.md#addinginteractivitytoyourvideo" target="_blank">Adding interactivity to your video</a>.</td> 
      </tr> 
      <tr> 
       <td>Carousel Banners</td> 
       <td><a href="../../assets/using/carousel-banners.md#addinghotspotsorimagemapstoanimagebanner" target="_blank">Adding Hotspots or Image Maps to a Banner</a>.<br /> </td> 
      </tr> 
     </tbody> 
    </table> </li> 
   <li><p>Obtain the viewer embed code to Integrate the viewer within your website.</p> 
    <table border="1" cellpadding="1" cellspacing="0" width="100%"> 
     <tbody> 
      <tr> 
       <td><strong>Viewer you are using</strong><br /> </td> 
       <td><strong>Complete these steps to integrate the viewer with your website</strong></td> 
      </tr> 
      <tr> 
       <td>Interactive image</td> 
       <td><a href="../../assets/using/interactive-images.md#integratinganinteractiveimagewithyourwebsite" target="_blank">Integrating an interactive image with your website</a>.<br /> </td> 
      </tr> 
      <tr> 
       <td>Interactive video<br /> </td> 
       <td><a href="../../assets/using/interactive-videos.md#integratinganinteractivevideowithyourwebsite" target="_blank">Integrating an interactive video with your website</a>.<br /> </td> 
      </tr> 
      <tr> 
       <td>Carousel banner</td> 
       <td><a href="../../assets/using/carousel-banners.md#addingacarouselbannertoyourwebsitepage" target="_blank">Adding a carousel banner to your website page</a>.<br /> </td> 
      </tr> 
     </tbody> 
    </table> </li> 
   <li><p>The viewer you are using now needs to know how to use the Quickview.</p> <p>To do this the viewer uses a handler called <span class="code">QuickViewActive</span>.</p> <p><strong>Example</strong><br /> Suppose you were using the following sample embed code on your web page for an interactive image:</p>  <img imageRotate="0" src="assets/chlimage_1-294.png" /><p>The handler is loaded into the viewer using <span class="code">setHandlers</span>:</p>  <p><strong>Example<br /> </strong>Using the sample embed code example from above, we have the following code:<strong><br /> </strong></p> 
    <codeblock class="syntax xml">
      s7interactiveimageviewer.setHandlers({!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;quickViewActivate":&amp;nbsp;function(inData)&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;sku=inData.sku;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;genericVariable1=inData.genericVariable1;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;genericVariable2=inData.genericVariable2;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;loadQuickView(sku,genericVariable1,genericVariable2);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!}) 
    </codeblock><p>Learn more about <span class="code">setHandlers()</span> method at the following:</p> 
    <ul> 
     <li>Interactive Image viewer: <a href="https://marketing.adobe.com/resources/help/en_US/s7/viewers_ref/r_html5_aem_int_image_viewer_javascriptapiref_sethandlers.html" target="_blank">https://marketing.adobe.com/resources/help/en_US/s7/viewers_ref/r_html5_aem_int_image_viewer_javascriptapiref_sethandlers.html</a></li> 
     <li>Interactive Video viewer: <a href="https://marketing.adobe.com/resources/help/en_US/s7/viewers_ref/r_html5_aem_int_video_javascriptapiref_sethandlers.html" target="_blank">https://marketing.adobe.com/resources/help/en_US/s7/viewers_ref/r_html5_aem_int_video_javascriptapiref_sethandlers.html</a></li> 
    </ul>  </li> 
   <li><p>You now need to configure the quickViewActivate<span class="code"></span> handler.</p> <p>The quickViewActivate handler controls the Quickviews in the viewer. The handler contains the variable list and function calls for use with the Quickview. The embed code provides mapping for the SKU variable set in the Quickview as well as a sample loadQuickView function call.</p> <p><strong>Variable mapping</strong><br /> Map variables for use in your web page to the SKU value and generic variables contained in the Quickview:</p>  <p>The provided embed code has a sample mapping for the SKU variable:</p>  <p>Map additional variables from the Quickview too, as in the following:</p>  <p><strong>Function call</strong><br /> The handler also requires a function call for the Quickview to work. The function is assumed to be accessible by your host page. The embed code provides a sample function call:</p>  <p>The sample function call assumes the function <span class="code">loadQuickView()</span> exists and is accessible.</p> <p>Learn more about quickViewActivate method at the following:</p> 
    <ul> 
     <li>Interactive Image viewer: <a href="https://marketing.adobe.com/resources/help/en_US/s7/viewers_ref/c_html5_aem_interactive_image_event_callbacks.html">https://marketing.adobe.com/resources/help/en_US/s7/viewers_ref/c_html5_aem_interactive_image_event_callbacks.html</a></li> 
     <li>Interactive Video viewer: <a href="https://marketing.adobe.com/resources/help/en_US/s7/viewers_ref/c_html5_aem_int_video_event_callbacks.html">https://marketing.adobe.com/resources/help/en_US/s7/viewers_ref/c_html5_aem_int_video_event_callbacks.html</a></li> 
     <li>Interactive data support in Interactive Video viewer: <a href="https://marketing.adobe.com/resources/help/en_US/s7/viewers_ref/c_html5_aem_int_video_int_data_support.html">https://marketing.adobe.com/resources/help/en_US/s7/viewers_ref/c_html5_aem_int_video_int_data_support.html</a></li> 
    </ul> </li> 
   <li><p>Do the following:</p> 
    <ul> 
     <li>Uncomment the setHandlers section of the embed code.</li> 
     <li>Map any additional variables contained in the Quickview. 
      <ul> 
       <li>Update the <span class="code">loadQuickView(sku,<i>var1</i>,<i>var2</i>)</span> call if you are adding additional variables.</li> 
      </ul> </li> 
     <li>Create a simple loadQuickView () function on page, outside of the viewer.<br /> For example, the following writes the value of sku to the browser console:</li> 
    </ul>  
    <codeblock class="syntax xml">
      function&amp;nbsp;loadQuickView(sku){!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log&amp;nbsp;("quickview&amp;nbsp;sku&amp;nbsp;value&amp;nbsp;is&amp;nbsp;"&amp;nbsp;+&amp;nbsp;sku);!!discoiqbr!!} 
    </codeblock> 
    <ul> 
     <li>Upload a test HTML page to a webserver and open.<br /> With the variables from the Quickview mapped and the function call in place, the browser console writes the variable value to the browser console using the sample function provided.</li> 
    </ul> </li> 
   <li><p>You can now use a function to invoke a simple pop-up in the Quickview. The following example uses a <span class="code">DIV</span> for a popup.</p> </li> 
   <li><p>Style the pop-up <span class="code">DIV</span> in the following manner. Add your own additional styling as desired.</p> 
    <codeblock class="syntax xml">
      &lt;style&amp;nbsp;type="text/css"&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#quickview_div{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;position:&amp;nbsp;absolute;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;z-index:&amp;nbsp;99999999;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;display:&amp;nbsp;none;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&lt;/style&gt; 
    </codeblock></li> 
   <li><p>Place the pop-up <span class="code">DIV</span> in the body of your HTML page.</p> <p>One of the elements is set with an ID that is updated with sku value when the user invokes a Quickview. The example also includes a simple button to hide the pop-up again after it becomes visible.</p> 
    <codeblock class="syntax xml">
      &lt;div&amp;nbsp;id="quickview_div"&amp;nbsp;&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;table&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;tr&gt;&lt;td&gt;&lt;input&amp;nbsp;id="btnClosePopup"&amp;nbsp;type="button"&amp;nbsp;value="Close"&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;onclick='document.getElementById("quickview_div").style.display="none"'&amp;nbsp;/&gt;&lt;br&amp;nbsp;/&gt;&lt;/td&gt;&lt;/tr&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;tr&gt;&lt;td&gt;SKU&lt;/td&gt;&lt;td&gt;&lt;input&amp;nbsp;type="text"&amp;nbsp;id="txtSku"&amp;nbsp;name="txtSku"&gt;&lt;/td&gt;&lt;/tr&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/table&gt;!!discoiqbr!!&lt;/div&gt; 
    </codeblock></li> 
   <li><p>Add a function to update the sku value in the pop-up; make the pop-up visible by replacing the simple function created in step 5. with the following:</p> 
    <codeblock class="syntax xml">
      &lt;script&amp;nbsp;type="text/javascript"&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;function&amp;nbsp;loadQuickView(sku){!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;document.getElementById("txtSku").setAttribute("value",sku);&amp;nbsp;//&amp;nbsp;write&amp;nbsp;sku&amp;nbsp;value!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;document.getElementById("quickview_div").style.display="block";&amp;nbsp;//&amp;nbsp;show&amp;nbsp;popup!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&lt;/script&gt; 
    </codeblock></li> 
   <li><p>Upload a test HTML page to your webserver and open. The viewer displays the pop-up <span class="code">DIV</span> when a user invokes a Quickview.</p> </li> 
   <li><p><strong>How to display the custom pop-up in full screen mode</strong><br /> Some viewers, such as the Interactive Video viewer, support display in fullscreen mode. However, using the pop-up as described in the previous steps causes it to display behind the viewer while in full screen mode.</p> <p>To have the pop-up display in both standard and full screen modes, you attach the pop-up to the viewer container. To accomplish this, you can use a second handler method, <span class="code">initComplete</span>. </p> <p>The <span class="code">initComplete</span> hander is invoked after the viewer is initialized.</p> 
    <codeblock class="syntax xml">
      "initComplete":function()&amp;nbsp;{&amp;nbsp;code&amp;nbsp;block&amp;nbsp;} 
    </codeblock><p>Learn more about <span class="code">init()</span> method at the following:</p> 
    <ul> 
     <li>Interactive Image viewer: <a href="https://marketing.adobe.com/resources/help/en_US/s7/viewers_ref/r_html5_aem_int_image_viewer_javascriptapiref_init.html" target="_blank">https://marketing.adobe.com/resources/help/en_US/s7/viewers_ref/r_html5_aem_int_image_viewer_javascriptapiref_init.html</a></li> 
     <li>Interactive Video viewer: <a href="https://marketing.adobe.com/resources/help/en_US/s7/viewers_ref/r_html5_aem_int_video_javascriptapiref_init.html" target="_blank">https://marketing.adobe.com/resources/help/en_US/s7/viewers_ref/r_html5_aem_int_video_javascriptapiref_init.html</a></li> 
    </ul>   </li> 
   <li><p>To attach the pop-up--described in the previous steps--to the viewer, use the following code:<br /> </p> 
    <codeblock class="syntax xml">
      "initComplete":function()&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;popup&amp;nbsp;=&amp;nbsp;document.getElementById('quickview_div');!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;popup.parentNode.removeChild(popup);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;sdkContainerId&amp;nbsp;=&amp;nbsp;s7interactivevideoviewer.getComponent("container").getInnerContainerId();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;inner_container&amp;nbsp;=&amp;nbsp;document.getElementById(sdkContainerId);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inner_container.appendChild(popup);!!discoiqbr!!} 
    </codeblock><p>In the code above, we have done the following:</p> 
    <ul> 
     <li>Identified our custom pop-up.</li> 
     <li>Removed it from the DOM.</li> 
     <li>Identified the viewer container.</li> 
     <li>Attached the pop-up to the viewer container.</li> 
    </ul> </li> 
   <li><p>Your entire setHandlers code should now look similar to the following (Interactive Video viewer was used):</p> 
    <codeblock class="syntax xml">
      s7interactivevideoviewer.setHandlers({!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"quickViewActivate":&amp;nbsp;function(inData)&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;sku=inData.sku;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;loadQuickView(sku);!!discoiqbr!!&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;},!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"initComplete":function()&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;popup&amp;nbsp;=&amp;nbsp;document.getElementById('quickview_div');&amp;nbsp;//&amp;nbsp;get&amp;nbsp;custom&amp;nbsp;quick&amp;nbsp;view&amp;nbsp;container!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;popup.parentNode.removeChild(popup);&amp;nbsp;//&amp;nbsp;remove&amp;nbsp;it&amp;nbsp;from&amp;nbsp;current&amp;nbsp;DOM!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;sdkContainerId&amp;nbsp;=&amp;nbsp;s7interactivevideoviewer.getComponent("container").getInnerContainerId();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;inner_container&amp;nbsp;=&amp;nbsp;document.getElementById(sdkContainerId);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;inner_container.appendChild(popup);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!}); 
    </codeblock></li> 
   <li><p>After the handlers are loaded, you initialize the viewer:</p>  <p><strong>Example</strong><br /> This example uses the Interactive image viewer.</p>  <p>After you embed the viewer into your host page, be sure that the viewer instance is created and the handlers are loaded before the viewer is invoked using <span class="code">init()</span>.<br /> </p> </li> 
  </ol> 
 </body> 
</html>