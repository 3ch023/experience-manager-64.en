<?xml version="1.1" encoding="UTF-8" standalone="yes"?> 
<html> 
 <head> 
  <meta content="User" name="contentOwner" /> 
  <meta content="" name="jcr:baseVersion" /> 
  <meta content="2017-10-12T21:46:58.665-0400" name="mwpw_migration_script_version" /> 
  <meta content="audience:developing" name="primaryAudienceTag" /> 
  <meta content="/etc/designs/help" name="cq:designPath" /> 
  <meta content="Extending ContextHub" name="seoTitle" /> 
  <meta content="Activate" name="cq:lastReplicationAction" /> 
  <meta content="admin" name="jcr:createdBy" /> 
  <meta content="Extending ContextHub" name="navTitle" /> 
  <meta content="" name="jcr:primaryType" /> 
  <meta content="2018-01-19T19:02:31.770-0500" name="jcr:created" /> 
  <meta content="2018-05-08T12:40:37.229-0400" name="locHandOffDate" /> 
  <meta content="2018-01-18T11:18:14.796-0500" name="lastPublishExternalDate" /> 
  <meta content="/content/docs/en/aem/6-3/develop/personalization/contexthub/ch-extend" name="qaNotes" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/SITES;topic_tags:personalization;content_type:reference" name="cq:tags" /> 
  <meta content="2017-10-12T21:46:58.665-0400" name="qaDate" /> 
  <meta content="2018-01-18T11:18:14.796-0500" name="topicBrowsingSortDate" /> 
  <meta content="2018-05-08T12:40:37.230-0400" name="cq:lastModified" /> 
  <meta content="d74842e1-427e-4c4e-9578-0e25909f67da" name="jcr:predecessors" /> 
  <meta content="2018-04-03T09:00:05.645-0400" name="cq:lastReplicated" /> 
  <meta content="carlino" name="cq:lastReplicatedBy" /> 
  <meta content="true" name="jcr:isCheckedOut" /> 
  <meta content="/content/help/en/experience-manager/6-4/sites/developing/morehelp/personalization;/content/help/en/experience-manager/6-4/sites/developing/morehelp/personalization" name="moreHelpPaths" /> 
  <meta content="Extending ContextHub" name="jcr:title" /> 
  <meta content="help/components/pages/article-3" name="sling:resourceType" /> 
  <meta content="false" name="isReadyForLocalization" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/SITES" name="primaryProductTag" /> 
  <meta content="/apps/help/templates/article-3" name="cq:template" /> 
  <meta content="Define new types of ContextHub stores and modules when the ones provided do not meet your solution requirements" name="seoDescription" /> 
  <meta content="en_us" name="jcr:language" /> 
  <meta content="" name="jcr:versionHistory" /> 
  <meta content="1184fca0-264f-40d0-afed-47d63cc5caa0" name="jcr:uuid" /> 
  <meta content="mix:versionable" name="jcr:mixinTypes" /> 
  <meta content="msm-service" name="cq:lastModifiedBy" /> 
  <meta content="2017-10-31T16:17:18.309-0400" name="firstPublishExternalDate" /> 
  <meta content="carlino@adobe.com" name="lr_lastReplicatedBy" /> 
  <meta content="https://helpx.adobe.com/experience-manager/6-3/sites/developing/using/ch-extend.html" name="publishExternalURL" /> 
  <meta content="2018-01-18T11:18:14.796-0500" name="publishExternalDate" /> 
 </head> 
 <body> 
  <p>Define new types of ContextHub stores and modules when the ones provided do not meet your solution requirements.</p> 
  <h2>Creating Custom Store Candidates</h2> 
  <p>ContextHub stores are created from registered store candidates. To create a custom store, you need to create and register a store candidate.</p> 
  <p>The javascript file that includes the code that creates and registers the store candidate must be included in a <a href="../../../sites/developing/using/clientlibs.md#main-pars-title-0">client library folder</a>. The category of the folder must match the following pattern:</p> 
  <codeblock class="syntax xml">
    contexthub.store.[storeType] 
  </codeblock> 
  <p>The <span class="code">[storeType]</span> part of the category is the storeType with which the store candidate is registered. (See <a href="../../../sites/developing/using/ch-extend.md#main-pars-title-2052793894">Registering a ContextHub Store Candidate</a>). For example, for the storeType of <span class="code">contexthub.mystore</span>, the category of the client library folder must be <span class="code">contexthub.store.contexthub.mystore</span>.</p> 
  <h3>Creating a ContextHub Store Candidate</h3> 
  <p>To create a store candidate, you use the <a href="../../../sites/developing/using/contexthub-api.md#main-pars-title-33"><span class="code">ContextHub.Utils.inheritance.inherit</span></a> function to extend one of the base stores:</p> 
  <ul> 
   <li><span class="code"><a href="../../../sites/developing/using/contexthub-api.md#main-pars-title-2">ContextHub.Store.PersistedStore</a></span></li> 
   <li><span class="code"><a href="../../../sites/developing/using/contexthub-api.md#main-pars-title-3">ContextHub.Store.SessionStore</a></span></li> 
   <li><span class="code"><a href="../../../sites/developing/using/contexthub-api.md#main-pars-title-0">ContextHub.Store.JSONPStore</a></span></li> 
   <li><span class="code"><a href="../../../sites/developing/using/contexthub-api.md#main-pars-title-1">ContextHub.Store.PersistedJSONPStore</a></span></li> 
  </ul> 
  <p>Note that each base store extends the <span class="code"><a href="../../../sites/developing/using/contexthub-api.md#main-pars-title">ContextHub.Store.Core</a></span> store.</p> 
  <p>The following example creates the simplest extension of the <span class="code">ContextHub.Store.PersistedStore</span> store candidate:</p> 
  <codeblock class="syntax js">
    myStoreCandidate&amp;nbsp;=&amp;nbsp;function(){};!!discoiqbr!!ContextHub.Utils.inheritance.inherit(myStoreCandidate,ContextHub.Store.PersistedStore);!!discoiqbr!! 
  </codeblock> 
  <p>Realistically, your custom store candidates will define additional functions or override the store's initial configuration. Several <a href="../../../sites/developing/using/ch-samplestores.md">sample store candidates</a> are installed in the repository below /libs/granite/contexthub/components/stores. To learn from these samples, use CRXDE Lite to open the javascript files.</p> 
  <h3>Registering a ContextHub Store Candidate</h3> 
  <p>Register a store candidate to integrate it with the ContextHub framework and enable stores to be created from it. To register a store candidate, use the <a href="../../../sites/developing/using/contexthub-api.md#main-pars-title-36"><span class="code">registerStoreCandidate</span></a> function of the <span class="code">ContextHub.Utils.storeCandidates</span> class.</p> 
  <p>When you register a store candiate, you provide a name for the store type. When creating a store from the candidate, you use the store type to identify the candidate upon which it is based. </p> 
  <p>When you register a store candidate, you indicate its priority. When a store candidate is registered using the same store type as an already-registered store candidate, the candidate with the higher priority is used. Therefore, you can override existing store candidates with new implementations.</p> 
  <codeblock class="syntax js">
    ContextHub.Utils.storeCandidates.registerStoreCandidate(myStoreCandidate,&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'contexthub.mystorecandiate',&amp;nbsp;0); 
  </codeblock> 
  <h2>Creating ContextHub UI Module Types</h2> 
  <p>Create custom UI module types when the ones that are <a href="../../../sites/developing/using/ch-samplemodules.md">installed with ContextHub</a> do not meet your requirements. To create a UI module type, create a new UI module renderer by extending the <span class="code">ContextHub.UI.BaseModuleRenderer</span> class and then registering it with <span class="code">ContextHub.UI</span>.</p> 
  <p>To create a UI moduler renderer, create a <span class="code">Class</span> object that contains the logic that renders the UI module. At a minimum, your class must perform the following actions:</p> 
  <ul> 
   <li>Extend the <span class="code">ContextHub.UI.BaseModuleRenderer</span> class. This class is the base implementation for all UI module renderers. The <span class="code">Class</span> object defines a property named <span class="code">extend</span> that you use to name this class as that which is being extended.</li> 
   <li>Provide a default configuration. Create a <span class="code">defaultConfig</span> property. This property is an object that includes the properties that are defined for the <a href="../../../sites/developing/using/ch-samplemodules.md#main-pars-title"><span class="code">contexthub.base</span></a> UI module, and any other properties that you require.</li> 
  </ul> 
  <div>
    The source for 
   <span class="code">ContextHub.UI.BaseModuleRenderer</span> is located at /libs/granite/contexthub/code/ui/container/js/ContextHub.UI.BaseModuleRenderer.js. 
  </div> 
  <p>To register the renderer, use the <span class="code"><a href="../../../sites/developing/using/contexthub-api.md#main-pars-title-1001018641">registerRenderer</a></span> method of the <span class="code">ContextHub.UI</span> class. You need to provide a name for the module type. When administrators create a UI module based on this renderer, they specify this name.</p> 
  <p>Create and register the renderer class in a self-executing anonymous function. The following example is based on the source code for the contexthub.browserinfo UI module. This UI module is a simple extension of the <span class="code">ContextHub.UI.BaseModuleRenderer</span> class.</p> 
  <codeblock class="syntax xml">
    ;(function()&amp;nbsp;{!!discoiqbr!!!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;SurferinfoRenderer&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Class({!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;extend:&amp;nbsp;ContextHub.UI.BaseModuleRenderer,!!discoiqbr!!!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;defaultConfig:&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;icon:&amp;nbsp;'coral-Icon--globe',!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;title:&amp;nbsp;'Browser/OS&amp;nbsp;Information',!!discoiqbr!!!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;storeMapping:&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;surferinfo:&amp;nbsp;'surferinfo'!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;},!!discoiqbr!!!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;template:!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'&lt;p&gt;{{surferinfo.browser.family}}&amp;nbsp;{{surferinfo.browser.version}}&lt;/p&gt;'&amp;nbsp;+!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'&lt;p&gt;{{surferinfo.os.name}}&amp;nbsp;{{surferinfo.os.version}}&lt;/p&gt;'!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;});!!discoiqbr!!!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ContextHub.UI.registerRenderer('contexthub.browserinfo',&amp;nbsp;new&amp;nbsp;SurferinfoRenderer());!!discoiqbr!!!!discoiqbr!!}()); 
  </codeblock> 
  <p>The javascript file that includes the code that creates and registers the renderer must be included in a <a href="../../../sites/developing/using/clientlibs.md#main-pars-title-0">client library folder</a>. The category of the folder must match the following pattern:</p> 
  <codeblock class="syntax xml">
    contexthub.module.[moduleType] 
  </codeblock> 
  <p>The <span class="code">[moduleType]</span> part of the category is the <span class="code">moduleType</span> with which the module renderer is registered. For example, for the <span class="code">moduleType</span> of <span class="code">contexthub.browserinfo</span>, the category of the client library folder must be <span class="code">contexthub.module.contexthub.browserinfo</span>.</p> 
 </body> 
</html>