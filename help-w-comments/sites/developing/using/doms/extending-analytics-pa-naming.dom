<?xml version="1.1" encoding="UTF-8" standalone="yes"?> 
<html> 
 <head> 
  <meta content="en_us" name="jcr:language" /> 
  <meta content="audience:developing" name="primaryAudienceTag" /> 
  <meta content="/etc/designs/help" name="cq:designPath" /> 
  <meta content="Implementing Server-Side Page Naming for Analytics" name="seoTitle" /> 
  <meta content="2017-10-31T16:16:47.758-0400" name="firstPublishExternalDate" /> 
  <meta content="2018-07-04T02:56:58.984-0400" name="cq:lastModified" /> 
  <meta content="" name="jcr:primaryType" /> 
  <meta content="mix:versionable" name="jcr:mixinTypes" /> 
  <meta content="false" name="isReadyForLocalization" /> 
  <meta content="cc8b20b2-c219-473a-a6e7-ff39cc5988c5" name="jcr:predecessors" /> 
  <meta content="admin" name="jcr:createdBy" /> 
  <meta content="aheimoz" name="cq:lastReplicatedBy" /> 
  <meta content="2017-10-12T21:46:58.665-0400" name="mwpw_migration_script_version" /> 
  <meta content="2018-07-04T02:56:59.005-0400" name="cq:lastReplicated" /> 
  <meta content="/content/help/en/experience-manager/6-4/sites/developing/morehelp/extending-aem;/content/help/en/experience-manager/6-4/sites/developing/morehelp/extending-aem" name="moreHelpPaths" /> 
  <meta content="true" name="jcr:isCheckedOut" /> 
  <meta content="Adobe Analytics uses the s.pageName property to uniquely identify pages and to associate the data that is collected for the pages" name="seoDescription" /> 
  <meta content="aheimoz@adobe.com" name="lr_lastReplicatedBy" /> 
  <meta content="help/components/pages/article-3" name="sling:resourceType" /> 
  <meta content="aheimoz" name="cq:lastModifiedBy" /> 
  <meta content="https://helpx.adobe.com/experience-manager/6-4/sites/developing/using/extending-analytics-pa-naming.html" name="publishExternalURL" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/SITES;topic_tags:extending-aem;content_type:reference" name="cq:tags" /> 
  <meta content="Implementing Server-Side Page Naming for Analytics" name="jcr:title" /> 
  <meta content="" name="jcr:versionHistory" /> 
  <meta content="2018-07-04T02:56:58.979-0400" name="lastPublishExternalDate" /> 
  <meta content="2018-05-08T12:43:11.105-0400" name="locHandOffDate" /> 
  <meta content="2017-10-12T21:46:58.665-0400" name="qaDate" /> 
  <meta content="/content/docs/en/aem/6-3/develop/extending/sitecatalyst/pa-naming" name="qaNotes" /> 
  <meta content="User" name="contentOwner" /> 
  <meta content="Implementing Server-Side Page Naming for Analytics" name="navTitle" /> 
  <meta content="/apps/help/templates/article-3" name="cq:template" /> 
  <meta content="2017-12-05T19:02:43.309-0500" name="jcr:created" /> 
  <meta content="6c612d27-4105-41b2-a115-9860d5cf0e98" name="jcr:uuid" /> 
  <meta content="2018-07-04T02:56:58.979-0400" name="topicBrowsingSortDate" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/SITES" name="primaryProductTag" /> 
  <meta content="2018-07-04T02:56:58.979-0400" name="publishExternalDate" /> 
  <meta content="Activate" name="cq:lastReplicationAction" /> 
  <meta content="" name="jcr:baseVersion" /> 
 </head> 
 <body> 
  <p>Adobe Analytics uses the <span class="code">s.pageName</span> property to uniquely identify pages and to associate the data that is collected for the pages. Typically, you perform the following tasks in AEM to assign a value to this property that AEM sends to Analytics:</p> 
  <ul> 
   <li>Use the Analytics cloud service framework to map a CQ variable to the Analytics <span class="code">s.pageName</span> property. (See <a href="../../../sites/administering/using/adobeanalytics-mapping.md">Mapping Component Data with Adobe Analytics Properties</a>.)</li> 
   <li>Design the page component so that it includes the CQ variable that you map to the <span class="code">s.pageName</span> property. (See <a href="../../../sites/developing/using/extending-analytics-components.md">Implementing Adobe Analytics Tracking for Custom Components</a>.)</li> 
  </ul> 
  <p>To expose Analytics report data in the Sites console and in Content Insight, AEM requires the value of the <span class="code">s.pageName</span> property for each page. The AEM Analytics Java API defines the <span class="code">AnalyticsPageNameProvider</span> interface that you implement to provide the Sites console and Content Insights with the value of the <span class="code">s.pageName</span> property. Your <span class="code">AnaltyicsPageNameProvider</span> service resolves the pageName property on the server for reporting purposes, as it can be dynamically set using Javascript on the client for tracking purposes.</p> 
  <h3>The Default Analytics Page Name Provider Service</h3> 
  <p>The <span class="code">DefaultPageNameProvider</span> service is the default service that determines the value of the <span class="code">s.pageName</span> property to use for retrieving Analytics data for a page. The service works in conjunction with the AEM foundation page component (<span class="code">/libs/foundation/components/page</span>). This page component defines the following CQ variables that are meant to be mapped to the <span class="code">s.pageName</span> property:</p> 
  <ul> 
   <li><span class="code">pagedata.path</span>: The value is set to the page path.</li> 
   <li><span class="code">pagedata.title</span>: The value is set to the page title.</li> 
   <li><span class="code">pagedata.navTitle</span>: The value is set to the page navigation title.</li> 
  </ul> 
  <p>The <span class="code">DefaultPageNameProvider</span> service determines which of these CQ variables is mapped to the <span class="code">s.pageName</span> property in the Analytics cloud service framework. The service then determines the appropriate page property to use for retrieving analytics report data:</p> 
  <ul> 
   <li><span class="code">pagedata.path</span>: The service uses <span class="code">page.getPath()</span></li> 
   <li><span class="code">pagedata.title</span>: The service uses <span class="code">page.getTitle()</span></li> 
   <li><span class="code">pagedata.navTitle</span>: The service uses <span class="code">page.getNavigationTitle()</span></li> 
  </ul> 
  <p>The <span class="code">page</span> object is the is the <a href="/content/help/en/experience-manager/6-3/sites/developing/using/reference-materials/javadoc/com/day/cq/wcm/api/Page"><span class="code">com.day.cq.wcm.api.Page</span></a> Java object for the page.</p> 
  <p>If you do not map a CQ variable to the <span class="code">s.pageName</span> property in the framework, the value for <span class="code">s.pageName</span> is generated from the page path. For example, the page with the path <span class="code">/content/geometrixx/en</span> uses the value <span class="code">content:geometrixx:en</span> for <span class="code">s.pageName</span>.</p> 
  <note> 
   <p>The DefaultPageNameProvider service uses a service ranking of 100.</p> 
  </note> 
  <h3>Maintaining Continuity in Analytics Reporting</h3> 
  <p>Maintaining a complete history of analytics data for a page requires that the value of the s.pageName property that is used for a page never changes. However, the analtyics properties that the foundation page component defines can be easily changed. For example moving a page changes the value of <span class="code">pagedata.path</span> and breaks the continuity of the reporting history:</p> 
  <ul> 
   <li>Data that was collected for the previous path is no longer associated with the page.</li> 
   <li>If a different page uses the path that another page once used, the different page inherits the data for that path.</li> 
  </ul> 
  <p>To ensure reporting continuity, the value of <span class="code">s.pageName</span> should have the following characteristics:</p> 
  <ul> 
   <li>Unique.</li> 
   <li>Stable.</li> 
   <li>Human-readable.</li> 
  </ul> 
  <div>
    For example, a custom pag component can include a page property that authors use to specify a unique ID for the page that is used as the value for the 
   <span class="code">s.pageProperties</span> property: 
  </div> 
  <ul> 
   <li>The page includes an analytics variable that is set to the value of the unique ID that is stored in the page property.</li> 
   <li>The analytics variable is mapped to the <span class="code">s.pageProperties</span> property in the Analytics framework. </li> 
   <li>Your implementation of the AnalytcsPageNameProvider interface retrieves the value of the page property to use for querying the page Analytics data. </li> 
  </ul> 
  <note> 
   <p>Ask your Analytics consultant for help in developing an effective strategy for your <span class="code">s.pageName</span> value.</p> 
  </note> 
  <h3>Implementing an Analytics Page Name Provider Service</h3> 
  <draft-comment color="blue" lastModifiedBy="sbroders@adobe.com" lastModifiedDate="2017-12-04T09:56:14.967-0500" prevFirstName="unknown" prevLastName="unknown" type="remark"> 
   <p>Add links to javadocs when they are available.</p> 
  </draft-comment> 
  <p>Implement the <span class="code">com.day.cq.analytics.sitecatalyst.AnalyticsPageNameProvider</span> interface as an OSGi service to customize the logic that retrieves the s.pageName property value. The Sites page analytics and Content Insight use the service to retrieve report data from Analytics.</p> 
  <p>The AnalyticsPageNameProvider interface defines two methods that you must implement:</p> 
  <ul> 
   <li><span class="code">getPageName</span>: Returns a <span class="code">String</span> value that represents the value to use as the <span class="code">s.pageName</span> property.</li> 
   <li><span class="code">getResource</span>: Returns an <span class="code">org.apache.sling.api.resource.Resource</span> object that represents the page that is associated with the <span class="code">s.pageName</span> property.</li> 
  </ul> 
  <div>
    Both methods take a 
   <span class="code">com.day.cq.analytics.sitecatalyst.AnalyticsPageNameContext</span> object as a parameter. The 
   <span class="code">AnalyticsPageNameContext</span> class provides information about the context of the analytics calls: 
  </div> 
  <ul> 
   <li>The base path of the page resource.</li> 
   <li>The <span class="code">Framework</span> object for the Analytics cloud service configuration.</li> 
   <li>The <span class="code">Resource</span> object for the page.</li> 
   <li>The <span class="code">ResourceResolver</span> object for the page.</li> 
  </ul> 
  <div> 
  </div> 
  <div>
    The class also provides a setter for the page name. 
  </div> 
  <h3>Example AnalyticsPageNameProvider Implementation</h3> 
  <p>The following example <span class="code">AnalyticsPageNameProvider</span> implementation supports a custom page component:</p> 
  <ul> 
   <li>The component extends the foundation page component.</li> 
   <li>The dialog includes a field that authors use to specify the value of the <span class="code">s.pageName</span> property.</li> 
   <li>The property value is stored in the pageName property of the <span class="code">jcr:content </span>node of the page instances.</li> 
   <li>The analytics property that stores the <span class="code">s.pageName</span> property is called <span class="code">pagedata.pagename</span>. This property is mapped to the <span class="code">s.pageName</span> property in the Analytics framework. </li> 
  </ul> 
  <div>
    The following implementation of the 
   <span class="code">getPageName</span> method returns the value of the pageName node property if the framework mapping is configured correctly: 
  </div> 
  <codeblock class="syntax java">
    public&amp;nbsp;String&amp;nbsp;getPageName(AnalyticsPageNameContext&amp;nbsp;context)&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;pageName&amp;nbsp;=&amp;nbsp;null;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Framework&amp;nbsp;framework&amp;nbsp;=&amp;nbsp;context.getFramework();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Resource&amp;nbsp;resource&amp;nbsp;=&amp;nbsp;context.getResource();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(resource&amp;nbsp;!=&amp;nbsp;null&amp;nbsp;&amp;&amp;&amp;nbsp;framework&amp;nbsp;!=&amp;nbsp;null&amp;nbsp;&amp;&amp;&amp;nbsp;framework.mapsSCVariable(S_PAGE_NAME))&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;cqVar&amp;nbsp;=&amp;nbsp;framework.getMapping(S_PAGE_NAME);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Page&amp;nbsp;page&amp;nbsp;=&amp;nbsp;resource.adaptTo(Page.class);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(cqVar.equals("pagedata.pagename"))&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pageName&amp;nbsp;=&amp;nbsp;page.getProperties().get("pageName",null);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;pageName;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} 
  </codeblock> 
  <p>The following implementation of the getResource method returns the Resource object for the page:</p> 
  <codeblock class="syntax java">
    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;Resource&amp;nbsp;getResource(AnalyticsPageNameContext&amp;nbsp;context)&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Resource&amp;nbsp;res&amp;nbsp;=&amp;nbsp;null;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Framework&amp;nbsp;framework&amp;nbsp;=&amp;nbsp;context.getFramework();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ResourceResolver&amp;nbsp;resolver&amp;nbsp;=&amp;nbsp;context.getResourceResolver();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;pageName&amp;nbsp;=&amp;nbsp;context.getPageName();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;basePath&amp;nbsp;=&amp;nbsp;context.getBasePath();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(pageName&amp;nbsp;!=&amp;nbsp;null&amp;nbsp;&amp;&amp;&amp;nbsp;basePath&amp;nbsp;!=&amp;nbsp;null&amp;nbsp;&amp;&amp;&amp;nbsp;resolver&amp;nbsp;!=&amp;nbsp;null!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;&amp;&amp;nbsp;framework&amp;nbsp;!=&amp;nbsp;null&amp;nbsp;&amp;&amp;&amp;nbsp;framework.mapsSCVariable(S_PAGE_NAME))&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;cqVar&amp;nbsp;=&amp;nbsp;framework.getMapping(S_PAGE_NAME);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(cqVar.equals("pagedata.pagename"))&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Iterator&lt;Resource&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hits&amp;nbsp;=&amp;nbsp;resolver.findResources(createQuery(pageName,&amp;nbsp;basePath,&amp;nbsp;"pagename"),&amp;nbsp;Query.JCR_SQL2);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(hits.hasNext())&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;res&amp;nbsp;=&amp;nbsp;hits.next();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;res&amp;nbsp;=&amp;nbsp;res.getParent();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;res;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;String&amp;nbsp;createQuery(String&amp;nbsp;pageName,&amp;nbsp;String&amp;nbsp;basePath,&amp;nbsp;String&amp;nbsp;propName)&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;"SELECT&amp;nbsp;*&amp;nbsp;FROM&amp;nbsp;[cq:PageContent]&amp;nbsp;WHERE&amp;nbsp;ISDESCENDANTNODE(["!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;+&amp;nbsp;basePath&amp;nbsp;+&amp;nbsp;"])&amp;nbsp;and&amp;nbsp;["&amp;nbsp;+&amp;nbsp;propName&amp;nbsp;+&amp;nbsp;"]&amp;nbsp;=&amp;nbsp;\""&amp;nbsp;+&amp;nbsp;pageName&amp;nbsp;+&amp;nbsp;"\"";!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} 
  </codeblock> 
  <p>The following code represents the entire class, including SCR annotations that configure the service. Note that the service ranking is 200 which overrides the default service.</p> 
  <codeblock class="syntax java">
    /*************************************************************************!!discoiqbr!!&amp;nbsp;*!!discoiqbr!!&amp;nbsp;*&amp;nbsp;ADOBE&amp;nbsp;CONFIDENTIAL!!discoiqbr!!&amp;nbsp;*&amp;nbsp;__________________!!discoiqbr!!&amp;nbsp;*!!discoiqbr!!&amp;nbsp;*&amp;nbsp;&amp;nbsp;Copyright&amp;nbsp;2018&amp;nbsp;Adobe&amp;nbsp;Systems&amp;nbsp;Incorporated!!discoiqbr!!&amp;nbsp;*&amp;nbsp;&amp;nbsp;All&amp;nbsp;Rights&amp;nbsp;Reserved.!!discoiqbr!!&amp;nbsp;*!!discoiqbr!!&amp;nbsp;*&amp;nbsp;NOTICE:&amp;nbsp;&amp;nbsp;All&amp;nbsp;information&amp;nbsp;contained&amp;nbsp;herein&amp;nbsp;is,&amp;nbsp;and&amp;nbsp;remains!!discoiqbr!!&amp;nbsp;*&amp;nbsp;the&amp;nbsp;property&amp;nbsp;of&amp;nbsp;Adobe&amp;nbsp;Systems&amp;nbsp;Incorporated&amp;nbsp;and&amp;nbsp;its&amp;nbsp;suppliers,!!discoiqbr!!&amp;nbsp;*&amp;nbsp;if&amp;nbsp;any.&amp;nbsp;&amp;nbsp;The&amp;nbsp;intellectual&amp;nbsp;and&amp;nbsp;technical&amp;nbsp;concepts&amp;nbsp;contained!!discoiqbr!!&amp;nbsp;*&amp;nbsp;herein&amp;nbsp;are&amp;nbsp;proprietary&amp;nbsp;to&amp;nbsp;Adobe&amp;nbsp;Systems&amp;nbsp;Incorporated&amp;nbsp;and&amp;nbsp;its!!discoiqbr!!&amp;nbsp;*&amp;nbsp;suppliers&amp;nbsp;and&amp;nbsp;may&amp;nbsp;be&amp;nbsp;covered&amp;nbsp;by&amp;nbsp;U.S.&amp;nbsp;and&amp;nbsp;Foreign&amp;nbsp;Patents,!!discoiqbr!!&amp;nbsp;*&amp;nbsp;patents&amp;nbsp;in&amp;nbsp;process,&amp;nbsp;and&amp;nbsp;are&amp;nbsp;protected&amp;nbsp;by&amp;nbsp;trade&amp;nbsp;secret&amp;nbsp;or&amp;nbsp;copyright&amp;nbsp;law.!!discoiqbr!!&amp;nbsp;*&amp;nbsp;Dissemination&amp;nbsp;of&amp;nbsp;this&amp;nbsp;information&amp;nbsp;or&amp;nbsp;reproduction&amp;nbsp;of&amp;nbsp;this&amp;nbsp;material!!discoiqbr!!&amp;nbsp;*&amp;nbsp;is&amp;nbsp;strictly&amp;nbsp;forbidden&amp;nbsp;unless&amp;nbsp;prior&amp;nbsp;written&amp;nbsp;permission&amp;nbsp;is&amp;nbsp;obtained!!discoiqbr!!&amp;nbsp;*&amp;nbsp;from&amp;nbsp;Adobe&amp;nbsp;Systems&amp;nbsp;Incorporated.!!discoiqbr!!&amp;nbsp;**************************************************************************/!!discoiqbr!!package&amp;nbsp;com.day.cq.analytics.sitecatalyst;!!discoiqbr!!&amp;nbsp;!!discoiqbr!!import&amp;nbsp;java.util.Iterator;!!discoiqbr!!&amp;nbsp;!!discoiqbr!!import&amp;nbsp;javax.jcr.query.Query;!!discoiqbr!!&amp;nbsp;!!discoiqbr!!import&amp;nbsp;org.apache.sling.api.resource.Resource;!!discoiqbr!!import&amp;nbsp;org.apache.sling.api.resource.ResourceResolver;!!discoiqbr!!import&amp;nbsp;org.osgi.framework.Constants;!!discoiqbr!!import&amp;nbsp;org.osgi.service.component.annotations.Component;!!discoiqbr!!!!discoiqbr!!import&amp;nbsp;com.day.cq.analytics.sitecatalyst.AnalyticsPageNameContext;!!discoiqbr!!import&amp;nbsp;com.day.cq.analytics.sitecatalyst.AnalyticsPageNameProvider;!!discoiqbr!!import&amp;nbsp;com.day.cq.analytics.sitecatalyst.Framework;!!discoiqbr!!import&amp;nbsp;com.day.cq.wcm.api.Page;!!discoiqbr!!&amp;nbsp;!!discoiqbr!!import&amp;nbsp;static&amp;nbsp;com.day.cq.analytics.sitecatalyst.AnalyticsPageNameContext.S_PAGE_NAME;!!discoiqbr!!&amp;nbsp;!!discoiqbr!!/**!!discoiqbr!!&amp;nbsp;*&amp;nbsp;Default&amp;nbsp;implementation&amp;nbsp;of&amp;nbsp;{@link&amp;nbsp;AnalyticsPageNameProvider}&amp;nbsp;that&amp;nbsp;resolves!!discoiqbr!!&amp;nbsp;*&amp;nbsp;page&amp;nbsp;title,&amp;nbsp;path&amp;nbsp;or&amp;nbsp;navTitle&amp;nbsp;if&amp;nbsp;mapped&amp;nbsp;in&amp;nbsp;{@link&amp;nbsp;Framework}.!!discoiqbr!!&amp;nbsp;*/!!discoiqbr!!@Component(!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;service&amp;nbsp;=&amp;nbsp;{&amp;nbsp;AnalyticsPageNameProvider.class&amp;nbsp;},!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;property&amp;nbsp;=&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Constants.SERVICE_DESCRIPTION&amp;nbsp;+&amp;nbsp;"=Example&amp;nbsp;Page&amp;nbsp;Name&amp;nbsp;Resolver&amp;nbsp;implementation",!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Constants.SERVICE_RANKING&amp;nbsp;+&amp;nbsp;":Integer=200"!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!)&amp;nbsp;!!discoiqbr!!public&amp;nbsp;class&amp;nbsp;ExamplePageNameProvider&amp;nbsp;implements&amp;nbsp;AnalyticsPageNameProvider&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;String&amp;nbsp;getPageName(AnalyticsPageNameContext&amp;nbsp;context)&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;pageName&amp;nbsp;=&amp;nbsp;null;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Framework&amp;nbsp;framework&amp;nbsp;=&amp;nbsp;context.getFramework();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Resource&amp;nbsp;resource&amp;nbsp;=&amp;nbsp;context.getResource();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(resource&amp;nbsp;!=&amp;nbsp;null&amp;nbsp;&amp;&amp;&amp;nbsp;framework&amp;nbsp;!=&amp;nbsp;null&amp;nbsp;&amp;&amp;&amp;nbsp;framework.mapsSCVariable(S_PAGE_NAME))&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;cqVar&amp;nbsp;=&amp;nbsp;framework.getMapping(S_PAGE_NAME);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Page&amp;nbsp;page&amp;nbsp;=&amp;nbsp;resource.adaptTo(Page.class);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(cqVar.equals("pagedata.path"))&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pageName&amp;nbsp;=&amp;nbsp;page.getProperties().get("pageName",null);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;pageName;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;Resource&amp;nbsp;getResource(AnalyticsPageNameContext&amp;nbsp;context)&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Resource&amp;nbsp;res&amp;nbsp;=&amp;nbsp;null;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Framework&amp;nbsp;framework&amp;nbsp;=&amp;nbsp;context.getFramework();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ResourceResolver&amp;nbsp;resolver&amp;nbsp;=&amp;nbsp;context.getResourceResolver();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;pageName&amp;nbsp;=&amp;nbsp;context.getPageName();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;basePath&amp;nbsp;=&amp;nbsp;context.getBasePath();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(pageName&amp;nbsp;!=&amp;nbsp;null&amp;nbsp;&amp;&amp;&amp;nbsp;basePath&amp;nbsp;!=&amp;nbsp;null&amp;nbsp;&amp;&amp;&amp;nbsp;resolver&amp;nbsp;!=&amp;nbsp;null!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;&amp;&amp;nbsp;framework&amp;nbsp;!=&amp;nbsp;null&amp;nbsp;&amp;&amp;&amp;nbsp;framework.mapsSCVariable(S_PAGE_NAME))&amp;nbsp;{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;cqVar&amp;nbsp;=&amp;nbsp;framework.getMapping(S_PAGE_NAME);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(cqVar.equals("pagedata.pagename"))&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Iterator&lt;Resource&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hits&amp;nbsp;=&amp;nbsp;resolver.findResources(createQuery(pageName,&amp;nbsp;basePath,&amp;nbsp;"pagename"),&amp;nbsp;Query.JCR_SQL2);!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(hits.hasNext())&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;res&amp;nbsp;=&amp;nbsp;hits.next();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;res&amp;nbsp;=&amp;nbsp;res.getParent();!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;res;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;String&amp;nbsp;createQuery(String&amp;nbsp;pageName,&amp;nbsp;String&amp;nbsp;basePath,&amp;nbsp;String&amp;nbsp;propName)&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;"SELECT&amp;nbsp;*&amp;nbsp;FROM&amp;nbsp;[cq:PageContent]&amp;nbsp;WHERE&amp;nbsp;ISDESCENDANTNODE(["!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;+&amp;nbsp;basePath&amp;nbsp;+&amp;nbsp;"])&amp;nbsp;and&amp;nbsp;["&amp;nbsp;+&amp;nbsp;propName&amp;nbsp;+&amp;nbsp;"]&amp;nbsp;=&amp;nbsp;\""&amp;nbsp;+&amp;nbsp;pageName&amp;nbsp;+&amp;nbsp;"\"";!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!} 
  </codeblock> 
 </body> 
</html>