<?xml version="1.1" encoding="UTF-8" standalone="yes"?> 
<html> 
 <head> 
  <meta content="Activate" name="cq:lastReplicationAction" /> 
  <meta content="2017-10-12T21:46:00.000-0400" name="qaDate" /> 
  <meta content="Use xgettext-maven-plugin to extract strings from your source code that need translating" name="seoDescription" /> 
  <meta content="/content/docs/en/aem/6-3/develop/components/i18n/i18n-extract" name="qaNotes" /> 
  <meta content="2017-10-31T16:16:33.618-0400" name="topicBrowsingSortDate" /> 
  <meta content="" name="jcr:primaryType" /> 
  <meta content="/apps/help/templates/article-3" name="cq:template" /> 
  <meta content="Extracting Strings for Translating" name="navTitle" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/SITES" name="primaryProductTag" /> 
  <meta content="products:SG_EXPERIENCEMANAGER/6.4/SITES;content_type:reference;topic_tags:components" name="cq:tags" /> 
  <meta content="true" name="jcr:isCheckedOut" /> 
  <meta content="en_us" name="jcr:language" /> 
  <meta content="wmyersta@adobe.com" name="lr_lastReplicatedBy" /> 
  <meta content="2017-12-01T19:06:17.890-0500" name="jcr:created" /> 
  <meta content="" name="jcr:baseVersion" /> 
  <meta content="Guillaume Carlino" name="contentOwner" /> 
  <meta content="/content/help/en/experience-manager/6-4/sites/developing/morehelp/components;/content/help/en/experience-manager/6-4/sites/developing/morehelp/components" name="moreHelpPaths" /> 
  <meta content="2018-05-08T12:44:04.797-0400" name="cq:lastModified" /> 
  <meta content="94e4dda9-dc3f-42c0-a400-75b95f69ce2e" name="jcr:uuid" /> 
  <meta content="https://helpx.adobe.com/experience-manager/6-3/sites/developing/using/i18n-extract.html" name="publishExternalURL" /> 
  <meta content="carlino" name="cq:lastModifiedBy" /> 
  <meta content="2018-05-08T12:44:04.796-0400" name="locHandOffDate" /> 
  <meta content="audience:developing" name="primaryAudienceTag" /> 
  <meta content="2017-10-31T16:16:33.618-0400" name="lastPublishExternalDate" /> 
  <meta content="2017-10-31T16:16:33.618-0400" name="publishExternalDate" /> 
  <meta content="/etc/designs/help" name="cq:designPath" /> 
  <meta content="2017-10-31T16:16:33.618-0400" name="firstPublishExternalDate" /> 
  <meta content="b4541225-e040-461d-ba0d-a3bc372e02a2" name="jcr:predecessors" /> 
  <meta content="admin" name="jcr:createdBy" /> 
  <meta content="Extracting Strings for Translating" name="seoTitle" /> 
  <meta content="2018-04-03T09:00:57.759-0400" name="cq:lastReplicated" /> 
  <meta content="help/components/pages/article-3" name="sling:resourceType" /> 
  <meta content="" name="jcr:versionHistory" /> 
  <meta content="Extracting Strings for Translating" name="jcr:title" /> 
  <meta content="false" name="isReadyForLocalization" /> 
  <meta content="carlino" name="cq:lastReplicatedBy" /> 
  <meta content="mix:versionable" name="jcr:mixinTypes" /> 
  <meta content="2017-10-12T21:46:58.665-0400" name="mwpw_migration_script_version" /> 
 </head> 
 <body> 
  <draft-comment color="yellow" lastModifiedBy="sbroders@adobe.com" lastModifiedDate="2017-11-30T05:25:00.694-0500" type="remark"> 
   <p>This section is required only if the maven plugin is publicly available.</p> 
  </draft-comment> 
  <p>Use xgettext-maven-plugin to extract strings from your source code that need translating. The Maven plugin extracts strings to an XLIFF file that you send for translating. Strings are extracted from the following locations:</p> 
  <ul> 
   <li>Java source files</li> 
   <li>Javascript source files</li> 
   <li>XML representations of SVN resources (JCR Nodes)</li> 
  </ul> 
  <h3>Configuring String Extraction</h3> 
  <draft-comment color="yellow" lastModifiedBy="sbroders@adobe.com" lastModifiedDate="2017-11-30T05:25:00.727-0500" type="remark"> 
   <p>Where will users get the default or example I18n.any file?</p> 
  </draft-comment> 
  <p>Configure how the xgettext-maven-plugin tool extracts strings for your project.</p> 
  <codeblock class="syntax xml">
    /filter&amp;nbsp;{&amp;nbsp;}!!discoiqbr!!/parsers&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;/vaultxml&amp;nbsp;{&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;/javascript&amp;nbsp;{&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;/regexp&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/files&amp;nbsp;{!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/java&amp;nbsp;{&amp;nbsp;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/jsp&amp;nbsp;{&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/extjstemplate&amp;nbsp;{&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;}!!discoiqbr!!}!!discoiqbr!!/potentials&amp;nbsp;{&amp;nbsp;} 
  </codeblock> 
  <table border="1" cellpadding="1" cellspacing="0" width="100%"> 
   <tbody> 
    <tr> 
     <th>Section</th> 
     <th>Description</th> 
    </tr> 
    <tr> 
     <td>/filter</td> 
     <td>Identifies the files that are parsed.</td> 
    </tr> 
    <tr> 
     <td>/parsers/vaultxml </td> 
     <td>Configures the parsing of Vault files. Identifies the JCR nodes that contain externalized strings and localization hints. Also identifies JCR nodes to ignore.</td> 
    </tr> 
    <tr> 
     <td>/parsers/javascript</td> 
     <td>Identifies the Javascript functions that externalize strings. You do not need to change this section.</td> 
    </tr> 
    <tr> 
     <td>/parsers/regexp</td> 
     <td>Configures the parsing of Java, JSP, and ExtJS Template files. You do not need to change this section.</td> 
    </tr> 
    <tr> 
     <td>/potentials</td> 
     <td>The formula for detecting strings to internationalize.</td> 
    </tr> 
   </tbody> 
  </table> 
  <h4>Identifying the Files to Parse</h4> 
  <p>The /filter section of the i18n.any file identifies the files that the xgettext-maven-plugin tool parses. Add several include and exclude rules that identify files that are parsed and ignored, respectively. You should include all files and then exclude the files that you do not want to parse. Typically, you exclude file types that do not contribute to the UI, or files that define UI but are not being translated. The include and exclude rules have the following format:</p> 
  <p><code class="code">{ /include "<i>pattern</i>" }
    <discoiqbr /> </code>{ /exclude "<i>pattern</i>" }</p> 
  <p>The pattern part of a rule is used to match the names of the files to include or exclude. The pattern prefix indicate whether you are matching a JCR node (its representation in Vault) or the file system.</p> 
  <table border="1" cellpadding="1" cellspacing="0" width="100%"> 
   <tbody> 
    <tr> 
     <th>Prefix</th> 
     <th>Effect</th> 
    </tr> 
    <tr> 
     <td>/</td> 
     <td>Indicates a JCR path. Therefore, this prefix matches files below the jcr_root directory.</td> 
    </tr> 
    <tr> 
     <td>*</td> 
     <td>Indicates a regular file on the file system.</td> 
    </tr> 
    <tr> 
     <td>none</td> 
     <td>No prefix, or a pattern that begins with a folder or file name, indicates a regular file on the file system.</td> 
    </tr> 
   </tbody> 
  </table> 
  <p>When used within a pattern, the / character indicates a subdirectory and the * character matches all. The following table lists several example rules.</p> 
  <table border="1" cellpadding="1" cellspacing="0" width="100%"> 
   <tbody> 
    <tr> 
     <th>Example rule</th> 
     <th>Effect</th> 
    </tr> 
    <tr> 
     <td><span class="code">{ /include "*" }</span></td> 
     <td>Include all files.</td> 
    </tr> 
    <tr> 
     <td><span class="code">{ /exclude "*.pdf" }</span></td> 
     <td>Exclude all PDF files.</td> 
    </tr> 
    <tr> 
     <td><span class="code"> { /exclude "*/pom.xml" }</span></td> 
     <td>Exclude POM files.</td> 
    </tr> 
    <tr> 
     <td><code class="code">{ /exclude "/content/*" }
       <discoiqbr /> { /include "/content/catalogs/geometrixx/templatepages" }
       <discoiqbr /> { /include "/content/catalogs/geometrixx/templatepages/*" }</code></td> 
     <td><p>Exclude all files below the /content node.</p> <p>Include the /content/catalogs/geometrixx/templatepages node.</p> <p>Include all child nodes of /content/catalogs/geometrixx/templatepages.</p> </td> 
    </tr> 
   </tbody> 
  </table> 
  <draft-comment type="draft"> 
   <h4>Identifying the JCR Properties to Parse</h4> 
  </draft-comment> 
  <h3>Extracting the Strings </h3> 
  <p>no POM:</p> 
  <codeblock class="syntax shell">
    mvn&amp;nbsp;-N&amp;nbsp;com.adobe.granite.maven:xgettext-maven-plugin:1.2.2:extract &amp;nbsp;-Dxgettext.verbose=true&amp;nbsp;-Dxgettext.target=out&amp;nbsp;-Dxgettext.rules=i18n.any&amp;nbsp;-Dxgettext.root=. 
  </codeblock> 
  <p>With POM: Add this to POM:</p> 
  <codeblock class="syntax xml">
    &lt;build&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;plugins&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;plugin&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;groupId&gt;com.adobe.granite.maven&lt;/groupId&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;artifactId&gt;xgettext-maven-plugin&lt;/artifactId&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;version&gt;1.1&lt;/version&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;configuration&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;rules&gt;i18n.any&lt;/rules&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;root&gt;jcr_root&lt;/root&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;xliff&gt;cq.xliff&lt;/xliff&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;verbose&gt;true&lt;/verbose&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/configuration&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/plugin&gt;!!discoiqbr!!&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/plugins&gt;!!discoiqbr!!&lt;/build&gt; 
  </codeblock> 
  <p>the command:</p> 
  <codeblock class="syntax shell">
    mvn&amp;nbsp;xgettext:extract 
  </codeblock> 
  <h3>Output Files</h3> 
  <p> </p> 
  <ul> 
   <li><span class="code">raw.xliff</span>: extracted strings</li> 
   <li><span class="code">warn.log</span>: warnings (if any), if <span class="code">CQ.I18n.getMessage()</span> API is used incorrectly. These always need a fix and then a re-run.</li> 
   <li><span class="code">parserwarn.log</span>: parser warnings (if any), e.g. js parser issues</li> 
   <li><span class="code">potentials.xliff</span>: "potential" candidates that are not extracted, but might be human readable strings that need translation (can be ignored, still produces a huge amount of false positives)</li> 
   <li><span class="code">strings.xliff</span>: flattened xliff file, to be imported into ALF</li> 
   <li><span class="code">backrefs.txt</span>: allows for quick lookup of source code locations for a given string</li> 
  </ul> 
 </body> 
</html>